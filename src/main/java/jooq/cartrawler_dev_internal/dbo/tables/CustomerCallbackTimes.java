/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.CustomerCallbackTimesRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CustomerCallbackTimes extends TableImpl<CustomerCallbackTimesRecord> {

    private static final long serialVersionUID = 1338337727;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.customer_callback_times</code>
     */
    public static final CustomerCallbackTimes CUSTOMER_CALLBACK_TIMES = new CustomerCallbackTimes();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CustomerCallbackTimesRecord> getRecordType() {
        return CustomerCallbackTimesRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.customer_callback_times.id</code>.
     */
    public final TableField<CustomerCallbackTimesRecord, UUID> ID = createField("id", org.jooq.impl.SQLDataType.UUID.nullable(false).defaultValue(org.jooq.impl.DSL.field("(newid())", org.jooq.impl.SQLDataType.UUID)), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.customer_callback_times.fk_callback</code>.
     */
    public final TableField<CustomerCallbackTimesRecord, Integer> FK_CALLBACK = createField("fk_callback", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.customer_callback_times.range_a</code>.
     */
    public final TableField<CustomerCallbackTimesRecord, Timestamp> RANGE_A = createField("range_a", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.customer_callback_times.range_b</code>.
     */
    public final TableField<CustomerCallbackTimesRecord, Timestamp> RANGE_B = createField("range_b", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.customer_callback_times</code> table reference
     */
    public CustomerCallbackTimes() {
        this(DSL.name("customer_callback_times"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.customer_callback_times</code> table reference
     */
    public CustomerCallbackTimes(String alias) {
        this(DSL.name(alias), CUSTOMER_CALLBACK_TIMES);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.customer_callback_times</code> table reference
     */
    public CustomerCallbackTimes(Name alias) {
        this(alias, CUSTOMER_CALLBACK_TIMES);
    }

    private CustomerCallbackTimes(Name alias, Table<CustomerCallbackTimesRecord> aliased) {
        this(alias, aliased, null);
    }

    private CustomerCallbackTimes(Name alias, Table<CustomerCallbackTimesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> CustomerCallbackTimes(Table<O> child, ForeignKey<O, CustomerCallbackTimesRecord> key) {
        super(child, key, CUSTOMER_CALLBACK_TIMES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CUSTOMER_CALLBACK_TIMES_PK_CUSTOMER_CALLBACK_TIMES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CustomerCallbackTimesRecord> getPrimaryKey() {
        return Keys.PK_CUSTOMER_CALLBACK_TIMES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CustomerCallbackTimesRecord>> getKeys() {
        return Arrays.<UniqueKey<CustomerCallbackTimesRecord>>asList(Keys.PK_CUSTOMER_CALLBACK_TIMES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CustomerCallbackTimes as(String alias) {
        return new CustomerCallbackTimes(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CustomerCallbackTimes as(Name alias) {
        return new CustomerCallbackTimes(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CustomerCallbackTimes rename(String name) {
        return new CustomerCallbackTimes(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CustomerCallbackTimes rename(Name name) {
        return new CustomerCallbackTimes(name, null);
    }
}
