/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.PayandshopidRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Payandshopid extends TableImpl<PayandshopidRecord> {

    private static final long serialVersionUID = 1174101351;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.payandshopid</code>
     */
    public static final Payandshopid PAYANDSHOPID = new Payandshopid();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PayandshopidRecord> getRecordType() {
        return PayandshopidRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.payandshopid.payandshop_id</code>.
     */
    public final TableField<PayandshopidRecord, Integer> PAYANDSHOP_ID = createField("payandshop_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.payandshopid.reservation_id</code>.
     */
    public final TableField<PayandshopidRecord, String> RESERVATION_ID = createField("reservation_id", org.jooq.impl.SQLDataType.VARCHAR(20), this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.payandshopid</code> table reference
     */
    public Payandshopid() {
        this(DSL.name("payandshopid"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.payandshopid</code> table reference
     */
    public Payandshopid(String alias) {
        this(DSL.name(alias), PAYANDSHOPID);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.payandshopid</code> table reference
     */
    public Payandshopid(Name alias) {
        this(alias, PAYANDSHOPID);
    }

    private Payandshopid(Name alias, Table<PayandshopidRecord> aliased) {
        this(alias, aliased, null);
    }

    private Payandshopid(Name alias, Table<PayandshopidRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Payandshopid(Table<O> child, ForeignKey<O, PayandshopidRecord> key) {
        super(child, key, PAYANDSHOPID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PAYANDSHOPID_PK_PAYANDSHOPID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<PayandshopidRecord, Integer> getIdentity() {
        return Keys.IDENTITY_PAYANDSHOPID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PayandshopidRecord> getPrimaryKey() {
        return Keys.PK_PAYANDSHOPID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PayandshopidRecord>> getKeys() {
        return Arrays.<UniqueKey<PayandshopidRecord>>asList(Keys.PK_PAYANDSHOPID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Payandshopid as(String alias) {
        return new Payandshopid(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Payandshopid as(Name alias) {
        return new Payandshopid(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Payandshopid rename(String name) {
        return new Payandshopid(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Payandshopid rename(Name name) {
        return new Payandshopid(name, null);
    }
}
