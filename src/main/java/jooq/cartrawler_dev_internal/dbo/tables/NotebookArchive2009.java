/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.NotebookArchive2009Record;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NotebookArchive2009 extends TableImpl<NotebookArchive2009Record> {

    private static final long serialVersionUID = -1442640636;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.Notebook_archive2009</code>
     */
    public static final NotebookArchive2009 NOTEBOOK_ARCHIVE2009 = new NotebookArchive2009();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<NotebookArchive2009Record> getRecordType() {
        return NotebookArchive2009Record.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Notebook_archive2009.Seq_No</code>.
     */
    public final TableField<NotebookArchive2009Record, Integer> SEQ_NO = createField("Seq_No", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Notebook_archive2009.Reservation_ID</code>.
     */
    public final TableField<NotebookArchive2009Record, String> RESERVATION_ID = createField("Reservation_ID", org.jooq.impl.SQLDataType.VARCHAR(20), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Notebook_archive2009.Note_Date</code>.
     */
    public final TableField<NotebookArchive2009Record, Timestamp> NOTE_DATE = createField("Note_Date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Notebook_archive2009.Note_Detail</code>.
     */
    public final TableField<NotebookArchive2009Record, String> NOTE_DETAIL = createField("Note_Detail", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Notebook_archive2009.Customer_Add</code>.
     */
    public final TableField<NotebookArchive2009Record, Boolean> CUSTOMER_ADD = createField("Customer_Add", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Notebook_archive2009.Complaint</code>.
     */
    public final TableField<NotebookArchive2009Record, Boolean> COMPLAINT = createField("Complaint", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Notebook_archive2009.Public_Text</code>.
     */
    public final TableField<NotebookArchive2009Record, Boolean> PUBLIC_TEXT = createField("Public_Text", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Notebook_archive2009.added_by</code>.
     */
    public final TableField<NotebookArchive2009Record, Integer> ADDED_BY = createField("added_by", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.Notebook_archive2009</code> table reference
     */
    public NotebookArchive2009() {
        this(DSL.name("Notebook_archive2009"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.Notebook_archive2009</code> table reference
     */
    public NotebookArchive2009(String alias) {
        this(DSL.name(alias), NOTEBOOK_ARCHIVE2009);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.Notebook_archive2009</code> table reference
     */
    public NotebookArchive2009(Name alias) {
        this(alias, NOTEBOOK_ARCHIVE2009);
    }

    private NotebookArchive2009(Name alias, Table<NotebookArchive2009Record> aliased) {
        this(alias, aliased, null);
    }

    private NotebookArchive2009(Name alias, Table<NotebookArchive2009Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> NotebookArchive2009(Table<O> child, ForeignKey<O, NotebookArchive2009Record> key) {
        super(child, key, NOTEBOOK_ARCHIVE2009);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.NOTEBOOK_ARCHIVE2009_PK_NOTEBOOK_ARCHIVE2009);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<NotebookArchive2009Record, Integer> getIdentity() {
        return Keys.IDENTITY_NOTEBOOK_ARCHIVE2009;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<NotebookArchive2009Record> getPrimaryKey() {
        return Keys.PK_NOTEBOOK_ARCHIVE2009;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<NotebookArchive2009Record>> getKeys() {
        return Arrays.<UniqueKey<NotebookArchive2009Record>>asList(Keys.PK_NOTEBOOK_ARCHIVE2009);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NotebookArchive2009 as(String alias) {
        return new NotebookArchive2009(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NotebookArchive2009 as(Name alias) {
        return new NotebookArchive2009(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public NotebookArchive2009 rename(String name) {
        return new NotebookArchive2009(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public NotebookArchive2009 rename(Name name) {
        return new NotebookArchive2009(name, null);
    }
}
