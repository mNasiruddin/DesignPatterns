/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.EnginetagsRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UByte;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Enginetags extends TableImpl<EnginetagsRecord> {

    private static final long serialVersionUID = 635821660;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.engineTags</code>
     */
    public static final Enginetags ENGINETAGS = new Enginetags();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EnginetagsRecord> getRecordType() {
        return EnginetagsRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.engineTags.id</code>.
     */
    public final TableField<EnginetagsRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.engineTags.queryDate</code>.
     */
    public final TableField<EnginetagsRecord, Timestamp> QUERYDATE = createField("queryDate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("(getdate())", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.engineTags.engineLoadID</code>.
     */
    public final TableField<EnginetagsRecord, Long> ENGINELOADID = createField("engineLoadID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.engineTags.tag</code>.
     */
    public final TableField<EnginetagsRecord, String> TAG = createField("tag", org.jooq.impl.SQLDataType.CHAR(10).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.engineTags.detail</code>.
     */
    public final TableField<EnginetagsRecord, String> DETAIL = createField("detail", org.jooq.impl.SQLDataType.CHAR(10).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.engineTags.container</code>.
     */
    public final TableField<EnginetagsRecord, UByte> CONTAINER = createField("container", org.jooq.impl.SQLDataType.TINYINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.engineTags.step</code>.
     */
    public final TableField<EnginetagsRecord, UByte> STEP = createField("step", org.jooq.impl.SQLDataType.TINYINTUNSIGNED, this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.engineTags</code> table reference
     */
    public Enginetags() {
        this(DSL.name("engineTags"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.engineTags</code> table reference
     */
    public Enginetags(String alias) {
        this(DSL.name(alias), ENGINETAGS);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.engineTags</code> table reference
     */
    public Enginetags(Name alias) {
        this(alias, ENGINETAGS);
    }

    private Enginetags(Name alias, Table<EnginetagsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Enginetags(Name alias, Table<EnginetagsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Enginetags(Table<O> child, ForeignKey<O, EnginetagsRecord> key) {
        super(child, key, ENGINETAGS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ENGINETAGS_PK_ENGINETAGS_NEW3);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<EnginetagsRecord, Long> getIdentity() {
        return Keys.IDENTITY_ENGINETAGS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<EnginetagsRecord> getPrimaryKey() {
        return Keys.PK_ENGINETAGS_NEW3;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<EnginetagsRecord>> getKeys() {
        return Arrays.<UniqueKey<EnginetagsRecord>>asList(Keys.PK_ENGINETAGS_NEW3);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Enginetags as(String alias) {
        return new Enginetags(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Enginetags as(Name alias) {
        return new Enginetags(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Enginetags rename(String name) {
        return new Enginetags(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Enginetags rename(Name name) {
        return new Enginetags(name, null);
    }
}
