/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.PlanbiasingRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Planbiasing extends TableImpl<PlanbiasingRecord> {

    private static final long serialVersionUID = 1459050305;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.PlanBiasing</code>
     */
    public static final Planbiasing PLANBIASING = new Planbiasing();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PlanbiasingRecord> getRecordType() {
        return PlanbiasingRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.PlanBiasing.guid</code>.
     */
    public final TableField<PlanbiasingRecord, UUID> GUID = createField("guid", org.jooq.impl.SQLDataType.UUID.nullable(false).defaultValue(org.jooq.impl.DSL.field("(newid())", org.jooq.impl.SQLDataType.UUID)), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.PlanBiasing.id</code>.
     */
    public final TableField<PlanbiasingRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.PlanBiasing.fk_plan</code>.
     */
    public final TableField<PlanbiasingRecord, Integer> FK_PLAN = createField("fk_plan", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.PlanBiasing.fk_contract</code>.
     */
    public final TableField<PlanbiasingRecord, Integer> FK_CONTRACT = createField("fk_contract", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.PlanBiasing.description</code>.
     */
    public final TableField<PlanbiasingRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.PlanBiasing.effectiveFrom</code>.
     */
    public final TableField<PlanbiasingRecord, Timestamp> EFFECTIVEFROM = createField("effectiveFrom", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.PlanBiasing.effectiveTo</code>.
     */
    public final TableField<PlanbiasingRecord, Timestamp> EFFECTIVETO = createField("effectiveTo", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.PlanBiasing.SIPPS</code>.
     */
    public final TableField<PlanbiasingRecord, String> SIPPS = createField("SIPPS", org.jooq.impl.SQLDataType.VARCHAR(256), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.PlanBiasing.fk_location</code>.
     */
    public final TableField<PlanbiasingRecord, Integer> FK_LOCATION = createField("fk_location", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.PlanBiasing.fk_client</code>.
     */
    public final TableField<PlanbiasingRecord, Integer> FK_CLIENT = createField("fk_client", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.PlanBiasing.biasMode</code>.
     */
    public final TableField<PlanbiasingRecord, String> BIASMODE = createField("biasMode", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.PlanBiasing.biasAmount</code>.
     */
    public final TableField<PlanbiasingRecord, BigDecimal> BIASAMOUNT = createField("biasAmount", org.jooq.impl.SQLDataType.NUMERIC(18, 2), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.PlanBiasing.targetMode</code>.
     */
    public final TableField<PlanbiasingRecord, String> TARGETMODE = createField("targetMode", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.PlanBiasing.targetAmount</code>.
     */
    public final TableField<PlanbiasingRecord, BigDecimal> TARGETAMOUNT = createField("targetAmount", org.jooq.impl.SQLDataType.NUMERIC(18, 2).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.PlanBiasing.pickupMode</code>.
     */
    public final TableField<PlanbiasingRecord, String> PICKUPMODE = createField("pickupMode", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.PlanBiasing.pickupFrom</code>.
     */
    public final TableField<PlanbiasingRecord, Timestamp> PICKUPFROM = createField("pickupFrom", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.PlanBiasing.pickupTo</code>.
     */
    public final TableField<PlanbiasingRecord, Timestamp> PICKUPTO = createField("pickupTo", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.PlanBiasing.actionMode</code>.
     */
    public final TableField<PlanbiasingRecord, String> ACTIONMODE = createField("actionMode", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.PlanBiasing.fk_country</code>.
     */
    public final TableField<PlanbiasingRecord, String> FK_COUNTRY = createField("fk_country", org.jooq.impl.SQLDataType.CHAR(2), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.PlanBiasing.global</code>.
     */
    public final TableField<PlanbiasingRecord, Boolean> GLOBAL = createField("global", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.PlanBiasing.countUsingContract</code>.
     */
    public final TableField<PlanbiasingRecord, Boolean> COUNTUSINGCONTRACT = createField("countUsingContract", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.PlanBiasing.amendedBy</code>.
     */
    public final TableField<PlanbiasingRecord, Integer> AMENDEDBY = createField("amendedBy", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.PlanBiasing.includeRebate</code>.
     */
    public final TableField<PlanbiasingRecord, Boolean> INCLUDEREBATE = createField("includeRebate", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.PlanBiasing.cutoff_percent</code>.
     */
    public final TableField<PlanbiasingRecord, Long> CUTOFF_PERCENT = createField("cutoff_percent", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.PlanBiasing.fk_virtualLocation</code>.
     */
    public final TableField<PlanbiasingRecord, Integer> FK_VIRTUALLOCATION = createField("fk_virtualLocation", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.PlanBiasing.blackoutTo</code>.
     */
    public final TableField<PlanbiasingRecord, Timestamp> BLACKOUTTO = createField("blackoutTo", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.PlanBiasing.blackoutDays</code>.
     */
    public final TableField<PlanbiasingRecord, Integer> BLACKOUTDAYS = createField("blackoutDays", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.PlanBiasing.name</code>.
     */
    public final TableField<PlanbiasingRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(128), this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.PlanBiasing</code> table reference
     */
    public Planbiasing() {
        this(DSL.name("PlanBiasing"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.PlanBiasing</code> table reference
     */
    public Planbiasing(String alias) {
        this(DSL.name(alias), PLANBIASING);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.PlanBiasing</code> table reference
     */
    public Planbiasing(Name alias) {
        this(alias, PLANBIASING);
    }

    private Planbiasing(Name alias, Table<PlanbiasingRecord> aliased) {
        this(alias, aliased, null);
    }

    private Planbiasing(Name alias, Table<PlanbiasingRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Planbiasing(Table<O> child, ForeignKey<O, PlanbiasingRecord> key) {
        super(child, key, PLANBIASING);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PLANBIASING_PK_PLANBIASING);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<PlanbiasingRecord, Integer> getIdentity() {
        return Keys.IDENTITY_PLANBIASING;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PlanbiasingRecord> getPrimaryKey() {
        return Keys.PK_PLANBIASING;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PlanbiasingRecord>> getKeys() {
        return Arrays.<UniqueKey<PlanbiasingRecord>>asList(Keys.PK_PLANBIASING);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Planbiasing as(String alias) {
        return new Planbiasing(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Planbiasing as(Name alias) {
        return new Planbiasing(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Planbiasing rename(String name) {
        return new Planbiasing(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Planbiasing rename(Name name) {
        return new Planbiasing(name, null);
    }
}
