/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.SurveyresultRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Surveyresult extends TableImpl<SurveyresultRecord> {

    private static final long serialVersionUID = -1879600827;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.SurveyResult</code>
     */
    public static final Surveyresult SURVEYRESULT = new Surveyresult();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SurveyresultRecord> getRecordType() {
        return SurveyresultRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.SurveyResult.guid</code>.
     */
    public final TableField<SurveyresultRecord, UUID> GUID = createField("guid", org.jooq.impl.SQLDataType.UUID.nullable(false).defaultValue(org.jooq.impl.DSL.field("(newid())", org.jooq.impl.SQLDataType.UUID)), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.SurveyResult.fk_reservation</code>.
     */
    public final TableField<SurveyresultRecord, Integer> FK_RESERVATION = createField("fk_reservation", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.SurveyResult.fk_survey</code>.
     */
    public final TableField<SurveyresultRecord, Integer> FK_SURVEY = createField("fk_survey", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.SurveyResult.created</code>.
     */
    public final TableField<SurveyresultRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("(getdate())", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.SurveyResult</code> table reference
     */
    public Surveyresult() {
        this(DSL.name("SurveyResult"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.SurveyResult</code> table reference
     */
    public Surveyresult(String alias) {
        this(DSL.name(alias), SURVEYRESULT);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.SurveyResult</code> table reference
     */
    public Surveyresult(Name alias) {
        this(alias, SURVEYRESULT);
    }

    private Surveyresult(Name alias, Table<SurveyresultRecord> aliased) {
        this(alias, aliased, null);
    }

    private Surveyresult(Name alias, Table<SurveyresultRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Surveyresult(Table<O> child, ForeignKey<O, SurveyresultRecord> key) {
        super(child, key, SURVEYRESULT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SURVEYRESULT_PK_SURVEYRESULT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SurveyresultRecord> getPrimaryKey() {
        return Keys.PK_SURVEYRESULT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SurveyresultRecord>> getKeys() {
        return Arrays.<UniqueKey<SurveyresultRecord>>asList(Keys.PK_SURVEYRESULT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Surveyresult as(String alias) {
        return new Surveyresult(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Surveyresult as(Name alias) {
        return new Surveyresult(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Surveyresult rename(String name) {
        return new Surveyresult(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Surveyresult rename(Name name) {
        return new Surveyresult(name, null);
    }
}
