/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.BookingAgentRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BookingAgent extends TableImpl<BookingAgentRecord> {

    private static final long serialVersionUID = -1644869938;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.Booking_Agent</code>
     */
    public static final BookingAgent BOOKING_AGENT = new BookingAgent();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BookingAgentRecord> getRecordType() {
        return BookingAgentRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Booking_Agent.key</code>.
     */
    public final TableField<BookingAgentRecord, Integer> KEY = createField("key", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Booking_Agent.BAgent_ID</code>.
     */
    public final TableField<BookingAgentRecord, Integer> BAGENT_ID = createField("BAgent_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Booking_Agent.BAgent_Company</code>.
     */
    public final TableField<BookingAgentRecord, String> BAGENT_COMPANY = createField("BAgent_Company", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Booking_Agent.BAgent_Email</code>.
     */
    public final TableField<BookingAgentRecord, String> BAGENT_EMAIL = createField("BAgent_Email", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Booking_Agent.BAgent_Phone</code>.
     */
    public final TableField<BookingAgentRecord, String> BAGENT_PHONE = createField("BAgent_Phone", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Booking_Agent.BAgent_Contact</code>.
     */
    public final TableField<BookingAgentRecord, String> BAGENT_CONTACT = createField("BAgent_Contact", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Booking_Agent.BAgent_Country</code>.
     */
    public final TableField<BookingAgentRecord, String> BAGENT_COUNTRY = createField("BAgent_Country", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.Booking_Agent</code> table reference
     */
    public BookingAgent() {
        this(DSL.name("Booking_Agent"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.Booking_Agent</code> table reference
     */
    public BookingAgent(String alias) {
        this(DSL.name(alias), BOOKING_AGENT);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.Booking_Agent</code> table reference
     */
    public BookingAgent(Name alias) {
        this(alias, BOOKING_AGENT);
    }

    private BookingAgent(Name alias, Table<BookingAgentRecord> aliased) {
        this(alias, aliased, null);
    }

    private BookingAgent(Name alias, Table<BookingAgentRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> BookingAgent(Table<O> child, ForeignKey<O, BookingAgentRecord> key) {
        super(child, key, BOOKING_AGENT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.BOOKING_AGENT_PK_BOOKING_AGENT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<BookingAgentRecord, Integer> getIdentity() {
        return Keys.IDENTITY_BOOKING_AGENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<BookingAgentRecord> getPrimaryKey() {
        return Keys.PK_BOOKING_AGENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<BookingAgentRecord>> getKeys() {
        return Arrays.<UniqueKey<BookingAgentRecord>>asList(Keys.PK_BOOKING_AGENT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BookingAgent as(String alias) {
        return new BookingAgent(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BookingAgent as(Name alias) {
        return new BookingAgent(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public BookingAgent rename(String name) {
        return new BookingAgent(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public BookingAgent rename(Name name) {
        return new BookingAgent(name, null);
    }
}
