/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.ClientPlansRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ClientPlans extends TableImpl<ClientPlansRecord> {

    private static final long serialVersionUID = -1460372679;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.Client_Plans</code>
     */
    public static final ClientPlans CLIENT_PLANS = new ClientPlans();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ClientPlansRecord> getRecordType() {
        return ClientPlansRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Client_Plans.id</code>.
     */
    public final TableField<ClientPlansRecord, UUID> ID = createField("id", org.jooq.impl.SQLDataType.UUID.nullable(false).defaultValue(org.jooq.impl.DSL.field("(newid())", org.jooq.impl.SQLDataType.UUID)), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Client_Plans.Plan_ID</code>.
     */
    public final TableField<ClientPlansRecord, Integer> PLAN_ID = createField("Plan_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Client_Plans.Xml_Agent_Type</code>.
     */
    public final TableField<ClientPlansRecord, String> XML_AGENT_TYPE = createField("Xml_Agent_Type", org.jooq.impl.SQLDataType.VARCHAR(2).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Client_Plans.Property</code>.
     */
    public final TableField<ClientPlansRecord, String> PROPERTY = createField("Property", org.jooq.impl.SQLDataType.VARCHAR(60).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Client_Plans.Val</code>.
     */
    public final TableField<ClientPlansRecord, String> VAL = createField("Val", org.jooq.impl.SQLDataType.VARCHAR(120).nullable(false), this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.Client_Plans</code> table reference
     */
    public ClientPlans() {
        this(DSL.name("Client_Plans"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.Client_Plans</code> table reference
     */
    public ClientPlans(String alias) {
        this(DSL.name(alias), CLIENT_PLANS);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.Client_Plans</code> table reference
     */
    public ClientPlans(Name alias) {
        this(alias, CLIENT_PLANS);
    }

    private ClientPlans(Name alias, Table<ClientPlansRecord> aliased) {
        this(alias, aliased, null);
    }

    private ClientPlans(Name alias, Table<ClientPlansRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> ClientPlans(Table<O> child, ForeignKey<O, ClientPlansRecord> key) {
        super(child, key, CLIENT_PLANS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CLIENT_PLANS_IX_CLIENT_PLANS, Indexes.CLIENT_PLANS_PK_CLIENT_PLANS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ClientPlansRecord> getPrimaryKey() {
        return Keys.PK_CLIENT_PLANS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ClientPlansRecord>> getKeys() {
        return Arrays.<UniqueKey<ClientPlansRecord>>asList(Keys.PK_CLIENT_PLANS, Keys.IX_CLIENT_PLANS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ClientPlansRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ClientPlansRecord, ?>>asList(Keys.FK_CLIENT_PLANS_CLIENT_PLAN);
    }

    public ClientPlan clientPlan() {
        return new ClientPlan(this, Keys.FK_CLIENT_PLANS_CLIENT_PLAN);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClientPlans as(String alias) {
        return new ClientPlans(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClientPlans as(Name alias) {
        return new ClientPlans(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ClientPlans rename(String name) {
        return new ClientPlans(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ClientPlans rename(Name name) {
        return new ClientPlans(name, null);
    }
}
