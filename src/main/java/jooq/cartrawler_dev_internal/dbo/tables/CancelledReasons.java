/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.CancelledReasonsRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CancelledReasons extends TableImpl<CancelledReasonsRecord> {

    private static final long serialVersionUID = -1071975397;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.cancelled_reasons</code>
     */
    public static final CancelledReasons CANCELLED_REASONS = new CancelledReasons();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CancelledReasonsRecord> getRecordType() {
        return CancelledReasonsRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.cancelled_reasons.guid</code>.
     */
    public final TableField<CancelledReasonsRecord, UUID> GUID = createField("guid", org.jooq.impl.SQLDataType.UUID.nullable(false).defaultValue(org.jooq.impl.DSL.field("(newid())", org.jooq.impl.SQLDataType.UUID)), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.cancelled_reasons.cancelled_id</code>.
     */
    public final TableField<CancelledReasonsRecord, Integer> CANCELLED_ID = createField("cancelled_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.cancelled_reasons.cancelled_name</code>.
     */
    public final TableField<CancelledReasonsRecord, String> CANCELLED_NAME = createField("cancelled_name", org.jooq.impl.SQLDataType.VARCHAR(128), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.cancelled_reasons.date_added</code>.
     */
    public final TableField<CancelledReasonsRecord, Timestamp> DATE_ADDED = createField("date_added", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.cancelled_reasons.status</code>.
     */
    public final TableField<CancelledReasonsRecord, Boolean> STATUS = createField("status", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.cancelled_reasons.cancel_type</code>.
     */
    public final TableField<CancelledReasonsRecord, Integer> CANCEL_TYPE = createField("cancel_type", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.cancelled_reasons</code> table reference
     */
    public CancelledReasons() {
        this(DSL.name("cancelled_reasons"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.cancelled_reasons</code> table reference
     */
    public CancelledReasons(String alias) {
        this(DSL.name(alias), CANCELLED_REASONS);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.cancelled_reasons</code> table reference
     */
    public CancelledReasons(Name alias) {
        this(alias, CANCELLED_REASONS);
    }

    private CancelledReasons(Name alias, Table<CancelledReasonsRecord> aliased) {
        this(alias, aliased, null);
    }

    private CancelledReasons(Name alias, Table<CancelledReasonsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> CancelledReasons(Table<O> child, ForeignKey<O, CancelledReasonsRecord> key) {
        super(child, key, CANCELLED_REASONS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CANCELLED_REASONS_PK_CANCELLED_REASONS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CancelledReasonsRecord> getPrimaryKey() {
        return Keys.PK_CANCELLED_REASONS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CancelledReasonsRecord>> getKeys() {
        return Arrays.<UniqueKey<CancelledReasonsRecord>>asList(Keys.PK_CANCELLED_REASONS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CancelledReasons as(String alias) {
        return new CancelledReasons(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CancelledReasons as(Name alias) {
        return new CancelledReasons(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CancelledReasons rename(String name) {
        return new CancelledReasons(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CancelledReasons rename(Name name) {
        return new CancelledReasons(name, null);
    }
}
