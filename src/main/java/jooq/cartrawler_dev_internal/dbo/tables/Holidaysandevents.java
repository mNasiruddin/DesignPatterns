/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.HolidaysandeventsRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Holidaysandevents extends TableImpl<HolidaysandeventsRecord> {

    private static final long serialVersionUID = -1188285916;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.HolidaysAndEvents</code>
     */
    public static final Holidaysandevents HOLIDAYSANDEVENTS = new Holidaysandevents();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<HolidaysandeventsRecord> getRecordType() {
        return HolidaysandeventsRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.HolidaysAndEvents.guid</code>.
     */
    public final TableField<HolidaysandeventsRecord, UUID> GUID = createField("guid", org.jooq.impl.SQLDataType.UUID.nullable(false).defaultValue(org.jooq.impl.DSL.field("(newid())", org.jooq.impl.SQLDataType.UUID)), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.HolidaysAndEvents.ID</code>.
     */
    public final TableField<HolidaysandeventsRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.HolidaysAndEvents.country_id</code>.
     */
    public final TableField<HolidaysandeventsRecord, String> COUNTRY_ID = createField("country_id", org.jooq.impl.SQLDataType.CHAR(2), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.HolidaysAndEvents.date</code>.
     */
    public final TableField<HolidaysandeventsRecord, Timestamp> DATE = createField("date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.HolidaysAndEvents.linkedID</code>.
     */
    public final TableField<HolidaysandeventsRecord, Integer> LINKEDID = createField("linkedID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.HolidaysAndEvents.name</code>.
     */
    public final TableField<HolidaysandeventsRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.NVARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.HolidaysAndEvents.observance</code>.
     */
    public final TableField<HolidaysandeventsRecord, String> OBSERVANCE = createField("observance", org.jooq.impl.SQLDataType.NVARCHAR(255), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.HolidaysAndEvents.Calendar</code>.
     */
    public final TableField<HolidaysandeventsRecord, String> CALENDAR = createField("Calendar", org.jooq.impl.SQLDataType.NVARCHAR(500), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.HolidaysAndEvents.updateDate</code>.
     */
    public final TableField<HolidaysandeventsRecord, Timestamp> UPDATEDATE = createField("updateDate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("(getdate())", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.HolidaysAndEvents.parent_id</code>.
     */
    public final TableField<HolidaysandeventsRecord, Integer> PARENT_ID = createField("parent_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.HolidaysAndEvents.fk_user</code>.
     */
    public final TableField<HolidaysandeventsRecord, Integer> FK_USER = createField("fk_user", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.HolidaysAndEvents</code> table reference
     */
    public Holidaysandevents() {
        this(DSL.name("HolidaysAndEvents"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.HolidaysAndEvents</code> table reference
     */
    public Holidaysandevents(String alias) {
        this(DSL.name(alias), HOLIDAYSANDEVENTS);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.HolidaysAndEvents</code> table reference
     */
    public Holidaysandevents(Name alias) {
        this(alias, HOLIDAYSANDEVENTS);
    }

    private Holidaysandevents(Name alias, Table<HolidaysandeventsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Holidaysandevents(Name alias, Table<HolidaysandeventsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Holidaysandevents(Table<O> child, ForeignKey<O, HolidaysandeventsRecord> key) {
        super(child, key, HOLIDAYSANDEVENTS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.HOLIDAYSANDEVENTS_PK_HOLIDAYSANDEVENTS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<HolidaysandeventsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_HOLIDAYSANDEVENTS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<HolidaysandeventsRecord> getPrimaryKey() {
        return Keys.PK_HOLIDAYSANDEVENTS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<HolidaysandeventsRecord>> getKeys() {
        return Arrays.<UniqueKey<HolidaysandeventsRecord>>asList(Keys.PK_HOLIDAYSANDEVENTS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Holidaysandevents as(String alias) {
        return new Holidaysandevents(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Holidaysandevents as(Name alias) {
        return new Holidaysandevents(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Holidaysandevents rename(String name) {
        return new Holidaysandevents(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Holidaysandevents rename(Name name) {
        return new Holidaysandevents(name, null);
    }
}
