/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.ReservationExtrasRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ReservationExtras extends TableImpl<ReservationExtrasRecord> {

    private static final long serialVersionUID = 2052918945;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.Reservation_Extras</code>
     */
    public static final ReservationExtras RESERVATION_EXTRAS = new ReservationExtras();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ReservationExtrasRecord> getRecordType() {
        return ReservationExtrasRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Reservation_Extras.id</code>.
     */
    public final TableField<ReservationExtrasRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Reservation_Extras.reservation_id</code>.
     */
    public final TableField<ReservationExtrasRecord, String> RESERVATION_ID = createField("reservation_id", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Reservation_Extras.optional_id</code>.
     */
    public final TableField<ReservationExtrasRecord, Integer> OPTIONAL_ID = createField("optional_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Reservation_Extras.price</code>.
     */
    public final TableField<ReservationExtrasRecord, BigDecimal> PRICE = createField("price", org.jooq.impl.SQLDataType.NUMERIC(9, 2), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Reservation_Extras.daily_rate</code>.
     */
    public final TableField<ReservationExtrasRecord, Boolean> DAILY_RATE = createField("daily_rate", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Reservation_Extras.XRS_Status</code>.
     */
    public final TableField<ReservationExtrasRecord, String> XRS_STATUS = createField("XRS_Status", org.jooq.impl.SQLDataType.VARCHAR(3), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Reservation_Extras.XRS_Code</code>.
     */
    public final TableField<ReservationExtrasRecord, String> XRS_CODE = createField("XRS_Code", org.jooq.impl.SQLDataType.VARCHAR(6), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Reservation_Extras.quantity</code>.
     */
    public final TableField<ReservationExtrasRecord, Integer> QUANTITY = createField("quantity", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Reservation_Extras.OTA_EQP_Code</code>.
     */
    public final TableField<ReservationExtrasRecord, String> OTA_EQP_CODE = createField("OTA_EQP_Code", org.jooq.impl.SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Reservation_Extras.includedInRate</code>.
     */
    public final TableField<ReservationExtrasRecord, Boolean> INCLUDEDINRATE = createField("includedInRate", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Reservation_Extras.taxInclusive</code>.
     */
    public final TableField<ReservationExtrasRecord, Boolean> TAXINCLUSIVE = createField("taxInclusive", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Reservation_Extras.currencyID</code>.
     */
    public final TableField<ReservationExtrasRecord, String> CURRENCYID = createField("currencyID", org.jooq.impl.SQLDataType.VARCHAR(3), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Reservation_Extras.required</code>.
     */
    public final TableField<ReservationExtrasRecord, Boolean> REQUIRED = createField("required", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Reservation_Extras.insertdate</code>.
     */
    public final TableField<ReservationExtrasRecord, Timestamp> INSERTDATE = createField("insertdate", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("(getdate())", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.Reservation_Extras</code> table reference
     */
    public ReservationExtras() {
        this(DSL.name("Reservation_Extras"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.Reservation_Extras</code> table reference
     */
    public ReservationExtras(String alias) {
        this(DSL.name(alias), RESERVATION_EXTRAS);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.Reservation_Extras</code> table reference
     */
    public ReservationExtras(Name alias) {
        this(alias, RESERVATION_EXTRAS);
    }

    private ReservationExtras(Name alias, Table<ReservationExtrasRecord> aliased) {
        this(alias, aliased, null);
    }

    private ReservationExtras(Name alias, Table<ReservationExtrasRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> ReservationExtras(Table<O> child, ForeignKey<O, ReservationExtrasRecord> key) {
        super(child, key, RESERVATION_EXTRAS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.RESERVATION_EXTRAS_PK_RESERVATION_EXTRAS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ReservationExtrasRecord, Integer> getIdentity() {
        return Keys.IDENTITY_RESERVATION_EXTRAS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ReservationExtrasRecord> getPrimaryKey() {
        return Keys.PK_RESERVATION_EXTRAS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ReservationExtrasRecord>> getKeys() {
        return Arrays.<UniqueKey<ReservationExtrasRecord>>asList(Keys.PK_RESERVATION_EXTRAS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReservationExtras as(String alias) {
        return new ReservationExtras(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReservationExtras as(Name alias) {
        return new ReservationExtras(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ReservationExtras rename(String name) {
        return new ReservationExtras(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ReservationExtras rename(Name name) {
        return new ReservationExtras(name, null);
    }
}
