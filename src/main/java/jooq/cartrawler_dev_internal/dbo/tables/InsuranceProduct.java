/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.InsuranceProductRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InsuranceProduct extends TableImpl<InsuranceProductRecord> {

    private static final long serialVersionUID = -744962284;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.insurance_product</code>
     */
    public static final InsuranceProduct INSURANCE_PRODUCT = new InsuranceProduct();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<InsuranceProductRecord> getRecordType() {
        return InsuranceProductRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.insurance_product.ID</code>.
     */
    public final TableField<InsuranceProductRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.insurance_product.org</code>.
     */
    public final TableField<InsuranceProductRecord, String> ORG = createField("org", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.insurance_product.product</code>.
     */
    public final TableField<InsuranceProductRecord, String> PRODUCT = createField("product", org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.insurance_product.code</code>.
     */
    public final TableField<InsuranceProductRecord, String> CODE = createField("code", org.jooq.impl.SQLDataType.VARCHAR(10).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.insurance_product.detail</code>.
     */
    public final TableField<InsuranceProductRecord, String> DETAIL = createField("detail", org.jooq.impl.SQLDataType.VARCHAR(120), this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.insurance_product</code> table reference
     */
    public InsuranceProduct() {
        this(DSL.name("insurance_product"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.insurance_product</code> table reference
     */
    public InsuranceProduct(String alias) {
        this(DSL.name(alias), INSURANCE_PRODUCT);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.insurance_product</code> table reference
     */
    public InsuranceProduct(Name alias) {
        this(alias, INSURANCE_PRODUCT);
    }

    private InsuranceProduct(Name alias, Table<InsuranceProductRecord> aliased) {
        this(alias, aliased, null);
    }

    private InsuranceProduct(Name alias, Table<InsuranceProductRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> InsuranceProduct(Table<O> child, ForeignKey<O, InsuranceProductRecord> key) {
        super(child, key, INSURANCE_PRODUCT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.INSURANCE_PRODUCT_PK_INSURANCE_PRODUCT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<InsuranceProductRecord, Integer> getIdentity() {
        return Keys.IDENTITY_INSURANCE_PRODUCT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<InsuranceProductRecord> getPrimaryKey() {
        return Keys.PK_INSURANCE_PRODUCT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<InsuranceProductRecord>> getKeys() {
        return Arrays.<UniqueKey<InsuranceProductRecord>>asList(Keys.PK_INSURANCE_PRODUCT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InsuranceProduct as(String alias) {
        return new InsuranceProduct(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InsuranceProduct as(Name alias) {
        return new InsuranceProduct(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public InsuranceProduct rename(String name) {
        return new InsuranceProduct(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public InsuranceProduct rename(Name name) {
        return new InsuranceProduct(name, null);
    }
}
