/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.MaploadsRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UByte;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Maploads extends TableImpl<MaploadsRecord> {

    private static final long serialVersionUID = -1296601694;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.mapLoads</code>
     */
    public static final Maploads MAPLOADS = new Maploads();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MaploadsRecord> getRecordType() {
        return MaploadsRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.mapLoads.id</code>.
     */
    public final TableField<MaploadsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.mapLoads.customer_id</code>.
     */
    public final TableField<MaploadsRecord, Long> CUSTOMER_ID = createField("customer_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.mapLoads.latitude</code>.
     */
    public final TableField<MaploadsRecord, BigDecimal> LATITUDE = createField("latitude", org.jooq.impl.SQLDataType.NUMERIC(18, 8).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.mapLoads.longitude</code>.
     */
    public final TableField<MaploadsRecord, BigDecimal> LONGITUDE = createField("longitude", org.jooq.impl.SQLDataType.NUMERIC(18, 8).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.mapLoads.residency</code>.
     */
    public final TableField<MaploadsRecord, String> RESIDENCY = createField("residency", org.jooq.impl.SQLDataType.CHAR(2).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.mapLoads.country_id</code>.
     */
    public final TableField<MaploadsRecord, String> COUNTRY_ID = createField("country_id", org.jooq.impl.SQLDataType.CHAR(2).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.mapLoads.parent_id</code>.
     */
    public final TableField<MaploadsRecord, Integer> PARENT_ID = createField("parent_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.mapLoads.client_id</code>.
     */
    public final TableField<MaploadsRecord, Integer> CLIENT_ID = createField("client_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.mapLoads.fk_mapLoadTitle</code>.
     */
    public final TableField<MaploadsRecord, Integer> FK_MAPLOADTITLE = createField("fk_mapLoadTitle", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.mapLoads.physicalip</code>.
     */
    public final TableField<MaploadsRecord, Integer> PHYSICALIP = createField("physicalip", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.mapLoads.priced_markers</code>.
     */
    public final TableField<MaploadsRecord, Integer> PRICED_MARKERS = createField("priced_markers", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.mapLoads.unpriced_markers</code>.
     */
    public final TableField<MaploadsRecord, Integer> UNPRICED_MARKERS = createField("unpriced_markers", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.mapLoads.querydate</code>.
     */
    public final TableField<MaploadsRecord, Timestamp> QUERYDATE = createField("querydate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("(getdate())", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.mapLoads.engineLoadID</code>.
     */
    public final TableField<MaploadsRecord, Long> ENGINELOADID = createField("engineLoadID", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.mapLoads.consumerip</code>.
     */
    public final TableField<MaploadsRecord, Integer> CONSUMERIP = createField("consumerip", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.mapLoads.testToken</code>.
     */
    public final TableField<MaploadsRecord, UByte> TESTTOKEN = createField("testToken", org.jooq.impl.SQLDataType.TINYINTUNSIGNED, this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.mapLoads</code> table reference
     */
    public Maploads() {
        this(DSL.name("mapLoads"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.mapLoads</code> table reference
     */
    public Maploads(String alias) {
        this(DSL.name(alias), MAPLOADS);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.mapLoads</code> table reference
     */
    public Maploads(Name alias) {
        this(alias, MAPLOADS);
    }

    private Maploads(Name alias, Table<MaploadsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Maploads(Name alias, Table<MaploadsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Maploads(Table<O> child, ForeignKey<O, MaploadsRecord> key) {
        super(child, key, MAPLOADS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.MAPLOADS_PK_MAPLOADS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<MaploadsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_MAPLOADS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MaploadsRecord> getPrimaryKey() {
        return Keys.PK_MAPLOADS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MaploadsRecord>> getKeys() {
        return Arrays.<UniqueKey<MaploadsRecord>>asList(Keys.PK_MAPLOADS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Maploads as(String alias) {
        return new Maploads(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Maploads as(Name alias) {
        return new Maploads(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Maploads rename(String name) {
        return new Maploads(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Maploads rename(Name name) {
        return new Maploads(name, null);
    }
}
