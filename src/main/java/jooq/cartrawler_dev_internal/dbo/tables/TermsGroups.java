/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.TermsGroupsRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TermsGroups extends TableImpl<TermsGroupsRecord> {

    private static final long serialVersionUID = 1877179686;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.Terms_Groups</code>
     */
    public static final TermsGroups TERMS_GROUPS = new TermsGroups();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TermsGroupsRecord> getRecordType() {
        return TermsGroupsRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Terms_Groups.Group_ID</code>.
     */
    public final TableField<TermsGroupsRecord, Integer> GROUP_ID = createField("Group_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Terms_Groups.Heading</code>.
     */
    public final TableField<TermsGroupsRecord, String> HEADING = createField("Heading", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.Terms_Groups</code> table reference
     */
    public TermsGroups() {
        this(DSL.name("Terms_Groups"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.Terms_Groups</code> table reference
     */
    public TermsGroups(String alias) {
        this(DSL.name(alias), TERMS_GROUPS);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.Terms_Groups</code> table reference
     */
    public TermsGroups(Name alias) {
        this(alias, TERMS_GROUPS);
    }

    private TermsGroups(Name alias, Table<TermsGroupsRecord> aliased) {
        this(alias, aliased, null);
    }

    private TermsGroups(Name alias, Table<TermsGroupsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TermsGroups(Table<O> child, ForeignKey<O, TermsGroupsRecord> key) {
        super(child, key, TERMS_GROUPS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.TERMS_GROUPS_PK_TERMS_GROUPS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TermsGroupsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_TERMS_GROUPS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TermsGroupsRecord> getPrimaryKey() {
        return Keys.PK_TERMS_GROUPS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TermsGroupsRecord>> getKeys() {
        return Arrays.<UniqueKey<TermsGroupsRecord>>asList(Keys.PK_TERMS_GROUPS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TermsGroups as(String alias) {
        return new TermsGroups(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TermsGroups as(Name alias) {
        return new TermsGroups(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TermsGroups rename(String name) {
        return new TermsGroups(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TermsGroups rename(Name name) {
        return new TermsGroups(name, null);
    }
}
