/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.DircategoryRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Dircategory extends TableImpl<DircategoryRecord> {

    private static final long serialVersionUID = 662310770;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.DirCategory</code>
     */
    public static final Dircategory DIRCATEGORY = new Dircategory();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DircategoryRecord> getRecordType() {
        return DircategoryRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.DirCategory.Group_ID</code>.
     */
    public final TableField<DircategoryRecord, String> GROUP_ID = createField("Group_ID", org.jooq.impl.SQLDataType.CHAR(2).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.DirCategory.Category_ID</code>.
     */
    public final TableField<DircategoryRecord, Integer> CATEGORY_ID = createField("Category_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.DirCategory.Description</code>.
     */
    public final TableField<DircategoryRecord, String> DESCRIPTION = createField("Description", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.DirCategory</code> table reference
     */
    public Dircategory() {
        this(DSL.name("DirCategory"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.DirCategory</code> table reference
     */
    public Dircategory(String alias) {
        this(DSL.name(alias), DIRCATEGORY);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.DirCategory</code> table reference
     */
    public Dircategory(Name alias) {
        this(alias, DIRCATEGORY);
    }

    private Dircategory(Name alias, Table<DircategoryRecord> aliased) {
        this(alias, aliased, null);
    }

    private Dircategory(Name alias, Table<DircategoryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Dircategory(Table<O> child, ForeignKey<O, DircategoryRecord> key) {
        super(child, key, DIRCATEGORY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.DIRCATEGORY_PK_DIRCATEGORY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DircategoryRecord> getPrimaryKey() {
        return Keys.PK_DIRCATEGORY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DircategoryRecord>> getKeys() {
        return Arrays.<UniqueKey<DircategoryRecord>>asList(Keys.PK_DIRCATEGORY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Dircategory as(String alias) {
        return new Dircategory(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Dircategory as(Name alias) {
        return new Dircategory(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Dircategory rename(String name) {
        return new Dircategory(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Dircategory rename(Name name) {
        return new Dircategory(name, null);
    }
}
