/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.TraveladviceRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UByte;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Traveladvice extends TableImpl<TraveladviceRecord> {

    private static final long serialVersionUID = -292995225;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.TravelAdvice</code>
     */
    public static final Traveladvice TRAVELADVICE = new Traveladvice();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TraveladviceRecord> getRecordType() {
        return TraveladviceRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.TravelAdvice.idTravelAdvice</code>.
     */
    public final TableField<TraveladviceRecord, Integer> IDTRAVELADVICE = createField("idTravelAdvice", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.TravelAdvice.idLocation</code>.
     */
    public final TableField<TraveladviceRecord, Integer> IDLOCATION = createField("idLocation", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.TravelAdvice.CountryID</code>.
     */
    public final TableField<TraveladviceRecord, String> COUNTRYID = createField("CountryID", org.jooq.impl.SQLDataType.VARCHAR(2).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.TravelAdvice.idCategory</code>.
     */
    public final TableField<TraveladviceRecord, Integer> IDCATEGORY = createField("idCategory", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.TravelAdvice.CustName</code>.
     */
    public final TableField<TraveladviceRecord, String> CUSTNAME = createField("CustName", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.TravelAdvice.CustFrom</code>.
     */
    public final TableField<TraveladviceRecord, String> CUSTFROM = createField("CustFrom", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.TravelAdvice.Advice</code>.
     */
    public final TableField<TraveladviceRecord, String> ADVICE = createField("Advice", org.jooq.impl.SQLDataType.VARCHAR(2000).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.TravelAdvice.EntryDate</code>.
     */
    public final TableField<TraveladviceRecord, Timestamp> ENTRYDATE = createField("EntryDate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.TravelAdvice.IsValid</code>.
     */
    public final TableField<TraveladviceRecord, UByte> ISVALID = createField("IsValid", org.jooq.impl.SQLDataType.TINYINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.TravelAdvice.ShowByLocation</code>.
     */
    public final TableField<TraveladviceRecord, UByte> SHOWBYLOCATION = createField("ShowByLocation", org.jooq.impl.SQLDataType.TINYINTUNSIGNED.nullable(false), this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.TravelAdvice</code> table reference
     */
    public Traveladvice() {
        this(DSL.name("TravelAdvice"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.TravelAdvice</code> table reference
     */
    public Traveladvice(String alias) {
        this(DSL.name(alias), TRAVELADVICE);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.TravelAdvice</code> table reference
     */
    public Traveladvice(Name alias) {
        this(alias, TRAVELADVICE);
    }

    private Traveladvice(Name alias, Table<TraveladviceRecord> aliased) {
        this(alias, aliased, null);
    }

    private Traveladvice(Name alias, Table<TraveladviceRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Traveladvice(Table<O> child, ForeignKey<O, TraveladviceRecord> key) {
        super(child, key, TRAVELADVICE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.TRAVELADVICE_PK_TRAVELADVICE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TraveladviceRecord, Integer> getIdentity() {
        return Keys.IDENTITY_TRAVELADVICE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TraveladviceRecord> getPrimaryKey() {
        return Keys.PK_TRAVELADVICE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TraveladviceRecord>> getKeys() {
        return Arrays.<UniqueKey<TraveladviceRecord>>asList(Keys.PK_TRAVELADVICE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Traveladvice as(String alias) {
        return new Traveladvice(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Traveladvice as(Name alias) {
        return new Traveladvice(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Traveladvice rename(String name) {
        return new Traveladvice(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Traveladvice rename(Name name) {
        return new Traveladvice(name, null);
    }
}
