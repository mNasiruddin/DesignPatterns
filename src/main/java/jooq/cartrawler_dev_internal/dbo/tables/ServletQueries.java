/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.ServletQueriesRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UByte;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ServletQueries extends TableImpl<ServletQueriesRecord> {

    private static final long serialVersionUID = -1514573667;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.servlet_queries</code>
     */
    public static final ServletQueries SERVLET_QUERIES = new ServletQueries();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ServletQueriesRecord> getRecordType() {
        return ServletQueriesRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.servlet_queries.id</code>.
     */
    public final TableField<ServletQueriesRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.servlet_queries.type</code>.
     */
    public final TableField<ServletQueriesRecord, String> TYPE = createField("type", org.jooq.impl.SQLDataType.VARCHAR(128), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.servlet_queries.client_id</code>.
     */
    public final TableField<ServletQueriesRecord, Integer> CLIENT_ID = createField("client_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.servlet_queries.language</code>.
     */
    public final TableField<ServletQueriesRecord, String> LANGUAGE = createField("language", org.jooq.impl.SQLDataType.CHAR(5), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.servlet_queries.querydate</code>.
     */
    public final TableField<ServletQueriesRecord, Timestamp> QUERYDATE = createField("querydate", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.servlet_queries.customer_country</code>.
     */
    public final TableField<ServletQueriesRecord, String> CUSTOMER_COUNTRY = createField("customer_country", org.jooq.impl.SQLDataType.CHAR(2), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.servlet_queries.ipaddress</code>.
     */
    public final TableField<ServletQueriesRecord, Integer> IPADDRESS = createField("ipaddress", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.servlet_queries.template</code>.
     */
    public final TableField<ServletQueriesRecord, String> TEMPLATE = createField("template", org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.servlet_queries.error</code>.
     */
    public final TableField<ServletQueriesRecord, Boolean> ERROR = createField("error", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.servlet_queries.from_cache</code>.
     */
    public final TableField<ServletQueriesRecord, Boolean> FROM_CACHE = createField("from_cache", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.servlet_queries.testtoken</code>.
     */
    public final TableField<ServletQueriesRecord, UByte> TESTTOKEN = createField("testtoken", org.jooq.impl.SQLDataType.TINYINTUNSIGNED, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.servlet_queries.engineloadid</code>.
     */
    public final TableField<ServletQueriesRecord, Long> ENGINELOADID = createField("engineloadid", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.servlet_queries.parent_id</code>.
     */
    public final TableField<ServletQueriesRecord, Integer> PARENT_ID = createField("parent_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.servlet_queries.fk_clientTouchpoint</code>.
     */
    public final TableField<ServletQueriesRecord, Short> FK_CLIENTTOUCHPOINT = createField("fk_clientTouchpoint", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.servlet_queries</code> table reference
     */
    public ServletQueries() {
        this(DSL.name("servlet_queries"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.servlet_queries</code> table reference
     */
    public ServletQueries(String alias) {
        this(DSL.name(alias), SERVLET_QUERIES);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.servlet_queries</code> table reference
     */
    public ServletQueries(Name alias) {
        this(alias, SERVLET_QUERIES);
    }

    private ServletQueries(Name alias, Table<ServletQueriesRecord> aliased) {
        this(alias, aliased, null);
    }

    private ServletQueries(Name alias, Table<ServletQueriesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> ServletQueries(Table<O> child, ForeignKey<O, ServletQueriesRecord> key) {
        super(child, key, SERVLET_QUERIES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SERVLET_QUERIES_PK_SERVLET_QUERIES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ServletQueriesRecord, Integer> getIdentity() {
        return Keys.IDENTITY_SERVLET_QUERIES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ServletQueriesRecord> getPrimaryKey() {
        return Keys.PK_SERVLET_QUERIES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ServletQueriesRecord>> getKeys() {
        return Arrays.<UniqueKey<ServletQueriesRecord>>asList(Keys.PK_SERVLET_QUERIES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ServletQueries as(String alias) {
        return new ServletQueries(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ServletQueries as(Name alias) {
        return new ServletQueries(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ServletQueries rename(String name) {
        return new ServletQueries(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ServletQueries rename(Name name) {
        return new ServletQueries(name, null);
    }
}
