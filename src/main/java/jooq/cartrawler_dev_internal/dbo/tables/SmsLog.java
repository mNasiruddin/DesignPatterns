/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.SmsLogRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SmsLog extends TableImpl<SmsLogRecord> {

    private static final long serialVersionUID = 1669851088;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.sms_log</code>
     */
    public static final SmsLog SMS_LOG = new SmsLog();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SmsLogRecord> getRecordType() {
        return SmsLogRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.sms_log.id</code>.
     */
    public final TableField<SmsLogRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.sms_log.fk_reservation</code>.
     */
    public final TableField<SmsLogRecord, Integer> FK_RESERVATION = createField("fk_reservation", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.sms_log.fk_user</code>.
     */
    public final TableField<SmsLogRecord, Integer> FK_USER = createField("fk_user", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.sms_log.sms_ref</code>.
     */
    public final TableField<SmsLogRecord, String> SMS_REF = createField("sms_ref", org.jooq.impl.SQLDataType.VARCHAR(40), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.sms_log.send_date</code>.
     */
    public final TableField<SmsLogRecord, Timestamp> SEND_DATE = createField("send_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.sms_log.send_status</code>.
     */
    public final TableField<SmsLogRecord, Integer> SEND_STATUS = createField("send_status", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.sms_log.phone_num</code>.
     */
    public final TableField<SmsLogRecord, String> PHONE_NUM = createField("phone_num", org.jooq.impl.SQLDataType.VARCHAR(40), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.sms_log.valid_num</code>.
     */
    public final TableField<SmsLogRecord, Boolean> VALID_NUM = createField("valid_num", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.sms_log.response_date</code>.
     */
    public final TableField<SmsLogRecord, Timestamp> RESPONSE_DATE = createField("response_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.sms_log</code> table reference
     */
    public SmsLog() {
        this(DSL.name("sms_log"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.sms_log</code> table reference
     */
    public SmsLog(String alias) {
        this(DSL.name(alias), SMS_LOG);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.sms_log</code> table reference
     */
    public SmsLog(Name alias) {
        this(alias, SMS_LOG);
    }

    private SmsLog(Name alias, Table<SmsLogRecord> aliased) {
        this(alias, aliased, null);
    }

    private SmsLog(Name alias, Table<SmsLogRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> SmsLog(Table<O> child, ForeignKey<O, SmsLogRecord> key) {
        super(child, key, SMS_LOG);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SMS_LOG_PK_ONLINESTOPSALE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<SmsLogRecord, Integer> getIdentity() {
        return Keys.IDENTITY_SMS_LOG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SmsLogRecord> getPrimaryKey() {
        return Keys.PK_ONLINESTOPSALE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SmsLogRecord>> getKeys() {
        return Arrays.<UniqueKey<SmsLogRecord>>asList(Keys.PK_ONLINESTOPSALE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SmsLog as(String alias) {
        return new SmsLog(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SmsLog as(Name alias) {
        return new SmsLog(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SmsLog rename(String name) {
        return new SmsLog(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SmsLog rename(Name name) {
        return new SmsLog(name, null);
    }
}
