/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.RuleChargeRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RuleCharge extends TableImpl<RuleChargeRecord> {

    private static final long serialVersionUID = 976501014;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.rule_charge</code>
     */
    public static final RuleCharge RULE_CHARGE = new RuleCharge();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RuleChargeRecord> getRecordType() {
        return RuleChargeRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.rule_charge.guid</code>.
     */
    public final TableField<RuleChargeRecord, UUID> GUID = createField("guid", org.jooq.impl.SQLDataType.UUID.nullable(false).defaultValue(org.jooq.impl.DSL.field("(newsequentialid())", org.jooq.impl.SQLDataType.UUID)), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.rule_charge.rule_charge_id</code>.
     */
    public final TableField<RuleChargeRecord, Integer> RULE_CHARGE_ID = createField("rule_charge_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.rule_charge.unit</code>.
     */
    public final TableField<RuleChargeRecord, String> UNIT = createField("unit", org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.rule_charge.unit_amount</code>.
     */
    public final TableField<RuleChargeRecord, BigDecimal> UNIT_AMOUNT = createField("unit_amount", org.jooq.impl.SQLDataType.NUMERIC(19, 6), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.rule_charge.base_amount</code>.
     */
    public final TableField<RuleChargeRecord, BigDecimal> BASE_AMOUNT = createField("base_amount", org.jooq.impl.SQLDataType.NUMERIC(19, 6), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.rule_charge.min_amount</code>.
     */
    public final TableField<RuleChargeRecord, BigDecimal> MIN_AMOUNT = createField("min_amount", org.jooq.impl.SQLDataType.NUMERIC(19, 6), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.rule_charge.max_amount</code>.
     */
    public final TableField<RuleChargeRecord, BigDecimal> MAX_AMOUNT = createField("max_amount", org.jooq.impl.SQLDataType.NUMERIC(19, 6), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.rule_charge.min_units</code>.
     */
    public final TableField<RuleChargeRecord, Integer> MIN_UNITS = createField("min_units", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.rule_charge.max_units</code>.
     */
    public final TableField<RuleChargeRecord, Integer> MAX_UNITS = createField("max_units", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.rule_charge.percentage</code>.
     */
    public final TableField<RuleChargeRecord, BigDecimal> PERCENTAGE = createField("percentage", org.jooq.impl.SQLDataType.NUMERIC(19, 6), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.rule_charge.currency</code>.
     */
    public final TableField<RuleChargeRecord, String> CURRENCY = createField("currency", org.jooq.impl.SQLDataType.VARCHAR(3), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.rule_charge.in_rate</code>.
     */
    public final TableField<RuleChargeRecord, Boolean> IN_RATE = createField("in_rate", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.rule_charge.tax_exclusive</code>.
     */
    public final TableField<RuleChargeRecord, Boolean> TAX_EXCLUSIVE = createField("tax_exclusive", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.rule_charge.on_request</code>.
     */
    public final TableField<RuleChargeRecord, Boolean> ON_REQUEST = createField("on_request", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.rule_charge.excess</code>.
     */
    public final TableField<RuleChargeRecord, Boolean> EXCESS = createField("excess", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.rule_charge.excess_amount</code>.
     */
    public final TableField<RuleChargeRecord, BigDecimal> EXCESS_AMOUNT = createField("excess_amount", org.jooq.impl.SQLDataType.NUMERIC(19, 6), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.rule_charge.monthday_period</code>.
     */
    public final TableField<RuleChargeRecord, String> MONTHDAY_PERIOD = createField("monthday_period", org.jooq.impl.SQLDataType.VARCHAR(15), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.rule_charge.payable_at_counter</code>.
     */
    public final TableField<RuleChargeRecord, Boolean> PAYABLE_AT_COUNTER = createField("payable_at_counter", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.rule_charge.required</code>.
     */
    public final TableField<RuleChargeRecord, Boolean> REQUIRED = createField("required", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.rule_charge.rate_type</code>.
     */
    public final TableField<RuleChargeRecord, Integer> RATE_TYPE = createField("rate_type", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.rule_charge.max_coverage</code>.
     */
    public final TableField<RuleChargeRecord, Boolean> MAX_COVERAGE = createField("max_coverage", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.rule_charge.max_coverage_unlimited</code>.
     */
    public final TableField<RuleChargeRecord, Boolean> MAX_COVERAGE_UNLIMITED = createField("max_coverage_unlimited", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.rule_charge.max_coverage_amount</code>.
     */
    public final TableField<RuleChargeRecord, BigDecimal> MAX_COVERAGE_AMOUNT = createField("max_coverage_amount", org.jooq.impl.SQLDataType.NUMERIC(19, 6), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.rule_charge.deposit_amount</code>.
     */
    public final TableField<RuleChargeRecord, BigDecimal> DEPOSIT_AMOUNT = createField("deposit_amount", org.jooq.impl.SQLDataType.NUMERIC(19, 6), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.rule_charge.deposit</code>.
     */
    public final TableField<RuleChargeRecord, Boolean> DEPOSIT = createField("deposit", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.rule_charge</code> table reference
     */
    public RuleCharge() {
        this(DSL.name("rule_charge"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.rule_charge</code> table reference
     */
    public RuleCharge(String alias) {
        this(DSL.name(alias), RULE_CHARGE);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.rule_charge</code> table reference
     */
    public RuleCharge(Name alias) {
        this(alias, RULE_CHARGE);
    }

    private RuleCharge(Name alias, Table<RuleChargeRecord> aliased) {
        this(alias, aliased, null);
    }

    private RuleCharge(Name alias, Table<RuleChargeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> RuleCharge(Table<O> child, ForeignKey<O, RuleChargeRecord> key) {
        super(child, key, RULE_CHARGE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.RULE_CHARGE_PK_RULE_CHARGE, Indexes.RULE_CHARGE_RULECHARGEID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<RuleChargeRecord, Integer> getIdentity() {
        return Keys.IDENTITY_RULE_CHARGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RuleChargeRecord> getPrimaryKey() {
        return Keys.PK_RULE_CHARGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RuleChargeRecord>> getKeys() {
        return Arrays.<UniqueKey<RuleChargeRecord>>asList(Keys.PK_RULE_CHARGE, Keys.RULECHARGEID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RuleCharge as(String alias) {
        return new RuleCharge(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RuleCharge as(Name alias) {
        return new RuleCharge(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RuleCharge rename(String name) {
        return new RuleCharge(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public RuleCharge rename(Name name) {
        return new RuleCharge(name, null);
    }
}
