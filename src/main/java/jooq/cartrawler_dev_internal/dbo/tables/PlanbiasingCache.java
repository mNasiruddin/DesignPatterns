/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.PlanbiasingCacheRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PlanbiasingCache extends TableImpl<PlanbiasingCacheRecord> {

    private static final long serialVersionUID = -187162149;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.planbiasing_cache</code>
     */
    public static final PlanbiasingCache PLANBIASING_CACHE = new PlanbiasingCache();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PlanbiasingCacheRecord> getRecordType() {
        return PlanbiasingCacheRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.planbiasing_cache.fk_planbiasing</code>.
     */
    public final TableField<PlanbiasingCacheRecord, Integer> FK_PLANBIASING = createField("fk_planbiasing", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.planbiasing_cache.last_update</code>.
     */
    public final TableField<PlanbiasingCacheRecord, Timestamp> LAST_UPDATE = createField("last_update", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.planbiasing_cache.percentage</code>.
     */
    public final TableField<PlanbiasingCacheRecord, Integer> PERCENTAGE = createField("percentage", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.planbiasing_cache</code> table reference
     */
    public PlanbiasingCache() {
        this(DSL.name("planbiasing_cache"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.planbiasing_cache</code> table reference
     */
    public PlanbiasingCache(String alias) {
        this(DSL.name(alias), PLANBIASING_CACHE);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.planbiasing_cache</code> table reference
     */
    public PlanbiasingCache(Name alias) {
        this(alias, PLANBIASING_CACHE);
    }

    private PlanbiasingCache(Name alias, Table<PlanbiasingCacheRecord> aliased) {
        this(alias, aliased, null);
    }

    private PlanbiasingCache(Name alias, Table<PlanbiasingCacheRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> PlanbiasingCache(Table<O> child, ForeignKey<O, PlanbiasingCacheRecord> key) {
        super(child, key, PLANBIASING_CACHE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PLANBIASING_CACHE_PK_PLANBIASING_CACHE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PlanbiasingCacheRecord> getPrimaryKey() {
        return Keys.PK_PLANBIASING_CACHE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PlanbiasingCacheRecord>> getKeys() {
        return Arrays.<UniqueKey<PlanbiasingCacheRecord>>asList(Keys.PK_PLANBIASING_CACHE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PlanbiasingCache as(String alias) {
        return new PlanbiasingCache(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PlanbiasingCache as(Name alias) {
        return new PlanbiasingCache(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PlanbiasingCache rename(String name) {
        return new PlanbiasingCache(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PlanbiasingCache rename(Name name) {
        return new PlanbiasingCache(name, null);
    }
}
