/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.ClientDataRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ClientData extends TableImpl<ClientDataRecord> {

    private static final long serialVersionUID = -1184364265;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.Client_Data</code>
     */
    public static final ClientData CLIENT_DATA = new ClientData();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ClientDataRecord> getRecordType() {
        return ClientDataRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Client_Data.id</code>.
     */
    public final TableField<ClientDataRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Client_Data.fk_client</code>.
     */
    public final TableField<ClientDataRecord, Integer> FK_CLIENT = createField("fk_client", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Client_Data.tierFlag</code>.
     */
    public final TableField<ClientDataRecord, Integer> TIERFLAG = createField("tierFlag", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Client_Data.fk_user</code>.
     */
    public final TableField<ClientDataRecord, Integer> FK_USER = createField("fk_user", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.Client_Data</code> table reference
     */
    public ClientData() {
        this(DSL.name("Client_Data"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.Client_Data</code> table reference
     */
    public ClientData(String alias) {
        this(DSL.name(alias), CLIENT_DATA);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.Client_Data</code> table reference
     */
    public ClientData(Name alias) {
        this(alias, CLIENT_DATA);
    }

    private ClientData(Name alias, Table<ClientDataRecord> aliased) {
        this(alias, aliased, null);
    }

    private ClientData(Name alias, Table<ClientDataRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> ClientData(Table<O> child, ForeignKey<O, ClientDataRecord> key) {
        super(child, key, CLIENT_DATA);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ClientDataRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CLIENT_DATA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClientData as(String alias) {
        return new ClientData(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClientData as(Name alias) {
        return new ClientData(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ClientData rename(String name) {
        return new ClientData(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ClientData rename(Name name) {
        return new ClientData(name, null);
    }
}
