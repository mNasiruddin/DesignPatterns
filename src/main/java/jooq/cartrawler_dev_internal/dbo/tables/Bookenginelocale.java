/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.BookenginelocaleRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Bookenginelocale extends TableImpl<BookenginelocaleRecord> {

    private static final long serialVersionUID = 2086694560;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.BookEngineLocale</code>
     */
    public static final Bookenginelocale BOOKENGINELOCALE = new Bookenginelocale();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BookenginelocaleRecord> getRecordType() {
        return BookenginelocaleRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.BookEngineLocale.id</code>.
     */
    public final TableField<BookenginelocaleRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.BookEngineLocale.locale</code>.
     */
    public final TableField<BookenginelocaleRecord, String> LOCALE = createField("locale", org.jooq.impl.SQLDataType.VARCHAR(10).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.BookEngineLocale.positiveFormat</code>.
     */
    public final TableField<BookenginelocaleRecord, String> POSITIVEFORMAT = createField("positiveFormat", org.jooq.impl.SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.BookEngineLocale.negativeFormat</code>.
     */
    public final TableField<BookenginelocaleRecord, String> NEGATIVEFORMAT = createField("negativeFormat", org.jooq.impl.SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.BookEngineLocale.decimalSymbol</code>.
     */
    public final TableField<BookenginelocaleRecord, String> DECIMALSYMBOL = createField("decimalSymbol", org.jooq.impl.SQLDataType.CHAR(1), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.BookEngineLocale.digitGroupSymbol</code>.
     */
    public final TableField<BookenginelocaleRecord, String> DIGITGROUPSYMBOL = createField("digitGroupSymbol", org.jooq.impl.SQLDataType.CHAR(1), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.BookEngineLocale.groupDigits</code>.
     */
    public final TableField<BookenginelocaleRecord, Boolean> GROUPDIGITS = createField("groupDigits", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.BookEngineLocale</code> table reference
     */
    public Bookenginelocale() {
        this(DSL.name("BookEngineLocale"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.BookEngineLocale</code> table reference
     */
    public Bookenginelocale(String alias) {
        this(DSL.name(alias), BOOKENGINELOCALE);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.BookEngineLocale</code> table reference
     */
    public Bookenginelocale(Name alias) {
        this(alias, BOOKENGINELOCALE);
    }

    private Bookenginelocale(Name alias, Table<BookenginelocaleRecord> aliased) {
        this(alias, aliased, null);
    }

    private Bookenginelocale(Name alias, Table<BookenginelocaleRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Bookenginelocale(Table<O> child, ForeignKey<O, BookenginelocaleRecord> key) {
        super(child, key, BOOKENGINELOCALE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.BOOKENGINELOCALE_PK_BOOKENGINELOCALE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<BookenginelocaleRecord, Integer> getIdentity() {
        return Keys.IDENTITY_BOOKENGINELOCALE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<BookenginelocaleRecord> getPrimaryKey() {
        return Keys.PK_BOOKENGINELOCALE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<BookenginelocaleRecord>> getKeys() {
        return Arrays.<UniqueKey<BookenginelocaleRecord>>asList(Keys.PK_BOOKENGINELOCALE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Bookenginelocale as(String alias) {
        return new Bookenginelocale(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Bookenginelocale as(Name alias) {
        return new Bookenginelocale(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Bookenginelocale rename(String name) {
        return new Bookenginelocale(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Bookenginelocale rename(Name name) {
        return new Bookenginelocale(name, null);
    }
}
