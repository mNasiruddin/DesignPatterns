/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.sql.Timestamp;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.tables.records.CustdetailsupdatedRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Custdetailsupdated extends TableImpl<CustdetailsupdatedRecord> {

    private static final long serialVersionUID = 1913874346;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.CustDetailsUpdated</code>
     */
    public static final Custdetailsupdated CUSTDETAILSUPDATED = new Custdetailsupdated();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CustdetailsupdatedRecord> getRecordType() {
        return CustdetailsupdatedRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.CustDetailsUpdated.fk_reservation</code>.
     */
    public final TableField<CustdetailsupdatedRecord, Integer> FK_RESERVATION = createField("fk_reservation", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.CustDetailsUpdated.insertdate</code>.
     */
    public final TableField<CustdetailsupdatedRecord, Timestamp> INSERTDATE = createField("insertdate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("(getdate())", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.CustDetailsUpdated.firstname_old</code>.
     */
    public final TableField<CustdetailsupdatedRecord, String> FIRSTNAME_OLD = createField("firstname_old", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.CustDetailsUpdated.surname_old</code>.
     */
    public final TableField<CustdetailsupdatedRecord, String> SURNAME_OLD = createField("surname_old", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.CustDetailsUpdated.email_old</code>.
     */
    public final TableField<CustdetailsupdatedRecord, String> EMAIL_OLD = createField("email_old", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.CustDetailsUpdated.address_old</code>.
     */
    public final TableField<CustdetailsupdatedRecord, String> ADDRESS_OLD = createField("address_old", org.jooq.impl.SQLDataType.VARCHAR(250), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.CustDetailsUpdated.firstname_new</code>.
     */
    public final TableField<CustdetailsupdatedRecord, String> FIRSTNAME_NEW = createField("firstname_new", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.CustDetailsUpdated.surname_new</code>.
     */
    public final TableField<CustdetailsupdatedRecord, String> SURNAME_NEW = createField("surname_new", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.CustDetailsUpdated.email_new</code>.
     */
    public final TableField<CustdetailsupdatedRecord, String> EMAIL_NEW = createField("email_new", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.CustDetailsUpdated.address_new</code>.
     */
    public final TableField<CustdetailsupdatedRecord, String> ADDRESS_NEW = createField("address_new", org.jooq.impl.SQLDataType.VARCHAR(250), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.CustDetailsUpdated.processed</code>.
     */
    public final TableField<CustdetailsupdatedRecord, Boolean> PROCESSED = createField("processed", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.CustDetailsUpdated</code> table reference
     */
    public Custdetailsupdated() {
        this(DSL.name("CustDetailsUpdated"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.CustDetailsUpdated</code> table reference
     */
    public Custdetailsupdated(String alias) {
        this(DSL.name(alias), CUSTDETAILSUPDATED);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.CustDetailsUpdated</code> table reference
     */
    public Custdetailsupdated(Name alias) {
        this(alias, CUSTDETAILSUPDATED);
    }

    private Custdetailsupdated(Name alias, Table<CustdetailsupdatedRecord> aliased) {
        this(alias, aliased, null);
    }

    private Custdetailsupdated(Name alias, Table<CustdetailsupdatedRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Custdetailsupdated(Table<O> child, ForeignKey<O, CustdetailsupdatedRecord> key) {
        super(child, key, CUSTDETAILSUPDATED);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Custdetailsupdated as(String alias) {
        return new Custdetailsupdated(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Custdetailsupdated as(Name alias) {
        return new Custdetailsupdated(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Custdetailsupdated rename(String name) {
        return new Custdetailsupdated(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Custdetailsupdated rename(Name name) {
        return new Custdetailsupdated(name, null);
    }
}
