/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.ClientPlanRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ClientPlan extends TableImpl<ClientPlanRecord> {

    private static final long serialVersionUID = 2080937136;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.Client_Plan</code>
     */
    public static final ClientPlan CLIENT_PLAN = new ClientPlan();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ClientPlanRecord> getRecordType() {
        return ClientPlanRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Client_Plan.Plan_ID</code>.
     */
    public final TableField<ClientPlanRecord, Integer> PLAN_ID = createField("Plan_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Client_Plan.Plan_Name</code>.
     */
    public final TableField<ClientPlanRecord, String> PLAN_NAME = createField("Plan_Name", org.jooq.impl.SQLDataType.VARCHAR(120).nullable(false), this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.Client_Plan</code> table reference
     */
    public ClientPlan() {
        this(DSL.name("Client_Plan"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.Client_Plan</code> table reference
     */
    public ClientPlan(String alias) {
        this(DSL.name(alias), CLIENT_PLAN);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.Client_Plan</code> table reference
     */
    public ClientPlan(Name alias) {
        this(alias, CLIENT_PLAN);
    }

    private ClientPlan(Name alias, Table<ClientPlanRecord> aliased) {
        this(alias, aliased, null);
    }

    private ClientPlan(Name alias, Table<ClientPlanRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> ClientPlan(Table<O> child, ForeignKey<O, ClientPlanRecord> key) {
        super(child, key, CLIENT_PLAN);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CLIENT_PLAN_IX_PLAN, Indexes.CLIENT_PLAN_PK_PLAN);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ClientPlanRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CLIENT_PLAN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ClientPlanRecord> getPrimaryKey() {
        return Keys.PK_PLAN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ClientPlanRecord>> getKeys() {
        return Arrays.<UniqueKey<ClientPlanRecord>>asList(Keys.PK_PLAN, Keys.IX_PLAN);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClientPlan as(String alias) {
        return new ClientPlan(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClientPlan as(Name alias) {
        return new ClientPlan(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ClientPlan rename(String name) {
        return new ClientPlan(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ClientPlan rename(Name name) {
        return new ClientPlan(name, null);
    }
}
