/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.CarRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Car extends TableImpl<CarRecord> {

    private static final long serialVersionUID = 328295723;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.Car</code>
     */
    public static final Car CAR = new Car();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CarRecord> getRecordType() {
        return CarRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Car.Car_ID</code>.
     */
    public final TableField<CarRecord, Integer> CAR_ID = createField("Car_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Car.Make</code>.
     */
    public final TableField<CarRecord, String> MAKE = createField("Make", org.jooq.impl.SQLDataType.VARCHAR(30), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Car.Model</code>.
     */
    public final TableField<CarRecord, String> MODEL = createField("Model", org.jooq.impl.SQLDataType.VARCHAR(30), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Car.Seats</code>.
     */
    public final TableField<CarRecord, String> SEATS = createField("Seats", org.jooq.impl.SQLDataType.VARCHAR(20), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Car.Doors</code>.
     */
    public final TableField<CarRecord, String> DOORS = createField("Doors", org.jooq.impl.SQLDataType.VARCHAR(20), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Car.Engine</code>.
     */
    public final TableField<CarRecord, String> ENGINE = createField("Engine", org.jooq.impl.SQLDataType.VARCHAR(20), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Car.Boot</code>.
     */
    public final TableField<CarRecord, String> BOOT = createField("Boot", org.jooq.impl.SQLDataType.VARCHAR(20), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Car.Transmission</code>.
     */
    public final TableField<CarRecord, String> TRANSMISSION = createField("Transmission", org.jooq.impl.SQLDataType.VARCHAR(20), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Car.Description</code>.
     */
    public final TableField<CarRecord, String> DESCRIPTION = createField("Description", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Car.Limited</code>.
     */
    public final TableField<CarRecord, Boolean> LIMITED = createField("Limited", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Car.Car_Image</code>.
     */
    public final TableField<CarRecord, byte[]> CAR_IMAGE = createField("Car_Image", org.jooq.impl.SQLDataType.BINARY(2147483647), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Car.Image_Width</code>.
     */
    public final TableField<CarRecord, String> IMAGE_WIDTH = createField("Image_Width", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Car.Image_Height</code>.
     */
    public final TableField<CarRecord, String> IMAGE_HEIGHT = createField("Image_Height", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Car.medium_passenger</code>.
     */
    public final TableField<CarRecord, Integer> MEDIUM_PASSENGER = createField("medium_passenger", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Car.small_passenger</code>.
     */
    public final TableField<CarRecord, Integer> SMALL_PASSENGER = createField("small_passenger", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Car.small_suitcase</code>.
     */
    public final TableField<CarRecord, Integer> SMALL_SUITCASE = createField("small_suitcase", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Car.aircon</code>.
     */
    public final TableField<CarRecord, Boolean> AIRCON = createField("aircon", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Car.automatic</code>.
     */
    public final TableField<CarRecord, Boolean> AUTOMATIC = createField("automatic", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.Car</code> table reference
     */
    public Car() {
        this(DSL.name("Car"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.Car</code> table reference
     */
    public Car(String alias) {
        this(DSL.name(alias), CAR);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.Car</code> table reference
     */
    public Car(Name alias) {
        this(alias, CAR);
    }

    private Car(Name alias, Table<CarRecord> aliased) {
        this(alias, aliased, null);
    }

    private Car(Name alias, Table<CarRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Car(Table<O> child, ForeignKey<O, CarRecord> key) {
        super(child, key, CAR);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CAR_CAR_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CarRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CAR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CarRecord> getPrimaryKey() {
        return Keys.CAR_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CarRecord>> getKeys() {
        return Arrays.<UniqueKey<CarRecord>>asList(Keys.CAR_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Car as(String alias) {
        return new Car(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Car as(Name alias) {
        return new Car(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Car rename(String name) {
        return new Car(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Car rename(Name name) {
        return new Car(name, null);
    }
}
