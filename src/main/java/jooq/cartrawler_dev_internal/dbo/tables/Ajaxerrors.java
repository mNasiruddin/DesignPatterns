/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.AjaxerrorsRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Ajaxerrors extends TableImpl<AjaxerrorsRecord> {

    private static final long serialVersionUID = 1263789330;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.AjaxErrors</code>
     */
    public static final Ajaxerrors AJAXERRORS = new Ajaxerrors();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AjaxerrorsRecord> getRecordType() {
        return AjaxerrorsRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.AjaxErrors.id</code>.
     */
    public final TableField<AjaxerrorsRecord, UUID> ID = createField("id", org.jooq.impl.SQLDataType.UUID.nullable(false).defaultValue(org.jooq.impl.DSL.field("(newid())", org.jooq.impl.SQLDataType.UUID)), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.AjaxErrors.requestDateTime</code>.
     */
    public final TableField<AjaxerrorsRecord, Timestamp> REQUESTDATETIME = createField("requestDateTime", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("(getdate())", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.AjaxErrors.desc</code>.
     */
    public final TableField<AjaxerrorsRecord, String> DESC = createField("desc", org.jooq.impl.SQLDataType.VARCHAR(8000).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.AjaxErrors.ip</code>.
     */
    public final TableField<AjaxerrorsRecord, String> IP = createField("ip", org.jooq.impl.SQLDataType.VARCHAR(15).nullable(false), this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.AjaxErrors</code> table reference
     */
    public Ajaxerrors() {
        this(DSL.name("AjaxErrors"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.AjaxErrors</code> table reference
     */
    public Ajaxerrors(String alias) {
        this(DSL.name(alias), AJAXERRORS);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.AjaxErrors</code> table reference
     */
    public Ajaxerrors(Name alias) {
        this(alias, AJAXERRORS);
    }

    private Ajaxerrors(Name alias, Table<AjaxerrorsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Ajaxerrors(Name alias, Table<AjaxerrorsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Ajaxerrors(Table<O> child, ForeignKey<O, AjaxerrorsRecord> key) {
        super(child, key, AJAXERRORS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.AJAXERRORS_PK_AJAXERRORS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AjaxerrorsRecord> getPrimaryKey() {
        return Keys.PK_AJAXERRORS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AjaxerrorsRecord>> getKeys() {
        return Arrays.<UniqueKey<AjaxerrorsRecord>>asList(Keys.PK_AJAXERRORS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Ajaxerrors as(String alias) {
        return new Ajaxerrors(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Ajaxerrors as(Name alias) {
        return new Ajaxerrors(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Ajaxerrors rename(String name) {
        return new Ajaxerrors(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Ajaxerrors rename(Name name) {
        return new Ajaxerrors(name, null);
    }
}
