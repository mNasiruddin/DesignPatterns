/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.sql.Timestamp;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.LanguageExportRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LanguageExport extends TableImpl<LanguageExportRecord> {

    private static final long serialVersionUID = 1307310270;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.language_export</code>
     */
    public static final LanguageExport LANGUAGE_EXPORT = new LanguageExport();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<LanguageExportRecord> getRecordType() {
        return LanguageExportRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.language_export.id</code>.
     */
    public final TableField<LanguageExportRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.language_export.export_date</code>.
     */
    public final TableField<LanguageExportRecord, Timestamp> EXPORT_DATE = createField("export_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.language_export.fk_user</code>.
     */
    public final TableField<LanguageExportRecord, Integer> FK_USER = createField("fk_user", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.language_export.details</code>.
     */
    public final TableField<LanguageExportRecord, String> DETAILS = createField("details", org.jooq.impl.SQLDataType.VARCHAR(250).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.language_export.outstanding</code>.
     */
    public final TableField<LanguageExportRecord, Boolean> OUTSTANDING = createField("outstanding", org.jooq.impl.SQLDataType.BIT.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.language_export.cancelled</code>.
     */
    public final TableField<LanguageExportRecord, Boolean> CANCELLED = createField("cancelled", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.language_export.expected_date</code>.
     */
    public final TableField<LanguageExportRecord, Timestamp> EXPECTED_DATE = createField("expected_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.language_export.file_name</code>.
     */
    public final TableField<LanguageExportRecord, String> FILE_NAME = createField("file_name", org.jooq.impl.SQLDataType.VARCHAR(250).nullable(false), this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.language_export</code> table reference
     */
    public LanguageExport() {
        this(DSL.name("language_export"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.language_export</code> table reference
     */
    public LanguageExport(String alias) {
        this(DSL.name(alias), LANGUAGE_EXPORT);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.language_export</code> table reference
     */
    public LanguageExport(Name alias) {
        this(alias, LANGUAGE_EXPORT);
    }

    private LanguageExport(Name alias, Table<LanguageExportRecord> aliased) {
        this(alias, aliased, null);
    }

    private LanguageExport(Name alias, Table<LanguageExportRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> LanguageExport(Table<O> child, ForeignKey<O, LanguageExportRecord> key) {
        super(child, key, LANGUAGE_EXPORT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<LanguageExportRecord, Integer> getIdentity() {
        return Keys.IDENTITY_LANGUAGE_EXPORT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LanguageExport as(String alias) {
        return new LanguageExport(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LanguageExport as(Name alias) {
        return new LanguageExport(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public LanguageExport rename(String name) {
        return new LanguageExport(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public LanguageExport rename(Name name) {
        return new LanguageExport(name, null);
    }
}
