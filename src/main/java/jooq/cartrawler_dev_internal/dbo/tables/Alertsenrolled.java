/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.AlertsenrolledRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Alertsenrolled extends TableImpl<AlertsenrolledRecord> {

    private static final long serialVersionUID = -1790214890;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.alertsEnrolled</code>
     */
    public static final Alertsenrolled ALERTSENROLLED = new Alertsenrolled();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AlertsenrolledRecord> getRecordType() {
        return AlertsenrolledRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.alertsEnrolled.guid</code>.
     */
    public final TableField<AlertsenrolledRecord, UUID> GUID = createField("guid", org.jooq.impl.SQLDataType.UUID.nullable(false).defaultValue(org.jooq.impl.DSL.field("(newid())", org.jooq.impl.SQLDataType.UUID)), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.alertsEnrolled.fk_userid</code>.
     */
    public final TableField<AlertsenrolledRecord, Integer> FK_USERID = createField("fk_userid", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.alertsEnrolled.fk_scheduledAlerts</code>.
     */
    public final TableField<AlertsenrolledRecord, Integer> FK_SCHEDULEDALERTS = createField("fk_scheduledAlerts", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.alertsEnrolled</code> table reference
     */
    public Alertsenrolled() {
        this(DSL.name("alertsEnrolled"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.alertsEnrolled</code> table reference
     */
    public Alertsenrolled(String alias) {
        this(DSL.name(alias), ALERTSENROLLED);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.alertsEnrolled</code> table reference
     */
    public Alertsenrolled(Name alias) {
        this(alias, ALERTSENROLLED);
    }

    private Alertsenrolled(Name alias, Table<AlertsenrolledRecord> aliased) {
        this(alias, aliased, null);
    }

    private Alertsenrolled(Name alias, Table<AlertsenrolledRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Alertsenrolled(Table<O> child, ForeignKey<O, AlertsenrolledRecord> key) {
        super(child, key, ALERTSENROLLED);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ALERTSENROLLED_PK_ALERTSENROLLED);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AlertsenrolledRecord> getPrimaryKey() {
        return Keys.PK_ALERTSENROLLED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AlertsenrolledRecord>> getKeys() {
        return Arrays.<UniqueKey<AlertsenrolledRecord>>asList(Keys.PK_ALERTSENROLLED);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Alertsenrolled as(String alias) {
        return new Alertsenrolled(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Alertsenrolled as(Name alias) {
        return new Alertsenrolled(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Alertsenrolled rename(String name) {
        return new Alertsenrolled(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Alertsenrolled rename(Name name) {
        return new Alertsenrolled(name, null);
    }
}
