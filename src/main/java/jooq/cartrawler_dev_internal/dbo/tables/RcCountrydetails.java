/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.RcCountrydetailsRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RcCountrydetails extends TableImpl<RcCountrydetailsRecord> {

    private static final long serialVersionUID = 941004018;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.RC_CountryDetails</code>
     */
    public static final RcCountrydetails RC_COUNTRYDETAILS = new RcCountrydetails();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RcCountrydetailsRecord> getRecordType() {
        return RcCountrydetailsRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.RC_CountryDetails.H_ID</code>.
     */
    public final TableField<RcCountrydetailsRecord, Integer> H_ID = createField("H_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.RC_CountryDetails.country_id</code>.
     */
    public final TableField<RcCountrydetailsRecord, String> COUNTRY_ID = createField("country_id", org.jooq.impl.SQLDataType.CHAR(2).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.RC_CountryDetails.Detail_text</code>.
     */
    public final TableField<RcCountrydetailsRecord, String> DETAIL_TEXT = createField("Detail_text", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.RC_CountryDetails</code> table reference
     */
    public RcCountrydetails() {
        this(DSL.name("RC_CountryDetails"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.RC_CountryDetails</code> table reference
     */
    public RcCountrydetails(String alias) {
        this(DSL.name(alias), RC_COUNTRYDETAILS);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.RC_CountryDetails</code> table reference
     */
    public RcCountrydetails(Name alias) {
        this(alias, RC_COUNTRYDETAILS);
    }

    private RcCountrydetails(Name alias, Table<RcCountrydetailsRecord> aliased) {
        this(alias, aliased, null);
    }

    private RcCountrydetails(Name alias, Table<RcCountrydetailsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> RcCountrydetails(Table<O> child, ForeignKey<O, RcCountrydetailsRecord> key) {
        super(child, key, RC_COUNTRYDETAILS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.RC_COUNTRYDETAILS_PK_RC_COUNTRYDETAILS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RcCountrydetailsRecord> getPrimaryKey() {
        return Keys.PK_RC_COUNTRYDETAILS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RcCountrydetailsRecord>> getKeys() {
        return Arrays.<UniqueKey<RcCountrydetailsRecord>>asList(Keys.PK_RC_COUNTRYDETAILS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<RcCountrydetailsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<RcCountrydetailsRecord, ?>>asList(Keys.FK_RC_COUNTRYDETAILS_RC_HEADING);
    }

    public RcHeading rcHeading() {
        return new RcHeading(this, Keys.FK_RC_COUNTRYDETAILS_RC_HEADING);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RcCountrydetails as(String alias) {
        return new RcCountrydetails(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RcCountrydetails as(Name alias) {
        return new RcCountrydetails(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RcCountrydetails rename(String name) {
        return new RcCountrydetails(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public RcCountrydetails rename(Name name) {
        return new RcCountrydetails(name, null);
    }
}
