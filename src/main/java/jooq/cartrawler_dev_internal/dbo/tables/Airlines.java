/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.AirlinesRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Airlines extends TableImpl<AirlinesRecord> {

    private static final long serialVersionUID = 1291019397;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.Airlines</code>
     */
    public static final Airlines AIRLINES = new Airlines();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AirlinesRecord> getRecordType() {
        return AirlinesRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Airlines.Airline_ID</code>.
     */
    public final TableField<AirlinesRecord, Integer> AIRLINE_ID = createField("Airline_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Airlines.Airline_Name</code>.
     */
    public final TableField<AirlinesRecord, String> AIRLINE_NAME = createField("Airline_Name", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Airlines.airline_status</code>.
     */
    public final TableField<AirlinesRecord, Boolean> AIRLINE_STATUS = createField("airline_status", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Airlines.airline_icao</code>.
     */
    public final TableField<AirlinesRecord, String> AIRLINE_ICAO = createField("airline_icao", org.jooq.impl.SQLDataType.VARCHAR(3), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Airlines.airline_iata</code>.
     */
    public final TableField<AirlinesRecord, String> AIRLINE_IATA = createField("airline_iata", org.jooq.impl.SQLDataType.VARCHAR(2), this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.Airlines</code> table reference
     */
    public Airlines() {
        this(DSL.name("Airlines"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.Airlines</code> table reference
     */
    public Airlines(String alias) {
        this(DSL.name(alias), AIRLINES);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.Airlines</code> table reference
     */
    public Airlines(Name alias) {
        this(alias, AIRLINES);
    }

    private Airlines(Name alias, Table<AirlinesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Airlines(Name alias, Table<AirlinesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Airlines(Table<O> child, ForeignKey<O, AirlinesRecord> key) {
        super(child, key, AIRLINES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.AIRLINES_PK_AIRLINES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<AirlinesRecord, Integer> getIdentity() {
        return Keys.IDENTITY_AIRLINES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AirlinesRecord> getPrimaryKey() {
        return Keys.PK_AIRLINES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AirlinesRecord>> getKeys() {
        return Arrays.<UniqueKey<AirlinesRecord>>asList(Keys.PK_AIRLINES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Airlines as(String alias) {
        return new Airlines(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Airlines as(Name alias) {
        return new Airlines(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Airlines rename(String name) {
        return new Airlines(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Airlines rename(Name name) {
        return new Airlines(name, null);
    }
}
