/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables.records;


import java.math.BigDecimal;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.tables.Insuranceclaimcost;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InsuranceclaimcostRecord extends UpdatableRecordImpl<InsuranceclaimcostRecord> implements Record4<Integer, Integer, String, BigDecimal> {

    private static final long serialVersionUID = -888711484;

    /**
     * Setter for <code>Cartrawler_dev_internal.dbo.insuranceClaimCost.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>Cartrawler_dev_internal.dbo.insuranceClaimCost.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>Cartrawler_dev_internal.dbo.insuranceClaimCost.carAgentId</code>.
     */
    public void setCaragentid(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>Cartrawler_dev_internal.dbo.insuranceClaimCost.carAgentId</code>.
     */
    public Integer getCaragentid() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>Cartrawler_dev_internal.dbo.insuranceClaimCost.countryId</code>.
     */
    public void setCountryid(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>Cartrawler_dev_internal.dbo.insuranceClaimCost.countryId</code>.
     */
    public String getCountryid() {
        return (String) get(2);
    }

    /**
     * Setter for <code>Cartrawler_dev_internal.dbo.insuranceClaimCost.cost</code>.
     */
    public void setCost(BigDecimal value) {
        set(3, value);
    }

    /**
     * Getter for <code>Cartrawler_dev_internal.dbo.insuranceClaimCost.cost</code>.
     */
    public BigDecimal getCost() {
        return (BigDecimal) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, String, BigDecimal> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, String, BigDecimal> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Insuranceclaimcost.INSURANCECLAIMCOST.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Insuranceclaimcost.INSURANCECLAIMCOST.CARAGENTID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Insuranceclaimcost.INSURANCECLAIMCOST.COUNTRYID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field4() {
        return Insuranceclaimcost.INSURANCECLAIMCOST.COST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getCaragentid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getCountryid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component4() {
        return getCost();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getCaragentid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getCountryid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value4() {
        return getCost();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InsuranceclaimcostRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InsuranceclaimcostRecord value2(Integer value) {
        setCaragentid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InsuranceclaimcostRecord value3(String value) {
        setCountryid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InsuranceclaimcostRecord value4(BigDecimal value) {
        setCost(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InsuranceclaimcostRecord values(Integer value1, Integer value2, String value3, BigDecimal value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached InsuranceclaimcostRecord
     */
    public InsuranceclaimcostRecord() {
        super(Insuranceclaimcost.INSURANCECLAIMCOST);
    }

    /**
     * Create a detached, initialised InsuranceclaimcostRecord
     */
    public InsuranceclaimcostRecord(Integer id, Integer caragentid, String countryid, BigDecimal cost) {
        super(Insuranceclaimcost.INSURANCECLAIMCOST);

        set(0, id);
        set(1, caragentid);
        set(2, countryid);
        set(3, cost);
    }
}
