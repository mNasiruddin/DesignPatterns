/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables.records;


import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.tables.FlightpathRules;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FlightpathRulesRecord extends UpdatableRecordImpl<FlightpathRulesRecord> implements Record4<Integer, String, String, String> {

    private static final long serialVersionUID = -1590830508;

    /**
     * Setter for <code>Cartrawler_dev_internal.dbo.flightpath_rules.rule_id</code>.
     */
    public void setRuleId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>Cartrawler_dev_internal.dbo.flightpath_rules.rule_id</code>.
     */
    public Integer getRuleId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>Cartrawler_dev_internal.dbo.flightpath_rules.rule_code</code>.
     */
    public void setRuleCode(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>Cartrawler_dev_internal.dbo.flightpath_rules.rule_code</code>.
     */
    public String getRuleCode() {
        return (String) get(1);
    }

    /**
     * Setter for <code>Cartrawler_dev_internal.dbo.flightpath_rules.rule_type</code>.
     */
    public void setRuleType(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>Cartrawler_dev_internal.dbo.flightpath_rules.rule_type</code>.
     */
    public String getRuleType() {
        return (String) get(2);
    }

    /**
     * Setter for <code>Cartrawler_dev_internal.dbo.flightpath_rules.TestName</code>.
     */
    public void setTestname(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>Cartrawler_dev_internal.dbo.flightpath_rules.TestName</code>.
     */
    public String getTestname() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, String, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, String, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return FlightpathRules.FLIGHTPATH_RULES.RULE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return FlightpathRules.FLIGHTPATH_RULES.RULE_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return FlightpathRules.FLIGHTPATH_RULES.RULE_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return FlightpathRules.FLIGHTPATH_RULES.TESTNAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getRuleId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getRuleCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getRuleType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getTestname();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getRuleId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getRuleCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getRuleType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getTestname();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FlightpathRulesRecord value1(Integer value) {
        setRuleId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FlightpathRulesRecord value2(String value) {
        setRuleCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FlightpathRulesRecord value3(String value) {
        setRuleType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FlightpathRulesRecord value4(String value) {
        setTestname(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FlightpathRulesRecord values(Integer value1, String value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FlightpathRulesRecord
     */
    public FlightpathRulesRecord() {
        super(FlightpathRules.FLIGHTPATH_RULES);
    }

    /**
     * Create a detached, initialised FlightpathRulesRecord
     */
    public FlightpathRulesRecord(Integer ruleId, String ruleCode, String ruleType, String testname) {
        super(FlightpathRules.FLIGHTPATH_RULES);

        set(0, ruleId);
        set(1, ruleCode);
        set(2, ruleType);
        set(3, testname);
    }
}
