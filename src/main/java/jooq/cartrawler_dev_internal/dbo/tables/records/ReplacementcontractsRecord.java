/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables.records;


import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.tables.Replacementcontracts;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ReplacementcontractsRecord extends TableRecordImpl<ReplacementcontractsRecord> implements Record3<String, String, String> {

    private static final long serialVersionUID = -79249250;

    /**
     * Setter for <code>Cartrawler_dev_internal.dbo.replacementContracts.agent</code>.
     */
    public void setAgent(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>Cartrawler_dev_internal.dbo.replacementContracts.agent</code>.
     */
    public String getAgent() {
        return (String) get(0);
    }

    /**
     * Setter for <code>Cartrawler_dev_internal.dbo.replacementContracts.source</code>.
     */
    public void setSource(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>Cartrawler_dev_internal.dbo.replacementContracts.source</code>.
     */
    public String getSource() {
        return (String) get(1);
    }

    /**
     * Setter for <code>Cartrawler_dev_internal.dbo.replacementContracts.replacement</code>.
     */
    public void setReplacement(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>Cartrawler_dev_internal.dbo.replacementContracts.replacement</code>.
     */
    public String getReplacement() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<String, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<String, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Replacementcontracts.REPLACEMENTCONTRACTS.AGENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Replacementcontracts.REPLACEMENTCONTRACTS.SOURCE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Replacementcontracts.REPLACEMENTCONTRACTS.REPLACEMENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getAgent();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getSource();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getReplacement();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getAgent();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getSource();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getReplacement();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReplacementcontractsRecord value1(String value) {
        setAgent(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReplacementcontractsRecord value2(String value) {
        setSource(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReplacementcontractsRecord value3(String value) {
        setReplacement(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReplacementcontractsRecord values(String value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ReplacementcontractsRecord
     */
    public ReplacementcontractsRecord() {
        super(Replacementcontracts.REPLACEMENTCONTRACTS);
    }

    /**
     * Create a detached, initialised ReplacementcontractsRecord
     */
    public ReplacementcontractsRecord(String agent, String source, String replacement) {
        super(Replacementcontracts.REPLACEMENTCONTRACTS);

        set(0, agent);
        set(1, source);
        set(2, replacement);
    }
}
