/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables.records;


import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.tables.PlancontractClientPositive;

import org.jooq.Field;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PlancontractClientPositiveRecord extends TableRecordImpl<PlancontractClientPositiveRecord> implements Record4<Integer, Integer, Boolean, Integer> {

    private static final long serialVersionUID = 469329363;

    /**
     * Setter for <code>Cartrawler_dev_internal.dbo.plancontract_client_positive.fk_plancontract</code>.
     */
    public void setFkPlancontract(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>Cartrawler_dev_internal.dbo.plancontract_client_positive.fk_plancontract</code>.
     */
    public Integer getFkPlancontract() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>Cartrawler_dev_internal.dbo.plancontract_client_positive.fk_client</code>.
     */
    public void setFkClient(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>Cartrawler_dev_internal.dbo.plancontract_client_positive.fk_client</code>.
     */
    public Integer getFkClient() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>Cartrawler_dev_internal.dbo.plancontract_client_positive.negativeFilter</code>.
     */
    public void setNegativefilter(Boolean value) {
        set(2, value);
    }

    /**
     * Getter for <code>Cartrawler_dev_internal.dbo.plancontract_client_positive.negativeFilter</code>.
     */
    public Boolean getNegativefilter() {
        return (Boolean) get(2);
    }

    /**
     * Setter for <code>Cartrawler_dev_internal.dbo.plancontract_client_positive.fk_plan</code>.
     */
    public void setFkPlan(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>Cartrawler_dev_internal.dbo.plancontract_client_positive.fk_plan</code>.
     */
    public Integer getFkPlan() {
        return (Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, Boolean, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, Boolean, Integer> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return PlancontractClientPositive.PLANCONTRACT_CLIENT_POSITIVE.FK_PLANCONTRACT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return PlancontractClientPositive.PLANCONTRACT_CLIENT_POSITIVE.FK_CLIENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field3() {
        return PlancontractClientPositive.PLANCONTRACT_CLIENT_POSITIVE.NEGATIVEFILTER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return PlancontractClientPositive.PLANCONTRACT_CLIENT_POSITIVE.FK_PLAN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getFkPlancontract();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getFkClient();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component3() {
        return getNegativefilter();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component4() {
        return getFkPlan();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getFkPlancontract();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getFkClient();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value3() {
        return getNegativefilter();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getFkPlan();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PlancontractClientPositiveRecord value1(Integer value) {
        setFkPlancontract(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PlancontractClientPositiveRecord value2(Integer value) {
        setFkClient(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PlancontractClientPositiveRecord value3(Boolean value) {
        setNegativefilter(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PlancontractClientPositiveRecord value4(Integer value) {
        setFkPlan(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PlancontractClientPositiveRecord values(Integer value1, Integer value2, Boolean value3, Integer value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PlancontractClientPositiveRecord
     */
    public PlancontractClientPositiveRecord() {
        super(PlancontractClientPositive.PLANCONTRACT_CLIENT_POSITIVE);
    }

    /**
     * Create a detached, initialised PlancontractClientPositiveRecord
     */
    public PlancontractClientPositiveRecord(Integer fkPlancontract, Integer fkClient, Boolean negativefilter, Integer fkPlan) {
        super(PlancontractClientPositive.PLANCONTRACT_CLIENT_POSITIVE);

        set(0, fkPlancontract);
        set(1, fkClient);
        set(2, negativefilter);
        set(3, fkPlan);
    }
}
