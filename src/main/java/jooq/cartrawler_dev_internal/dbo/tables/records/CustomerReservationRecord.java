/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.tables.CustomerReservation;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UByte;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CustomerReservationRecord extends UpdatableRecordImpl<CustomerReservationRecord> implements Record4<Integer, Integer, Timestamp, UByte> {

    private static final long serialVersionUID = 300028899;

    /**
     * Setter for <code>Cartrawler_dev_internal.dbo.customer_reservation.customer_id</code>.
     */
    public void setCustomerId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>Cartrawler_dev_internal.dbo.customer_reservation.customer_id</code>.
     */
    public Integer getCustomerId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>Cartrawler_dev_internal.dbo.customer_reservation.fk_reservation</code>.
     */
    public void setFkReservation(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>Cartrawler_dev_internal.dbo.customer_reservation.fk_reservation</code>.
     */
    public Integer getFkReservation() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>Cartrawler_dev_internal.dbo.customer_reservation.updated_date</code>.
     */
    public void setUpdatedDate(Timestamp value) {
        set(2, value);
    }

    /**
     * Getter for <code>Cartrawler_dev_internal.dbo.customer_reservation.updated_date</code>.
     */
    public Timestamp getUpdatedDate() {
        return (Timestamp) get(2);
    }

    /**
     * Setter for <code>Cartrawler_dev_internal.dbo.customer_reservation.update_status</code>.
     */
    public void setUpdateStatus(UByte value) {
        set(3, value);
    }

    /**
     * Getter for <code>Cartrawler_dev_internal.dbo.customer_reservation.update_status</code>.
     */
    public UByte getUpdateStatus() {
        return (UByte) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record2<Integer, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, Timestamp, UByte> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, Timestamp, UByte> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return CustomerReservation.CUSTOMER_RESERVATION.CUSTOMER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return CustomerReservation.CUSTOMER_RESERVATION.FK_RESERVATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field3() {
        return CustomerReservation.CUSTOMER_RESERVATION.UPDATED_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UByte> field4() {
        return CustomerReservation.CUSTOMER_RESERVATION.UPDATE_STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getCustomerId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getFkReservation();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component3() {
        return getUpdatedDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UByte component4() {
        return getUpdateStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getCustomerId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getFkReservation();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value3() {
        return getUpdatedDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UByte value4() {
        return getUpdateStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CustomerReservationRecord value1(Integer value) {
        setCustomerId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CustomerReservationRecord value2(Integer value) {
        setFkReservation(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CustomerReservationRecord value3(Timestamp value) {
        setUpdatedDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CustomerReservationRecord value4(UByte value) {
        setUpdateStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CustomerReservationRecord values(Integer value1, Integer value2, Timestamp value3, UByte value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CustomerReservationRecord
     */
    public CustomerReservationRecord() {
        super(CustomerReservation.CUSTOMER_RESERVATION);
    }

    /**
     * Create a detached, initialised CustomerReservationRecord
     */
    public CustomerReservationRecord(Integer customerId, Integer fkReservation, Timestamp updatedDate, UByte updateStatus) {
        super(CustomerReservation.CUSTOMER_RESERVATION);

        set(0, customerId);
        set(1, fkReservation);
        set(2, updatedDate);
        set(3, updateStatus);
    }
}
