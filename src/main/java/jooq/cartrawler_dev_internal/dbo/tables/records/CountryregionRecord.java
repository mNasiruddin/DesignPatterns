/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables.records;


import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.tables.Countryregion;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CountryregionRecord extends TableRecordImpl<CountryregionRecord> implements Record2<String, String> {

    private static final long serialVersionUID = -1385985410;

    /**
     * Setter for <code>Cartrawler_dev_internal.dbo.CountryRegion.country_id</code>.
     */
    public void setCountryId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>Cartrawler_dev_internal.dbo.CountryRegion.country_id</code>.
     */
    public String getCountryId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>Cartrawler_dev_internal.dbo.CountryRegion.MM_Region</code>.
     */
    public void setMmRegion(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>Cartrawler_dev_internal.dbo.CountryRegion.MM_Region</code>.
     */
    public String getMmRegion() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<String, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<String, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Countryregion.COUNTRYREGION.COUNTRY_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Countryregion.COUNTRYREGION.MM_REGION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getCountryId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getMmRegion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getCountryId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getMmRegion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CountryregionRecord value1(String value) {
        setCountryId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CountryregionRecord value2(String value) {
        setMmRegion(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CountryregionRecord values(String value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CountryregionRecord
     */
    public CountryregionRecord() {
        super(Countryregion.COUNTRYREGION);
    }

    /**
     * Create a detached, initialised CountryregionRecord
     */
    public CountryregionRecord(String countryId, String mmRegion) {
        super(Countryregion.COUNTRYREGION);

        set(0, countryId);
        set(1, mmRegion);
    }
}
