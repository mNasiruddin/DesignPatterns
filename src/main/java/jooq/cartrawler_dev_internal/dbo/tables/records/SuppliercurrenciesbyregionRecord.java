/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables.records;


import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.tables.Suppliercurrenciesbyregion;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SuppliercurrenciesbyregionRecord extends UpdatableRecordImpl<SuppliercurrenciesbyregionRecord> implements Record5<Integer, Integer, String, String, String> {

    private static final long serialVersionUID = 1785550598;

    /**
     * Setter for <code>Cartrawler_dev_internal.dbo.SupplierCurrenciesByRegion.ID</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>Cartrawler_dev_internal.dbo.SupplierCurrenciesByRegion.ID</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>Cartrawler_dev_internal.dbo.SupplierCurrenciesByRegion.Supplier_Region_ID</code>.
     */
    public void setSupplierRegionId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>Cartrawler_dev_internal.dbo.SupplierCurrenciesByRegion.Supplier_Region_ID</code>.
     */
    public Integer getSupplierRegionId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>Cartrawler_dev_internal.dbo.SupplierCurrenciesByRegion.Residency</code>.
     */
    public void setResidency(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>Cartrawler_dev_internal.dbo.SupplierCurrenciesByRegion.Residency</code>.
     */
    public String getResidency() {
        return (String) get(2);
    }

    /**
     * Setter for <code>Cartrawler_dev_internal.dbo.SupplierCurrenciesByRegion.Destination</code>.
     */
    public void setDestination(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>Cartrawler_dev_internal.dbo.SupplierCurrenciesByRegion.Destination</code>.
     */
    public String getDestination() {
        return (String) get(3);
    }

    /**
     * Setter for <code>Cartrawler_dev_internal.dbo.SupplierCurrenciesByRegion.Currency</code>.
     */
    public void setCurrency(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>Cartrawler_dev_internal.dbo.SupplierCurrenciesByRegion.Currency</code>.
     */
    public String getCurrency() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, Integer, String, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, Integer, String, String, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Suppliercurrenciesbyregion.SUPPLIERCURRENCIESBYREGION.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Suppliercurrenciesbyregion.SUPPLIERCURRENCIESBYREGION.SUPPLIER_REGION_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Suppliercurrenciesbyregion.SUPPLIERCURRENCIESBYREGION.RESIDENCY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Suppliercurrenciesbyregion.SUPPLIERCURRENCIESBYREGION.DESTINATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Suppliercurrenciesbyregion.SUPPLIERCURRENCIESBYREGION.CURRENCY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getSupplierRegionId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getResidency();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getDestination();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getCurrency();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getSupplierRegionId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getResidency();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getDestination();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getCurrency();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SuppliercurrenciesbyregionRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SuppliercurrenciesbyregionRecord value2(Integer value) {
        setSupplierRegionId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SuppliercurrenciesbyregionRecord value3(String value) {
        setResidency(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SuppliercurrenciesbyregionRecord value4(String value) {
        setDestination(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SuppliercurrenciesbyregionRecord value5(String value) {
        setCurrency(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SuppliercurrenciesbyregionRecord values(Integer value1, Integer value2, String value3, String value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SuppliercurrenciesbyregionRecord
     */
    public SuppliercurrenciesbyregionRecord() {
        super(Suppliercurrenciesbyregion.SUPPLIERCURRENCIESBYREGION);
    }

    /**
     * Create a detached, initialised SuppliercurrenciesbyregionRecord
     */
    public SuppliercurrenciesbyregionRecord(Integer id, Integer supplierRegionId, String residency, String destination, String currency) {
        super(Suppliercurrenciesbyregion.SUPPLIERCURRENCIESBYREGION);

        set(0, id);
        set(1, supplierRegionId);
        set(2, residency);
        set(3, destination);
        set(4, currency);
    }
}
