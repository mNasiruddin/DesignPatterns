/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables.records;


import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.tables.OtastatsMessage_1min;

import org.jooq.Field;
import org.jooq.Record12;
import org.jooq.Row12;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OtastatsMessage_1minRecord extends TableRecordImpl<OtastatsMessage_1minRecord> implements Record12<Integer, Integer, String, Integer, Integer, Long, Integer, Integer, Long, Long, Integer, Integer> {

    private static final long serialVersionUID = -1035431252;

    /**
     * Setter for <code>Cartrawler_dev_internal.dbo.otastats_message_1min.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>Cartrawler_dev_internal.dbo.otastats_message_1min.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>Cartrawler_dev_internal.dbo.otastats_message_1min.query_id</code>.
     */
    public void setQueryId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>Cartrawler_dev_internal.dbo.otastats_message_1min.query_id</code>.
     */
    public Integer getQueryId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>Cartrawler_dev_internal.dbo.otastats_message_1min.name</code>.
     */
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>Cartrawler_dev_internal.dbo.otastats_message_1min.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>Cartrawler_dev_internal.dbo.otastats_message_1min.counter</code>.
     */
    public void setCounter(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>Cartrawler_dev_internal.dbo.otastats_message_1min.counter</code>.
     */
    public Integer getCounter() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>Cartrawler_dev_internal.dbo.otastats_message_1min.maxconcurrent</code>.
     */
    public void setMaxconcurrent(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>Cartrawler_dev_internal.dbo.otastats_message_1min.maxconcurrent</code>.
     */
    public Integer getMaxconcurrent() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>Cartrawler_dev_internal.dbo.otastats_message_1min.time</code>.
     */
    public void setTime(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>Cartrawler_dev_internal.dbo.otastats_message_1min.time</code>.
     */
    public Long getTime() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>Cartrawler_dev_internal.dbo.otastats_message_1min.maxtime</code>.
     */
    public void setMaxtime(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>Cartrawler_dev_internal.dbo.otastats_message_1min.maxtime</code>.
     */
    public Integer getMaxtime() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>Cartrawler_dev_internal.dbo.otastats_message_1min.errorcounter</code>.
     */
    public void setErrorcounter(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>Cartrawler_dev_internal.dbo.otastats_message_1min.errorcounter</code>.
     */
    public Integer getErrorcounter() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>Cartrawler_dev_internal.dbo.otastats_message_1min.requestsize</code>.
     */
    public void setRequestsize(Long value) {
        set(8, value);
    }

    /**
     * Getter for <code>Cartrawler_dev_internal.dbo.otastats_message_1min.requestsize</code>.
     */
    public Long getRequestsize() {
        return (Long) get(8);
    }

    /**
     * Setter for <code>Cartrawler_dev_internal.dbo.otastats_message_1min.responsesize</code>.
     */
    public void setResponsesize(Long value) {
        set(9, value);
    }

    /**
     * Getter for <code>Cartrawler_dev_internal.dbo.otastats_message_1min.responsesize</code>.
     */
    public Long getResponsesize() {
        return (Long) get(9);
    }

    /**
     * Setter for <code>Cartrawler_dev_internal.dbo.otastats_message_1min.messageerrorcounter</code>.
     */
    public void setMessageerrorcounter(Integer value) {
        set(10, value);
    }

    /**
     * Getter for <code>Cartrawler_dev_internal.dbo.otastats_message_1min.messageerrorcounter</code>.
     */
    public Integer getMessageerrorcounter() {
        return (Integer) get(10);
    }

    /**
     * Setter for <code>Cartrawler_dev_internal.dbo.otastats_message_1min.concurrent</code>.
     */
    public void setConcurrent(Integer value) {
        set(11, value);
    }

    /**
     * Getter for <code>Cartrawler_dev_internal.dbo.otastats_message_1min.concurrent</code>.
     */
    public Integer getConcurrent() {
        return (Integer) get(11);
    }

    // -------------------------------------------------------------------------
    // Record12 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row12<Integer, Integer, String, Integer, Integer, Long, Integer, Integer, Long, Long, Integer, Integer> fieldsRow() {
        return (Row12) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row12<Integer, Integer, String, Integer, Integer, Long, Integer, Integer, Long, Long, Integer, Integer> valuesRow() {
        return (Row12) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return OtastatsMessage_1min.OTASTATS_MESSAGE_1MIN.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return OtastatsMessage_1min.OTASTATS_MESSAGE_1MIN.QUERY_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return OtastatsMessage_1min.OTASTATS_MESSAGE_1MIN.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return OtastatsMessage_1min.OTASTATS_MESSAGE_1MIN.COUNTER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field5() {
        return OtastatsMessage_1min.OTASTATS_MESSAGE_1MIN.MAXCONCURRENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field6() {
        return OtastatsMessage_1min.OTASTATS_MESSAGE_1MIN.TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field7() {
        return OtastatsMessage_1min.OTASTATS_MESSAGE_1MIN.MAXTIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field8() {
        return OtastatsMessage_1min.OTASTATS_MESSAGE_1MIN.ERRORCOUNTER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field9() {
        return OtastatsMessage_1min.OTASTATS_MESSAGE_1MIN.REQUESTSIZE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field10() {
        return OtastatsMessage_1min.OTASTATS_MESSAGE_1MIN.RESPONSESIZE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field11() {
        return OtastatsMessage_1min.OTASTATS_MESSAGE_1MIN.MESSAGEERRORCOUNTER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field12() {
        return OtastatsMessage_1min.OTASTATS_MESSAGE_1MIN.CONCURRENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getQueryId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component4() {
        return getCounter();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component5() {
        return getMaxconcurrent();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component6() {
        return getTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component7() {
        return getMaxtime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component8() {
        return getErrorcounter();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component9() {
        return getRequestsize();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component10() {
        return getResponsesize();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component11() {
        return getMessageerrorcounter();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component12() {
        return getConcurrent();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getQueryId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getCounter();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value5() {
        return getMaxconcurrent();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value6() {
        return getTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value7() {
        return getMaxtime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value8() {
        return getErrorcounter();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value9() {
        return getRequestsize();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value10() {
        return getResponsesize();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value11() {
        return getMessageerrorcounter();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value12() {
        return getConcurrent();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OtastatsMessage_1minRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OtastatsMessage_1minRecord value2(Integer value) {
        setQueryId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OtastatsMessage_1minRecord value3(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OtastatsMessage_1minRecord value4(Integer value) {
        setCounter(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OtastatsMessage_1minRecord value5(Integer value) {
        setMaxconcurrent(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OtastatsMessage_1minRecord value6(Long value) {
        setTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OtastatsMessage_1minRecord value7(Integer value) {
        setMaxtime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OtastatsMessage_1minRecord value8(Integer value) {
        setErrorcounter(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OtastatsMessage_1minRecord value9(Long value) {
        setRequestsize(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OtastatsMessage_1minRecord value10(Long value) {
        setResponsesize(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OtastatsMessage_1minRecord value11(Integer value) {
        setMessageerrorcounter(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OtastatsMessage_1minRecord value12(Integer value) {
        setConcurrent(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OtastatsMessage_1minRecord values(Integer value1, Integer value2, String value3, Integer value4, Integer value5, Long value6, Integer value7, Integer value8, Long value9, Long value10, Integer value11, Integer value12) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OtastatsMessage_1minRecord
     */
    public OtastatsMessage_1minRecord() {
        super(OtastatsMessage_1min.OTASTATS_MESSAGE_1MIN);
    }

    /**
     * Create a detached, initialised OtastatsMessage_1minRecord
     */
    public OtastatsMessage_1minRecord(Integer id, Integer queryId, String name, Integer counter, Integer maxconcurrent, Long time, Integer maxtime, Integer errorcounter, Long requestsize, Long responsesize, Integer messageerrorcounter, Integer concurrent) {
        super(OtastatsMessage_1min.OTASTATS_MESSAGE_1MIN);

        set(0, id);
        set(1, queryId);
        set(2, name);
        set(3, counter);
        set(4, maxconcurrent);
        set(5, time);
        set(6, maxtime);
        set(7, errorcounter);
        set(8, requestsize);
        set(9, responsesize);
        set(10, messageerrorcounter);
        set(11, concurrent);
    }
}
