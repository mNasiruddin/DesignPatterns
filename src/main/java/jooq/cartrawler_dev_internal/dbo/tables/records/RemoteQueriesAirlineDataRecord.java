/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.tables.RemoteQueriesAirlineData;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UByte;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RemoteQueriesAirlineDataRecord extends UpdatableRecordImpl<RemoteQueriesAirlineDataRecord> implements Record4<Long, String, UByte, Timestamp> {

    private static final long serialVersionUID = 635126518;

    /**
     * Setter for <code>Cartrawler_dev_internal.dbo.remote_queries_airline_data.fk_remote_queries</code>.
     */
    public void setFkRemoteQueries(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>Cartrawler_dev_internal.dbo.remote_queries_airline_data.fk_remote_queries</code>.
     */
    public Long getFkRemoteQueries() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>Cartrawler_dev_internal.dbo.remote_queries_airline_data.sourceAirport</code>.
     */
    public void setSourceairport(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>Cartrawler_dev_internal.dbo.remote_queries_airline_data.sourceAirport</code>.
     */
    public String getSourceairport() {
        return (String) get(1);
    }

    /**
     * Setter for <code>Cartrawler_dev_internal.dbo.remote_queries_airline_data.pax</code>. number of passengers in the PNR
     */
    public void setPax(UByte value) {
        set(2, value);
    }

    /**
     * Getter for <code>Cartrawler_dev_internal.dbo.remote_queries_airline_data.pax</code>. number of passengers in the PNR
     */
    public UByte getPax() {
        return (UByte) get(2);
    }

    /**
     * Setter for <code>Cartrawler_dev_internal.dbo.remote_queries_airline_data.querydate</code>.
     */
    public void setQuerydate(Timestamp value) {
        set(3, value);
    }

    /**
     * Getter for <code>Cartrawler_dev_internal.dbo.remote_queries_airline_data.querydate</code>.
     */
    public Timestamp getQuerydate() {
        return (Timestamp) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Long, String, UByte, Timestamp> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Long, String, UByte, Timestamp> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return RemoteQueriesAirlineData.REMOTE_QUERIES_AIRLINE_DATA.FK_REMOTE_QUERIES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return RemoteQueriesAirlineData.REMOTE_QUERIES_AIRLINE_DATA.SOURCEAIRPORT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UByte> field3() {
        return RemoteQueriesAirlineData.REMOTE_QUERIES_AIRLINE_DATA.PAX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field4() {
        return RemoteQueriesAirlineData.REMOTE_QUERIES_AIRLINE_DATA.QUERYDATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getFkRemoteQueries();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getSourceairport();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UByte component3() {
        return getPax();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component4() {
        return getQuerydate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getFkRemoteQueries();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getSourceairport();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UByte value3() {
        return getPax();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value4() {
        return getQuerydate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RemoteQueriesAirlineDataRecord value1(Long value) {
        setFkRemoteQueries(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RemoteQueriesAirlineDataRecord value2(String value) {
        setSourceairport(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RemoteQueriesAirlineDataRecord value3(UByte value) {
        setPax(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RemoteQueriesAirlineDataRecord value4(Timestamp value) {
        setQuerydate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RemoteQueriesAirlineDataRecord values(Long value1, String value2, UByte value3, Timestamp value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RemoteQueriesAirlineDataRecord
     */
    public RemoteQueriesAirlineDataRecord() {
        super(RemoteQueriesAirlineData.REMOTE_QUERIES_AIRLINE_DATA);
    }

    /**
     * Create a detached, initialised RemoteQueriesAirlineDataRecord
     */
    public RemoteQueriesAirlineDataRecord(Long fkRemoteQueries, String sourceairport, UByte pax, Timestamp querydate) {
        super(RemoteQueriesAirlineData.REMOTE_QUERIES_AIRLINE_DATA);

        set(0, fkRemoteQueries);
        set(1, sourceairport);
        set(2, pax);
        set(3, querydate);
    }
}
