/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables.records;


import java.math.BigDecimal;
import java.sql.Date;
import java.sql.Timestamp;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.tables.Clientcommissiontiers;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record12;
import org.jooq.Row12;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ClientcommissiontiersRecord extends UpdatableRecordImpl<ClientcommissiontiersRecord> implements Record12<Integer, Integer, BigDecimal, Short, Short, BigDecimal, Integer, Date, Timestamp, Boolean, Date, Date> {

    private static final long serialVersionUID = 2097845300;

    /**
     * Setter for <code>Cartrawler_dev_internal.dbo.ClientCommissionTiers.Id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>Cartrawler_dev_internal.dbo.ClientCommissionTiers.Id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>Cartrawler_dev_internal.dbo.ClientCommissionTiers.Ref</code>.
     */
    public void setRef(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>Cartrawler_dev_internal.dbo.ClientCommissionTiers.Ref</code>.
     */
    public Integer getRef() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>Cartrawler_dev_internal.dbo.ClientCommissionTiers.Percent</code>.
     */
    public void setPercent(BigDecimal value) {
        set(2, value);
    }

    /**
     * Getter for <code>Cartrawler_dev_internal.dbo.ClientCommissionTiers.Percent</code>.
     */
    public BigDecimal getPercent() {
        return (BigDecimal) get(2);
    }

    /**
     * Setter for <code>Cartrawler_dev_internal.dbo.ClientCommissionTiers.TierType</code>.
     */
    public void setTiertype(Short value) {
        set(3, value);
    }

    /**
     * Getter for <code>Cartrawler_dev_internal.dbo.ClientCommissionTiers.TierType</code>.
     */
    public Short getTiertype() {
        return (Short) get(3);
    }

    /**
     * Setter for <code>Cartrawler_dev_internal.dbo.ClientCommissionTiers.CommissionType</code>.
     */
    public void setCommissiontype(Short value) {
        set(4, value);
    }

    /**
     * Getter for <code>Cartrawler_dev_internal.dbo.ClientCommissionTiers.CommissionType</code>.
     */
    public Short getCommissiontype() {
        return (Short) get(4);
    }

    /**
     * Setter for <code>Cartrawler_dev_internal.dbo.ClientCommissionTiers.TierThreshold</code>.
     */
    public void setTierthreshold(BigDecimal value) {
        set(5, value);
    }

    /**
     * Getter for <code>Cartrawler_dev_internal.dbo.ClientCommissionTiers.TierThreshold</code>.
     */
    public BigDecimal getTierthreshold() {
        return (BigDecimal) get(5);
    }

    /**
     * Setter for <code>Cartrawler_dev_internal.dbo.ClientCommissionTiers.SubRef</code>.
     */
    public void setSubref(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>Cartrawler_dev_internal.dbo.ClientCommissionTiers.SubRef</code>.
     */
    public Integer getSubref() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>Cartrawler_dev_internal.dbo.ClientCommissionTiers.rollover</code>.
     */
    public void setRollover(Date value) {
        set(7, value);
    }

    /**
     * Getter for <code>Cartrawler_dev_internal.dbo.ClientCommissionTiers.rollover</code>.
     */
    public Date getRollover() {
        return (Date) get(7);
    }

    /**
     * Setter for <code>Cartrawler_dev_internal.dbo.ClientCommissionTiers.lastUpdate</code>.
     */
    public void setLastupdate(Timestamp value) {
        set(8, value);
    }

    /**
     * Getter for <code>Cartrawler_dev_internal.dbo.ClientCommissionTiers.lastUpdate</code>.
     */
    public Timestamp getLastupdate() {
        return (Timestamp) get(8);
    }

    /**
     * Setter for <code>Cartrawler_dev_internal.dbo.ClientCommissionTiers.exclude_commission</code>.
     */
    public void setExcludeCommission(Boolean value) {
        set(9, value);
    }

    /**
     * Getter for <code>Cartrawler_dev_internal.dbo.ClientCommissionTiers.exclude_commission</code>.
     */
    public Boolean getExcludeCommission() {
        return (Boolean) get(9);
    }

    /**
     * Setter for <code>Cartrawler_dev_internal.dbo.ClientCommissionTiers.applicable_from</code>.
     */
    public void setApplicableFrom(Date value) {
        set(10, value);
    }

    /**
     * Getter for <code>Cartrawler_dev_internal.dbo.ClientCommissionTiers.applicable_from</code>.
     */
    public Date getApplicableFrom() {
        return (Date) get(10);
    }

    /**
     * Setter for <code>Cartrawler_dev_internal.dbo.ClientCommissionTiers.last_application</code>.
     */
    public void setLastApplication(Date value) {
        set(11, value);
    }

    /**
     * Getter for <code>Cartrawler_dev_internal.dbo.ClientCommissionTiers.last_application</code>.
     */
    public Date getLastApplication() {
        return (Date) get(11);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record12 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row12<Integer, Integer, BigDecimal, Short, Short, BigDecimal, Integer, Date, Timestamp, Boolean, Date, Date> fieldsRow() {
        return (Row12) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row12<Integer, Integer, BigDecimal, Short, Short, BigDecimal, Integer, Date, Timestamp, Boolean, Date, Date> valuesRow() {
        return (Row12) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Clientcommissiontiers.CLIENTCOMMISSIONTIERS.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Clientcommissiontiers.CLIENTCOMMISSIONTIERS.REF;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field3() {
        return Clientcommissiontiers.CLIENTCOMMISSIONTIERS.PERCENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field4() {
        return Clientcommissiontiers.CLIENTCOMMISSIONTIERS.TIERTYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field5() {
        return Clientcommissiontiers.CLIENTCOMMISSIONTIERS.COMMISSIONTYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field6() {
        return Clientcommissiontiers.CLIENTCOMMISSIONTIERS.TIERTHRESHOLD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field7() {
        return Clientcommissiontiers.CLIENTCOMMISSIONTIERS.SUBREF;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field8() {
        return Clientcommissiontiers.CLIENTCOMMISSIONTIERS.ROLLOVER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field9() {
        return Clientcommissiontiers.CLIENTCOMMISSIONTIERS.LASTUPDATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field10() {
        return Clientcommissiontiers.CLIENTCOMMISSIONTIERS.EXCLUDE_COMMISSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field11() {
        return Clientcommissiontiers.CLIENTCOMMISSIONTIERS.APPLICABLE_FROM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field12() {
        return Clientcommissiontiers.CLIENTCOMMISSIONTIERS.LAST_APPLICATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getRef();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component3() {
        return getPercent();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component4() {
        return getTiertype();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component5() {
        return getCommissiontype();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component6() {
        return getTierthreshold();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component7() {
        return getSubref();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date component8() {
        return getRollover();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component9() {
        return getLastupdate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component10() {
        return getExcludeCommission();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date component11() {
        return getApplicableFrom();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date component12() {
        return getLastApplication();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getRef();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value3() {
        return getPercent();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value4() {
        return getTiertype();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value5() {
        return getCommissiontype();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value6() {
        return getTierthreshold();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value7() {
        return getSubref();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value8() {
        return getRollover();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value9() {
        return getLastupdate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value10() {
        return getExcludeCommission();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value11() {
        return getApplicableFrom();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value12() {
        return getLastApplication();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClientcommissiontiersRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClientcommissiontiersRecord value2(Integer value) {
        setRef(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClientcommissiontiersRecord value3(BigDecimal value) {
        setPercent(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClientcommissiontiersRecord value4(Short value) {
        setTiertype(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClientcommissiontiersRecord value5(Short value) {
        setCommissiontype(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClientcommissiontiersRecord value6(BigDecimal value) {
        setTierthreshold(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClientcommissiontiersRecord value7(Integer value) {
        setSubref(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClientcommissiontiersRecord value8(Date value) {
        setRollover(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClientcommissiontiersRecord value9(Timestamp value) {
        setLastupdate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClientcommissiontiersRecord value10(Boolean value) {
        setExcludeCommission(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClientcommissiontiersRecord value11(Date value) {
        setApplicableFrom(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClientcommissiontiersRecord value12(Date value) {
        setLastApplication(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClientcommissiontiersRecord values(Integer value1, Integer value2, BigDecimal value3, Short value4, Short value5, BigDecimal value6, Integer value7, Date value8, Timestamp value9, Boolean value10, Date value11, Date value12) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ClientcommissiontiersRecord
     */
    public ClientcommissiontiersRecord() {
        super(Clientcommissiontiers.CLIENTCOMMISSIONTIERS);
    }

    /**
     * Create a detached, initialised ClientcommissiontiersRecord
     */
    public ClientcommissiontiersRecord(Integer id, Integer ref, BigDecimal percent, Short tiertype, Short commissiontype, BigDecimal tierthreshold, Integer subref, Date rollover, Timestamp lastupdate, Boolean excludeCommission, Date applicableFrom, Date lastApplication) {
        super(Clientcommissiontiers.CLIENTCOMMISSIONTIERS);

        set(0, id);
        set(1, ref);
        set(2, percent);
        set(3, tiertype);
        set(4, commissiontype);
        set(5, tierthreshold);
        set(6, subref);
        set(7, rollover);
        set(8, lastupdate);
        set(9, excludeCommission);
        set(10, applicableFrom);
        set(11, lastApplication);
    }
}
