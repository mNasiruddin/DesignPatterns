/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.ContractRcRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ContractRc extends TableImpl<ContractRcRecord> {

    private static final long serialVersionUID = 1985618280;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.contract_rc</code>
     */
    public static final ContractRc CONTRACT_RC = new ContractRc();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ContractRcRecord> getRecordType() {
        return ContractRcRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.contract_rc.guid</code>.
     */
    public final TableField<ContractRcRecord, UUID> GUID = createField("guid", org.jooq.impl.SQLDataType.UUID.nullable(false).defaultValue(org.jooq.impl.DSL.field("(newid())", org.jooq.impl.SQLDataType.UUID)), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.contract_rc.id</code>.
     */
    public final TableField<ContractRcRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.contract_rc.contractRulesType</code>.
     */
    public final TableField<ContractRcRecord, String> CONTRACTRULESTYPE = createField("contractRulesType", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.contract_rc.locationId</code>.
     */
    public final TableField<ContractRcRecord, Integer> LOCATIONID = createField("locationId", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.contract_rc.sort_order</code>.
     */
    public final TableField<ContractRcRecord, Integer> SORT_ORDER = createField("sort_order", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.contract_rc.title_new</code>.
     */
    public final TableField<ContractRcRecord, byte[]> TITLE_NEW = createField("title_new", org.jooq.impl.SQLDataType.VARBINARY(128), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.contract_rc.contractId</code>.
     */
    public final TableField<ContractRcRecord, Integer> CONTRACTID = createField("contractId", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.contract_rc.lang_id</code>.
     */
    public final TableField<ContractRcRecord, Integer> LANG_ID = createField("lang_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.contract_rc.title</code>.
     */
    public final TableField<ContractRcRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR(128), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.contract_rc.paragraph_new</code>.
     */
    public final TableField<ContractRcRecord, byte[]> PARAGRAPH_NEW = createField("paragraph_new", org.jooq.impl.SQLDataType.BINARY(2147483647), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.contract_rc.paragraph</code>.
     */
    public final TableField<ContractRcRecord, String> PARAGRAPH = createField("paragraph", org.jooq.impl.SQLDataType.VARCHAR(1), this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.contract_rc</code> table reference
     */
    public ContractRc() {
        this(DSL.name("contract_rc"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.contract_rc</code> table reference
     */
    public ContractRc(String alias) {
        this(DSL.name(alias), CONTRACT_RC);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.contract_rc</code> table reference
     */
    public ContractRc(Name alias) {
        this(alias, CONTRACT_RC);
    }

    private ContractRc(Name alias, Table<ContractRcRecord> aliased) {
        this(alias, aliased, null);
    }

    private ContractRc(Name alias, Table<ContractRcRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> ContractRc(Table<O> child, ForeignKey<O, ContractRcRecord> key) {
        super(child, key, CONTRACT_RC);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CONTRACT_RC_PK_CONTRACT_RC);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ContractRcRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CONTRACT_RC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ContractRcRecord> getPrimaryKey() {
        return Keys.PK_CONTRACT_RC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ContractRcRecord>> getKeys() {
        return Arrays.<UniqueKey<ContractRcRecord>>asList(Keys.PK_CONTRACT_RC);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ContractRc as(String alias) {
        return new ContractRc(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ContractRc as(Name alias) {
        return new ContractRc(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ContractRc rename(String name) {
        return new ContractRc(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ContractRc rename(Name name) {
        return new ContractRc(name, null);
    }
}
