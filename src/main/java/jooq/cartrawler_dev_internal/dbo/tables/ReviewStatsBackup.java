/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.ReviewStatsBackupRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ReviewStatsBackup extends TableImpl<ReviewStatsBackupRecord> {

    private static final long serialVersionUID = -64354412;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.review_stats_backup</code>
     */
    public static final ReviewStatsBackup REVIEW_STATS_BACKUP = new ReviewStatsBackup();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ReviewStatsBackupRecord> getRecordType() {
        return ReviewStatsBackupRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.review_stats_backup.id</code>.
     */
    public final TableField<ReviewStatsBackupRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.review_stats_backup.rental_agent_id</code>.
     */
    public final TableField<ReviewStatsBackupRecord, Integer> RENTAL_AGENT_ID = createField("rental_agent_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.review_stats_backup.pickup_car_agent_location_id</code>.
     */
    public final TableField<ReviewStatsBackupRecord, Integer> PICKUP_CAR_AGENT_LOCATION_ID = createField("pickup_car_agent_location_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.review_stats_backup.company_name</code>.
     */
    public final TableField<ReviewStatsBackupRecord, String> COMPANY_NAME = createField("company_name", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.review_stats_backup.num_reviews</code>.
     */
    public final TableField<ReviewStatsBackupRecord, Integer> NUM_REVIEWS = createField("num_reviews", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.review_stats_backup.rate_experience</code>.
     */
    public final TableField<ReviewStatsBackupRecord, BigDecimal> RATE_EXPERIENCE = createField("rate_experience", org.jooq.impl.SQLDataType.NUMERIC(10, 2).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.review_stats_backup.rate_description</code>.
     */
    public final TableField<ReviewStatsBackupRecord, BigDecimal> RATE_DESCRIPTION = createField("rate_description", org.jooq.impl.SQLDataType.NUMERIC(10, 2).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.review_stats_backup.rate_car</code>.
     */
    public final TableField<ReviewStatsBackupRecord, BigDecimal> RATE_CAR = createField("rate_car", org.jooq.impl.SQLDataType.NUMERIC(10, 2).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.review_stats_backup.rate_location</code>.
     */
    public final TableField<ReviewStatsBackupRecord, BigDecimal> RATE_LOCATION = createField("rate_location", org.jooq.impl.SQLDataType.NUMERIC(10, 2).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.review_stats_backup.rate_pickup</code>.
     */
    public final TableField<ReviewStatsBackupRecord, BigDecimal> RATE_PICKUP = createField("rate_pickup", org.jooq.impl.SQLDataType.NUMERIC(10, 2).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.review_stats_backup.rate_dropoff</code>.
     */
    public final TableField<ReviewStatsBackupRecord, BigDecimal> RATE_DROPOFF = createField("rate_dropoff", org.jooq.impl.SQLDataType.NUMERIC(10, 2).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.review_stats_backup.rate_staff</code>.
     */
    public final TableField<ReviewStatsBackupRecord, BigDecimal> RATE_STAFF = createField("rate_staff", org.jooq.impl.SQLDataType.NUMERIC(10, 2).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.review_stats_backup.yesno_rentagain</code>.
     */
    public final TableField<ReviewStatsBackupRecord, BigDecimal> YESNO_RENTAGAIN = createField("yesno_rentagain", org.jooq.impl.SQLDataType.NUMERIC(10, 2).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.review_stats_backup.yesno_pricehonoured</code>.
     */
    public final TableField<ReviewStatsBackupRecord, BigDecimal> YESNO_PRICEHONOURED = createField("yesno_pricehonoured", org.jooq.impl.SQLDataType.NUMERIC(10, 2).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.review_stats_backup.business</code>.
     */
    public final TableField<ReviewStatsBackupRecord, Integer> BUSINESS = createField("business", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.review_stats_backup.family</code>.
     */
    public final TableField<ReviewStatsBackupRecord, Integer> FAMILY = createField("family", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.review_stats_backup.friends</code>.
     */
    public final TableField<ReviewStatsBackupRecord, Integer> FRIENDS = createField("friends", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.review_stats_backup.couples</code>.
     */
    public final TableField<ReviewStatsBackupRecord, Integer> COUPLES = createField("couples", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.review_stats_backup.recalc</code>.
     */
    public final TableField<ReviewStatsBackupRecord, Boolean> RECALC = createField("recalc", org.jooq.impl.SQLDataType.BIT.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.review_stats_backup.last_update</code>.
     */
    public final TableField<ReviewStatsBackupRecord, Timestamp> LAST_UPDATE = createField("last_update", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.review_stats_backup</code> table reference
     */
    public ReviewStatsBackup() {
        this(DSL.name("review_stats_backup"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.review_stats_backup</code> table reference
     */
    public ReviewStatsBackup(String alias) {
        this(DSL.name(alias), REVIEW_STATS_BACKUP);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.review_stats_backup</code> table reference
     */
    public ReviewStatsBackup(Name alias) {
        this(alias, REVIEW_STATS_BACKUP);
    }

    private ReviewStatsBackup(Name alias, Table<ReviewStatsBackupRecord> aliased) {
        this(alias, aliased, null);
    }

    private ReviewStatsBackup(Name alias, Table<ReviewStatsBackupRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> ReviewStatsBackup(Table<O> child, ForeignKey<O, ReviewStatsBackupRecord> key) {
        super(child, key, REVIEW_STATS_BACKUP);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.REVIEW_STATS_BACKUP_PK__REVIEW_S_BACKUP);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ReviewStatsBackupRecord, Integer> getIdentity() {
        return Keys.IDENTITY_REVIEW_STATS_BACKUP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ReviewStatsBackupRecord> getPrimaryKey() {
        return Keys.PK__REVIEW_S_BACKUP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ReviewStatsBackupRecord>> getKeys() {
        return Arrays.<UniqueKey<ReviewStatsBackupRecord>>asList(Keys.PK__REVIEW_S_BACKUP);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReviewStatsBackup as(String alias) {
        return new ReviewStatsBackup(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReviewStatsBackup as(Name alias) {
        return new ReviewStatsBackup(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ReviewStatsBackup rename(String name) {
        return new ReviewStatsBackup(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ReviewStatsBackup rename(Name name) {
        return new ReviewStatsBackup(name, null);
    }
}
