/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.ReservationChargesRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ReservationCharges extends TableImpl<ReservationChargesRecord> {

    private static final long serialVersionUID = 862135958;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.Reservation_Charges</code>
     */
    public static final ReservationCharges RESERVATION_CHARGES = new ReservationCharges();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ReservationChargesRecord> getRecordType() {
        return ReservationChargesRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Reservation_Charges.Reservation_Ref</code>.
     */
    public final TableField<ReservationChargesRecord, Integer> RESERVATION_REF = createField("Reservation_Ref", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Reservation_Charges.Seq_No</code>.
     */
    public final TableField<ReservationChargesRecord, Integer> SEQ_NO = createField("Seq_No", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Reservation_Charges.No_Days</code>.
     */
    public final TableField<ReservationChargesRecord, BigDecimal> NO_DAYS = createField("No_Days", org.jooq.impl.SQLDataType.NUMERIC(7, 2).defaultValue(org.jooq.impl.DSL.field("((0))", org.jooq.impl.SQLDataType.NUMERIC)), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Reservation_Charges.Season_ID</code>.
     */
    public final TableField<ReservationChargesRecord, String> SEASON_ID = createField("Season_ID", org.jooq.impl.SQLDataType.CHAR(1), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Reservation_Charges.Charge</code>.
     */
    public final TableField<ReservationChargesRecord, BigDecimal> CHARGE = createField("Charge", org.jooq.impl.SQLDataType.NUMERIC(10, 6).defaultValue(org.jooq.impl.DSL.field("((0))", org.jooq.impl.SQLDataType.NUMERIC)), this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.Reservation_Charges</code> table reference
     */
    public ReservationCharges() {
        this(DSL.name("Reservation_Charges"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.Reservation_Charges</code> table reference
     */
    public ReservationCharges(String alias) {
        this(DSL.name(alias), RESERVATION_CHARGES);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.Reservation_Charges</code> table reference
     */
    public ReservationCharges(Name alias) {
        this(alias, RESERVATION_CHARGES);
    }

    private ReservationCharges(Name alias, Table<ReservationChargesRecord> aliased) {
        this(alias, aliased, null);
    }

    private ReservationCharges(Name alias, Table<ReservationChargesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> ReservationCharges(Table<O> child, ForeignKey<O, ReservationChargesRecord> key) {
        super(child, key, RESERVATION_CHARGES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.RESERVATION_CHARGES_RESERVATION_CHARGES_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ReservationChargesRecord, Integer> getIdentity() {
        return Keys.IDENTITY_RESERVATION_CHARGES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ReservationChargesRecord> getPrimaryKey() {
        return Keys.RESERVATION_CHARGES_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ReservationChargesRecord>> getKeys() {
        return Arrays.<UniqueKey<ReservationChargesRecord>>asList(Keys.RESERVATION_CHARGES_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReservationCharges as(String alias) {
        return new ReservationCharges(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReservationCharges as(Name alias) {
        return new ReservationCharges(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ReservationCharges rename(String name) {
        return new ReservationCharges(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ReservationCharges rename(Name name) {
        return new ReservationCharges(name, null);
    }
}
