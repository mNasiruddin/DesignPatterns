/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.IssalgorithmRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Issalgorithm extends TableImpl<IssalgorithmRecord> {

    private static final long serialVersionUID = -2060156397;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.issAlgorithm</code>
     */
    public static final Issalgorithm ISSALGORITHM = new Issalgorithm();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<IssalgorithmRecord> getRecordType() {
        return IssalgorithmRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.issAlgorithm.algorithm_id</code>.
     */
    public final TableField<IssalgorithmRecord, Integer> ALGORITHM_ID = createField("algorithm_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.issAlgorithm.algorithm_name</code>.
     */
    public final TableField<IssalgorithmRecord, String> ALGORITHM_NAME = createField("algorithm_name", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.issAlgorithm.p1</code>.
     */
    public final TableField<IssalgorithmRecord, Double> P1 = createField("p1", org.jooq.impl.SQLDataType.FLOAT, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.issAlgorithm.p2</code>.
     */
    public final TableField<IssalgorithmRecord, Double> P2 = createField("p2", org.jooq.impl.SQLDataType.FLOAT, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.issAlgorithm.p3</code>.
     */
    public final TableField<IssalgorithmRecord, Double> P3 = createField("p3", org.jooq.impl.SQLDataType.FLOAT, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.issAlgorithm.clazz</code>.
     */
    public final TableField<IssalgorithmRecord, String> CLAZZ = createField("clazz", org.jooq.impl.SQLDataType.VARCHAR(60).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.issAlgorithm.created</code>.
     */
    public final TableField<IssalgorithmRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("(getdate())", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.issAlgorithm</code> table reference
     */
    public Issalgorithm() {
        this(DSL.name("issAlgorithm"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.issAlgorithm</code> table reference
     */
    public Issalgorithm(String alias) {
        this(DSL.name(alias), ISSALGORITHM);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.issAlgorithm</code> table reference
     */
    public Issalgorithm(Name alias) {
        this(alias, ISSALGORITHM);
    }

    private Issalgorithm(Name alias, Table<IssalgorithmRecord> aliased) {
        this(alias, aliased, null);
    }

    private Issalgorithm(Name alias, Table<IssalgorithmRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Issalgorithm(Table<O> child, ForeignKey<O, IssalgorithmRecord> key) {
        super(child, key, ISSALGORITHM);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ISSALGORITHM_PK_ISSALGORITHM);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<IssalgorithmRecord> getPrimaryKey() {
        return Keys.PK_ISSALGORITHM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<IssalgorithmRecord>> getKeys() {
        return Arrays.<UniqueKey<IssalgorithmRecord>>asList(Keys.PK_ISSALGORITHM);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Issalgorithm as(String alias) {
        return new Issalgorithm(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Issalgorithm as(Name alias) {
        return new Issalgorithm(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Issalgorithm rename(String name) {
        return new Issalgorithm(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Issalgorithm rename(Name name) {
        return new Issalgorithm(name, null);
    }
}
