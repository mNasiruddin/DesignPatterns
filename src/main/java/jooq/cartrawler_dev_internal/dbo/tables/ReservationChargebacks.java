/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.ReservationChargebacksRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UByte;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ReservationChargebacks extends TableImpl<ReservationChargebacksRecord> {

    private static final long serialVersionUID = -75876460;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.reservation_chargebacks</code>
     */
    public static final ReservationChargebacks RESERVATION_CHARGEBACKS = new ReservationChargebacks();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ReservationChargebacksRecord> getRecordType() {
        return ReservationChargebacksRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.reservation_chargebacks.guid</code>.
     */
    public final TableField<ReservationChargebacksRecord, UUID> GUID = createField("guid", org.jooq.impl.SQLDataType.UUID.nullable(false).defaultValue(org.jooq.impl.DSL.field("(newid())", org.jooq.impl.SQLDataType.UUID)), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.reservation_chargebacks.id</code>.
     */
    public final TableField<ReservationChargebacksRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.reservation_chargebacks.fk_reservation</code>.
     */
    public final TableField<ReservationChargebacksRecord, Integer> FK_RESERVATION = createField("fk_reservation", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.reservation_chargebacks.remarks</code>.
     */
    public final TableField<ReservationChargebacksRecord, String> REMARKS = createField("remarks", org.jooq.impl.SQLDataType.VARCHAR(512), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.reservation_chargebacks.createDate</code>.
     */
    public final TableField<ReservationChargebacksRecord, Timestamp> CREATEDATE = createField("createDate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("(getdate())", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.reservation_chargebacks.fk_user</code>. fk to Users
     */
    public final TableField<ReservationChargebacksRecord, Integer> FK_USER = createField("fk_user", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "fk to Users");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.reservation_chargebacks.blacklist</code>.
     */
    public final TableField<ReservationChargebacksRecord, Boolean> BLACKLIST = createField("blacklist", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.reservation_chargebacks.chargeback</code>.
     */
    public final TableField<ReservationChargebacksRecord, Boolean> CHARGEBACK = createField("chargeback", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.reservation_chargebacks.fraud</code>.
     */
    public final TableField<ReservationChargebacksRecord, Boolean> FRAUD = createField("fraud", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.reservation_chargebacks.notFulfilled</code>.
     */
    public final TableField<ReservationChargebacksRecord, Boolean> NOTFULFILLED = createField("notFulfilled", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.reservation_chargebacks.cb_control_number</code>.
     */
    public final TableField<ReservationChargebacksRecord, String> CB_CONTROL_NUMBER = createField("cb_control_number", org.jooq.impl.SQLDataType.VARCHAR(32), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.reservation_chargebacks.closed_date</code>.
     */
    public final TableField<ReservationChargebacksRecord, Timestamp> CLOSED_DATE = createField("closed_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.reservation_chargebacks.chargeback_status</code>.
     */
    public final TableField<ReservationChargebacksRecord, UByte> CHARGEBACK_STATUS = createField("chargeback_status", org.jooq.impl.SQLDataType.TINYINTUNSIGNED, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.reservation_chargebacks.chargeback_source</code>.
     */
    public final TableField<ReservationChargebacksRecord, Short> CHARGEBACK_SOURCE = createField("chargeback_source", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.reservation_chargebacks</code> table reference
     */
    public ReservationChargebacks() {
        this(DSL.name("reservation_chargebacks"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.reservation_chargebacks</code> table reference
     */
    public ReservationChargebacks(String alias) {
        this(DSL.name(alias), RESERVATION_CHARGEBACKS);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.reservation_chargebacks</code> table reference
     */
    public ReservationChargebacks(Name alias) {
        this(alias, RESERVATION_CHARGEBACKS);
    }

    private ReservationChargebacks(Name alias, Table<ReservationChargebacksRecord> aliased) {
        this(alias, aliased, null);
    }

    private ReservationChargebacks(Name alias, Table<ReservationChargebacksRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> ReservationChargebacks(Table<O> child, ForeignKey<O, ReservationChargebacksRecord> key) {
        super(child, key, RESERVATION_CHARGEBACKS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.RESERVATION_CHARGEBACKS_PK_RESERVATION_CHARGEBACKS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ReservationChargebacksRecord, Integer> getIdentity() {
        return Keys.IDENTITY_RESERVATION_CHARGEBACKS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ReservationChargebacksRecord> getPrimaryKey() {
        return Keys.PK_RESERVATION_CHARGEBACKS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ReservationChargebacksRecord>> getKeys() {
        return Arrays.<UniqueKey<ReservationChargebacksRecord>>asList(Keys.PK_RESERVATION_CHARGEBACKS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReservationChargebacks as(String alias) {
        return new ReservationChargebacks(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReservationChargebacks as(Name alias) {
        return new ReservationChargebacks(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ReservationChargebacks rename(String name) {
        return new ReservationChargebacks(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ReservationChargebacks rename(Name name) {
        return new ReservationChargebacks(name, null);
    }
}
