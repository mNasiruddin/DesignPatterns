/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.DirsitesRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Dirsites extends TableImpl<DirsitesRecord> {

    private static final long serialVersionUID = -2050342174;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.DirSites</code>
     */
    public static final Dirsites DIRSITES = new Dirsites();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DirsitesRecord> getRecordType() {
        return DirsitesRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.DirSites.Group_ID</code>.
     */
    public final TableField<DirsitesRecord, String> GROUP_ID = createField("Group_ID", org.jooq.impl.SQLDataType.CHAR(2).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.DirSites.Category_ID</code>.
     */
    public final TableField<DirsitesRecord, Integer> CATEGORY_ID = createField("Category_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.DirSites.Site_ID</code>.
     */
    public final TableField<DirsitesRecord, Integer> SITE_ID = createField("Site_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.DirSites.URL</code>.
     */
    public final TableField<DirsitesRecord, String> URL = createField("URL", org.jooq.impl.SQLDataType.VARCHAR(150), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.DirSites.WAP_URL</code>.
     */
    public final TableField<DirsitesRecord, String> WAP_URL = createField("WAP_URL", org.jooq.impl.SQLDataType.VARCHAR(150), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.DirSites.Title</code>.
     */
    public final TableField<DirsitesRecord, String> TITLE = createField("Title", org.jooq.impl.SQLDataType.VARCHAR(150), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.DirSites.Description</code>.
     */
    public final TableField<DirsitesRecord, String> DESCRIPTION = createField("Description", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.DirSites.Rating</code>.
     */
    public final TableField<DirsitesRecord, String> RATING = createField("Rating", org.jooq.impl.SQLDataType.CHAR(10), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.DirSites.Domain</code>.
     */
    public final TableField<DirsitesRecord, String> DOMAIN = createField("Domain", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.DirSites.Valid</code>.
     */
    public final TableField<DirsitesRecord, Boolean> VALID = createField("Valid", org.jooq.impl.SQLDataType.BIT.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.DirSites.KeyWords</code>.
     */
    public final TableField<DirsitesRecord, String> KEYWORDS = createField("KeyWords", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.DirSites.Recommended</code>.
     */
    public final TableField<DirsitesRecord, Boolean> RECOMMENDED = createField("Recommended", org.jooq.impl.SQLDataType.BIT.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.DirSites.Content_Framed</code>.
     */
    public final TableField<DirsitesRecord, Boolean> CONTENT_FRAMED = createField("Content_Framed", org.jooq.impl.SQLDataType.BIT.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.DirSites.Logo_Image</code>.
     */
    public final TableField<DirsitesRecord, String> LOGO_IMAGE = createField("Logo_Image", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.DirSites.Submit_Date</code>.
     */
    public final TableField<DirsitesRecord, Timestamp> SUBMIT_DATE = createField("Submit_Date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.DirSites.Contact</code>.
     */
    public final TableField<DirsitesRecord, String> CONTACT = createField("Contact", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.DirSites.Email</code>.
     */
    public final TableField<DirsitesRecord, String> EMAIL = createField("Email", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.DirSites</code> table reference
     */
    public Dirsites() {
        this(DSL.name("DirSites"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.DirSites</code> table reference
     */
    public Dirsites(String alias) {
        this(DSL.name(alias), DIRSITES);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.DirSites</code> table reference
     */
    public Dirsites(Name alias) {
        this(alias, DIRSITES);
    }

    private Dirsites(Name alias, Table<DirsitesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Dirsites(Name alias, Table<DirsitesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Dirsites(Table<O> child, ForeignKey<O, DirsitesRecord> key) {
        super(child, key, DIRSITES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.DIRSITES_PK_DIRSITES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<DirsitesRecord, Integer> getIdentity() {
        return Keys.IDENTITY_DIRSITES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DirsitesRecord> getPrimaryKey() {
        return Keys.PK_DIRSITES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DirsitesRecord>> getKeys() {
        return Arrays.<UniqueKey<DirsitesRecord>>asList(Keys.PK_DIRSITES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Dirsites as(String alias) {
        return new Dirsites(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Dirsites as(Name alias) {
        return new Dirsites(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Dirsites rename(String name) {
        return new Dirsites(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Dirsites rename(Name name) {
        return new Dirsites(name, null);
    }
}
