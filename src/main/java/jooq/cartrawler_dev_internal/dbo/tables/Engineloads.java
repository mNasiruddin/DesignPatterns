/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.EngineloadsRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UByte;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Engineloads extends TableImpl<EngineloadsRecord> {

    private static final long serialVersionUID = 566403137;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.engineLoads</code>
     */
    public static final Engineloads ENGINELOADS = new Engineloads();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EngineloadsRecord> getRecordType() {
        return EngineloadsRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.engineLoads.id</code>.
     */
    public final TableField<EngineloadsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.engineLoads.hitDate</code>.
     */
    public final TableField<EngineloadsRecord, Timestamp> HITDATE = createField("hitDate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("(getdate())", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.engineLoads.fk_engineLoadTitles</code>. fk into table of titles
     */
    public final TableField<EngineloadsRecord, Integer> FK_ENGINELOADTITLES = createField("fk_engineLoadTitles", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "fk into table of titles");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.engineLoads.client_id</code>.
     */
    public final TableField<EngineloadsRecord, Integer> CLIENT_ID = createField("client_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.engineLoads.parent_id</code>.
     */
    public final TableField<EngineloadsRecord, Integer> PARENT_ID = createField("parent_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.engineLoads.ip</code>.
     */
    public final TableField<EngineloadsRecord, Integer> IP = createField("ip", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.engineLoads.svn_version</code>.
     */
    public final TableField<EngineloadsRecord, Integer> SVN_VERSION = createField("svn_version", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.engineLoads.engine_name_id</code>.
     */
    public final TableField<EngineloadsRecord, Integer> ENGINE_NAME_ID = createField("engine_name_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.engineLoads.customer_id</code>.
     */
    public final TableField<EngineloadsRecord, Long> CUSTOMER_ID = createField("customer_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.engineLoads.source</code>.
     */
    public final TableField<EngineloadsRecord, UByte> SOURCE = createField("source", org.jooq.impl.SQLDataType.TINYINTUNSIGNED, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.engineLoads.sourceDomain</code>.
     */
    public final TableField<EngineloadsRecord, String> SOURCEDOMAIN = createField("sourceDomain", org.jooq.impl.SQLDataType.CHAR(8), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.engineLoads.fk_engineUserAgents</code>.
     */
    public final TableField<EngineloadsRecord, Integer> FK_ENGINEUSERAGENTS = createField("fk_engineUserAgents", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.engineLoads.engineLoadID</code>.
     */
    public final TableField<EngineloadsRecord, Long> ENGINELOADID = createField("engineLoadID", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.engineLoads.language</code>.
     */
    public final TableField<EngineloadsRecord, String> LANGUAGE = createField("language", org.jooq.impl.SQLDataType.CHAR(2), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.engineLoads.testToken</code>.
     */
    public final TableField<EngineloadsRecord, UByte> TESTTOKEN = createField("testToken", org.jooq.impl.SQLDataType.TINYINTUNSIGNED, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.engineLoads.fk_engineLoadURLs</code>.
     */
    public final TableField<EngineloadsRecord, Integer> FK_ENGINELOADURLS = createField("fk_engineLoadURLs", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.engineLoads.fk_clientTouchpoint</code>.
     */
    public final TableField<EngineloadsRecord, Short> FK_CLIENTTOUCHPOINT = createField("fk_clientTouchpoint", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.engineLoads</code> table reference
     */
    public Engineloads() {
        this(DSL.name("engineLoads"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.engineLoads</code> table reference
     */
    public Engineloads(String alias) {
        this(DSL.name(alias), ENGINELOADS);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.engineLoads</code> table reference
     */
    public Engineloads(Name alias) {
        this(alias, ENGINELOADS);
    }

    private Engineloads(Name alias, Table<EngineloadsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Engineloads(Name alias, Table<EngineloadsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Engineloads(Table<O> child, ForeignKey<O, EngineloadsRecord> key) {
        super(child, key, ENGINELOADS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ENGINELOADS_PK_ENGINELOADS2);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<EngineloadsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_ENGINELOADS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<EngineloadsRecord> getPrimaryKey() {
        return Keys.PK_ENGINELOADS2;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<EngineloadsRecord>> getKeys() {
        return Arrays.<UniqueKey<EngineloadsRecord>>asList(Keys.PK_ENGINELOADS2);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Engineloads as(String alias) {
        return new Engineloads(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Engineloads as(Name alias) {
        return new Engineloads(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Engineloads rename(String name) {
        return new Engineloads(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Engineloads rename(Name name) {
        return new Engineloads(name, null);
    }
}
