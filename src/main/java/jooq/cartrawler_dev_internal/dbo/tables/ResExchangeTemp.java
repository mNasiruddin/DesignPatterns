/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.math.BigDecimal;
import java.sql.Timestamp;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.ResExchangeTempRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ResExchangeTemp extends TableImpl<ResExchangeTempRecord> {

    private static final long serialVersionUID = 101150459;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.res_exchange_temp</code>
     */
    public static final ResExchangeTemp RES_EXCHANGE_TEMP = new ResExchangeTemp();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ResExchangeTempRecord> getRecordType() {
        return ResExchangeTempRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.res_exchange_temp.ref</code>.
     */
    public final TableField<ResExchangeTempRecord, Integer> REF = createField("ref", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.res_exchange_temp.rate_display_exchange</code>.
     */
    public final TableField<ResExchangeTempRecord, BigDecimal> RATE_DISPLAY_EXCHANGE = createField("rate_display_exchange", org.jooq.impl.SQLDataType.NUMERIC(10, 6), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.res_exchange_temp.rate_charge_exchange</code>.
     */
    public final TableField<ResExchangeTempRecord, BigDecimal> RATE_CHARGE_EXCHANGE = createField("rate_charge_exchange", org.jooq.impl.SQLDataType.NUMERIC(10, 6), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.res_exchange_temp.res_date</code>.
     */
    public final TableField<ResExchangeTempRecord, Timestamp> RES_DATE = createField("res_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.res_exchange_temp</code> table reference
     */
    public ResExchangeTemp() {
        this(DSL.name("res_exchange_temp"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.res_exchange_temp</code> table reference
     */
    public ResExchangeTemp(String alias) {
        this(DSL.name(alias), RES_EXCHANGE_TEMP);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.res_exchange_temp</code> table reference
     */
    public ResExchangeTemp(Name alias) {
        this(alias, RES_EXCHANGE_TEMP);
    }

    private ResExchangeTemp(Name alias, Table<ResExchangeTempRecord> aliased) {
        this(alias, aliased, null);
    }

    private ResExchangeTemp(Name alias, Table<ResExchangeTempRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> ResExchangeTemp(Table<O> child, ForeignKey<O, ResExchangeTempRecord> key) {
        super(child, key, RES_EXCHANGE_TEMP);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ResExchangeTempRecord, Integer> getIdentity() {
        return Keys.IDENTITY_RES_EXCHANGE_TEMP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResExchangeTemp as(String alias) {
        return new ResExchangeTemp(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResExchangeTemp as(Name alias) {
        return new ResExchangeTemp(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ResExchangeTemp rename(String name) {
        return new ResExchangeTemp(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ResExchangeTemp rename(Name name) {
        return new ResExchangeTemp(name, null);
    }
}
