/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.CountryTermsRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CountryTerms extends TableImpl<CountryTermsRecord> {

    private static final long serialVersionUID = -446930096;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.Country_Terms</code>
     */
    public static final CountryTerms COUNTRY_TERMS = new CountryTerms();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CountryTermsRecord> getRecordType() {
        return CountryTermsRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Country_Terms.Country_ID</code>.
     */
    public final TableField<CountryTermsRecord, String> COUNTRY_ID = createField("Country_ID", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Country_Terms.Group_ID</code>.
     */
    public final TableField<CountryTermsRecord, String> GROUP_ID = createField("Group_ID", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Country_Terms.Details</code>.
     */
    public final TableField<CountryTermsRecord, String> DETAILS = createField("Details", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Country_Terms.Status</code>.
     */
    public final TableField<CountryTermsRecord, Boolean> STATUS = createField("Status", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Country_Terms.Location_ID</code>.
     */
    public final TableField<CountryTermsRecord, Integer> LOCATION_ID = createField("Location_ID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Country_Terms.TC_Master_ID</code>.
     */
    public final TableField<CountryTermsRecord, Integer> TC_MASTER_ID = createField("TC_Master_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Country_Terms.OrderBy</code>.
     */
    public final TableField<CountryTermsRecord, Integer> ORDERBY = createField("OrderBy", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Country_Terms.Domestic</code>.
     */
    public final TableField<CountryTermsRecord, Boolean> DOMESTIC = createField("Domestic", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.Country_Terms</code> table reference
     */
    public CountryTerms() {
        this(DSL.name("Country_Terms"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.Country_Terms</code> table reference
     */
    public CountryTerms(String alias) {
        this(DSL.name(alias), COUNTRY_TERMS);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.Country_Terms</code> table reference
     */
    public CountryTerms(Name alias) {
        this(alias, COUNTRY_TERMS);
    }

    private CountryTerms(Name alias, Table<CountryTermsRecord> aliased) {
        this(alias, aliased, null);
    }

    private CountryTerms(Name alias, Table<CountryTermsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> CountryTerms(Table<O> child, ForeignKey<O, CountryTermsRecord> key) {
        super(child, key, COUNTRY_TERMS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.COUNTRY_TERMS_PK_COUNTRY_TERMS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CountryTermsRecord> getPrimaryKey() {
        return Keys.PK_COUNTRY_TERMS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CountryTermsRecord>> getKeys() {
        return Arrays.<UniqueKey<CountryTermsRecord>>asList(Keys.PK_COUNTRY_TERMS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CountryTerms as(String alias) {
        return new CountryTerms(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CountryTerms as(Name alias) {
        return new CountryTerms(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CountryTerms rename(String name) {
        return new CountryTerms(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CountryTerms rename(Name name) {
        return new CountryTerms(name, null);
    }
}
