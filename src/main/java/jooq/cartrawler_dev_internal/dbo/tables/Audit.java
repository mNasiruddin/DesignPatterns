/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.AuditRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Audit extends TableImpl<AuditRecord> {

    private static final long serialVersionUID = -1984082225;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.Audit</code>
     */
    public static final Audit AUDIT = new Audit();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AuditRecord> getRecordType() {
        return AuditRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Audit.guid</code>.
     */
    public final TableField<AuditRecord, UUID> GUID = createField("guid", org.jooq.impl.SQLDataType.UUID.nullable(false).defaultValue(org.jooq.impl.DSL.field("(newid())", org.jooq.impl.SQLDataType.UUID)), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Audit.Type</code>.
     */
    public final TableField<AuditRecord, String> TYPE = createField("Type", org.jooq.impl.SQLDataType.CHAR(1), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Audit.TableName</code>.
     */
    public final TableField<AuditRecord, String> TABLENAME = createField("TableName", org.jooq.impl.SQLDataType.VARCHAR(128), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Audit.PK</code>.
     */
    public final TableField<AuditRecord, String> PK = createField("PK", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Audit.FieldName</code>.
     */
    public final TableField<AuditRecord, String> FIELDNAME = createField("FieldName", org.jooq.impl.SQLDataType.VARCHAR(128), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Audit.OldValue</code>.
     */
    public final TableField<AuditRecord, String> OLDVALUE = createField("OldValue", org.jooq.impl.SQLDataType.VARCHAR(1000), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Audit.NewValue</code>.
     */
    public final TableField<AuditRecord, String> NEWVALUE = createField("NewValue", org.jooq.impl.SQLDataType.VARCHAR(1000), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Audit.UpdateDate</code>.
     */
    public final TableField<AuditRecord, Timestamp> UPDATEDATE = createField("UpdateDate", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("(getdate())", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Audit.fk_user</code>.
     */
    public final TableField<AuditRecord, Integer> FK_USER = createField("fk_user", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("((0))", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.Audit</code> table reference
     */
    public Audit() {
        this(DSL.name("Audit"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.Audit</code> table reference
     */
    public Audit(String alias) {
        this(DSL.name(alias), AUDIT);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.Audit</code> table reference
     */
    public Audit(Name alias) {
        this(alias, AUDIT);
    }

    private Audit(Name alias, Table<AuditRecord> aliased) {
        this(alias, aliased, null);
    }

    private Audit(Name alias, Table<AuditRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Audit(Table<O> child, ForeignKey<O, AuditRecord> key) {
        super(child, key, AUDIT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.AUDIT_PK_AUDIT2_3);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AuditRecord> getPrimaryKey() {
        return Keys.PK_AUDIT2_3;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AuditRecord>> getKeys() {
        return Arrays.<UniqueKey<AuditRecord>>asList(Keys.PK_AUDIT2_3);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Audit as(String alias) {
        return new Audit(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Audit as(Name alias) {
        return new Audit(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Audit rename(String name) {
        return new Audit(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Audit rename(Name name) {
        return new Audit(name, null);
    }
}
