/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.CtChannelsRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CtChannels extends TableImpl<CtChannelsRecord> {

    private static final long serialVersionUID = 1437114936;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.CT_Channels</code>
     */
    public static final CtChannels CT_CHANNELS = new CtChannels();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CtChannelsRecord> getRecordType() {
        return CtChannelsRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.CT_Channels.pkid</code>.
     */
    public final TableField<CtChannelsRecord, Long> PKID = createField("pkid", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.CT_Channels.SYS_CHANGE_VERSION</code>.
     */
    public final TableField<CtChannelsRecord, Long> SYS_CHANGE_VERSION = createField("SYS_CHANGE_VERSION", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.CT_Channels.SYS_CHANGE_CREATION_VERSION</code>.
     */
    public final TableField<CtChannelsRecord, Long> SYS_CHANGE_CREATION_VERSION = createField("SYS_CHANGE_CREATION_VERSION", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.CT_Channels.SYS_CHANGE_OPERATION</code>.
     */
    public final TableField<CtChannelsRecord, String> SYS_CHANGE_OPERATION = createField("SYS_CHANGE_OPERATION", org.jooq.impl.SQLDataType.NCHAR(1), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.CT_Channels.SYS_CHANGE_COLUMNS</code>.
     */
    public final TableField<CtChannelsRecord, byte[]> SYS_CHANGE_COLUMNS = createField("SYS_CHANGE_COLUMNS", org.jooq.impl.SQLDataType.VARBINARY(4100), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.CT_Channels.SYS_CHANGE_CONTEXT</code>.
     */
    public final TableField<CtChannelsRecord, byte[]> SYS_CHANGE_CONTEXT = createField("SYS_CHANGE_CONTEXT", org.jooq.impl.SQLDataType.VARBINARY(128), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.CT_Channels.id</code>.
     */
    public final TableField<CtChannelsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.CT_Channels</code> table reference
     */
    public CtChannels() {
        this(DSL.name("CT_Channels"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.CT_Channels</code> table reference
     */
    public CtChannels(String alias) {
        this(DSL.name(alias), CT_CHANNELS);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.CT_Channels</code> table reference
     */
    public CtChannels(Name alias) {
        this(alias, CT_CHANNELS);
    }

    private CtChannels(Name alias, Table<CtChannelsRecord> aliased) {
        this(alias, aliased, null);
    }

    private CtChannels(Name alias, Table<CtChannelsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> CtChannels(Table<O> child, ForeignKey<O, CtChannelsRecord> key) {
        super(child, key, CT_CHANNELS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CT_CHANNELS_PK_CT_CHANNELS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CtChannelsRecord, Long> getIdentity() {
        return Keys.IDENTITY_CT_CHANNELS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CtChannelsRecord> getPrimaryKey() {
        return Keys.PK_CT_CHANNELS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CtChannelsRecord>> getKeys() {
        return Arrays.<UniqueKey<CtChannelsRecord>>asList(Keys.PK_CT_CHANNELS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CtChannels as(String alias) {
        return new CtChannels(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CtChannels as(Name alias) {
        return new CtChannels(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CtChannels rename(String name) {
        return new CtChannels(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CtChannels rename(Name name) {
        return new CtChannels(name, null);
    }
}
