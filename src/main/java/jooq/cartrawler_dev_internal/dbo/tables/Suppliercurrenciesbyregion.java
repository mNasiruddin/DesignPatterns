/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.SuppliercurrenciesbyregionRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Suppliercurrenciesbyregion extends TableImpl<SuppliercurrenciesbyregionRecord> {

    private static final long serialVersionUID = 2067091091;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.SupplierCurrenciesByRegion</code>
     */
    public static final Suppliercurrenciesbyregion SUPPLIERCURRENCIESBYREGION = new Suppliercurrenciesbyregion();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SuppliercurrenciesbyregionRecord> getRecordType() {
        return SuppliercurrenciesbyregionRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.SupplierCurrenciesByRegion.ID</code>.
     */
    public final TableField<SuppliercurrenciesbyregionRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.SupplierCurrenciesByRegion.Supplier_Region_ID</code>.
     */
    public final TableField<SuppliercurrenciesbyregionRecord, Integer> SUPPLIER_REGION_ID = createField("Supplier_Region_ID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.SupplierCurrenciesByRegion.Residency</code>.
     */
    public final TableField<SuppliercurrenciesbyregionRecord, String> RESIDENCY = createField("Residency", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.SupplierCurrenciesByRegion.Destination</code>.
     */
    public final TableField<SuppliercurrenciesbyregionRecord, String> DESTINATION = createField("Destination", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.SupplierCurrenciesByRegion.Currency</code>.
     */
    public final TableField<SuppliercurrenciesbyregionRecord, String> CURRENCY = createField("Currency", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.SupplierCurrenciesByRegion</code> table reference
     */
    public Suppliercurrenciesbyregion() {
        this(DSL.name("SupplierCurrenciesByRegion"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.SupplierCurrenciesByRegion</code> table reference
     */
    public Suppliercurrenciesbyregion(String alias) {
        this(DSL.name(alias), SUPPLIERCURRENCIESBYREGION);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.SupplierCurrenciesByRegion</code> table reference
     */
    public Suppliercurrenciesbyregion(Name alias) {
        this(alias, SUPPLIERCURRENCIESBYREGION);
    }

    private Suppliercurrenciesbyregion(Name alias, Table<SuppliercurrenciesbyregionRecord> aliased) {
        this(alias, aliased, null);
    }

    private Suppliercurrenciesbyregion(Name alias, Table<SuppliercurrenciesbyregionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Suppliercurrenciesbyregion(Table<O> child, ForeignKey<O, SuppliercurrenciesbyregionRecord> key) {
        super(child, key, SUPPLIERCURRENCIESBYREGION);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SUPPLIERCURRENCIESBYREGION_PK__SUPPLIER__3214EC271242B056);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<SuppliercurrenciesbyregionRecord, Integer> getIdentity() {
        return Keys.IDENTITY_SUPPLIERCURRENCIESBYREGION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SuppliercurrenciesbyregionRecord> getPrimaryKey() {
        return Keys.PK__SUPPLIER__3214EC271242B056;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SuppliercurrenciesbyregionRecord>> getKeys() {
        return Arrays.<UniqueKey<SuppliercurrenciesbyregionRecord>>asList(Keys.PK__SUPPLIER__3214EC271242B056);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<SuppliercurrenciesbyregionRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<SuppliercurrenciesbyregionRecord, ?>>asList(Keys.FK__SUPPLIERC__SUPPL__142AF8C8);
    }

    public Supplierregion supplierregion() {
        return new Supplierregion(this, Keys.FK__SUPPLIERC__SUPPL__142AF8C8);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Suppliercurrenciesbyregion as(String alias) {
        return new Suppliercurrenciesbyregion(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Suppliercurrenciesbyregion as(Name alias) {
        return new Suppliercurrenciesbyregion(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Suppliercurrenciesbyregion rename(String name) {
        return new Suppliercurrenciesbyregion(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Suppliercurrenciesbyregion rename(Name name) {
        return new Suppliercurrenciesbyregion(name, null);
    }
}
