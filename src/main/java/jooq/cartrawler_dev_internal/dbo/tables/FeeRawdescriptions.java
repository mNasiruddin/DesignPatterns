/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.FeeRawdescriptionsRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FeeRawdescriptions extends TableImpl<FeeRawdescriptionsRecord> {

    private static final long serialVersionUID = 676779827;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.fee_rawdescriptions</code>
     */
    public static final FeeRawdescriptions FEE_RAWDESCRIPTIONS = new FeeRawdescriptions();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FeeRawdescriptionsRecord> getRecordType() {
        return FeeRawdescriptionsRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.fee_rawdescriptions.id</code>.
     */
    public final TableField<FeeRawdescriptionsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.fee_rawdescriptions.description</code>.
     */
    public final TableField<FeeRawdescriptionsRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.NVARCHAR(256).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.fee_rawdescriptions.encoding</code>.
     */
    public final TableField<FeeRawdescriptionsRecord, Short> ENCODING = createField("encoding", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.fee_rawdescriptions</code> table reference
     */
    public FeeRawdescriptions() {
        this(DSL.name("fee_rawdescriptions"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.fee_rawdescriptions</code> table reference
     */
    public FeeRawdescriptions(String alias) {
        this(DSL.name(alias), FEE_RAWDESCRIPTIONS);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.fee_rawdescriptions</code> table reference
     */
    public FeeRawdescriptions(Name alias) {
        this(alias, FEE_RAWDESCRIPTIONS);
    }

    private FeeRawdescriptions(Name alias, Table<FeeRawdescriptionsRecord> aliased) {
        this(alias, aliased, null);
    }

    private FeeRawdescriptions(Name alias, Table<FeeRawdescriptionsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> FeeRawdescriptions(Table<O> child, ForeignKey<O, FeeRawdescriptionsRecord> key) {
        super(child, key, FEE_RAWDESCRIPTIONS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.FEE_RAWDESCRIPTIONS_IX_FEE_RAWDESCRIPTIONS, Indexes.FEE_RAWDESCRIPTIONS_PK_FEE_RAWDESCRIPTIONS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<FeeRawdescriptionsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_FEE_RAWDESCRIPTIONS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<FeeRawdescriptionsRecord>> getKeys() {
        return Arrays.<UniqueKey<FeeRawdescriptionsRecord>>asList(Keys.PK_FEE_RAWDESCRIPTIONS, Keys.IX_FEE_RAWDESCRIPTIONS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FeeRawdescriptions as(String alias) {
        return new FeeRawdescriptions(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FeeRawdescriptions as(Name alias) {
        return new FeeRawdescriptions(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public FeeRawdescriptions rename(String name) {
        return new FeeRawdescriptions(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public FeeRawdescriptions rename(Name name) {
        return new FeeRawdescriptions(name, null);
    }
}
