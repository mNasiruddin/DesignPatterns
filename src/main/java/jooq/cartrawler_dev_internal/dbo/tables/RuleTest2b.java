/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.sql.Timestamp;
import java.util.UUID;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.tables.records.RuleTest2bRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RuleTest2b extends TableImpl<RuleTest2bRecord> {

    private static final long serialVersionUID = 1313412716;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.rule_test2b</code>
     */
    public static final RuleTest2b RULE_TEST2B = new RuleTest2b();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RuleTest2bRecord> getRecordType() {
        return RuleTest2bRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.rule_test2b.guid</code>.
     */
    public final TableField<RuleTest2bRecord, UUID> GUID = createField("guid", org.jooq.impl.SQLDataType.UUID.nullable(false).defaultValue(org.jooq.impl.DSL.field("(newid())", org.jooq.impl.SQLDataType.UUID)), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.rule_test2b.rule_id</code>.
     */
    public final TableField<RuleTest2bRecord, Integer> RULE_ID = createField("rule_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.rule_test2b.parent_rule_id</code>.
     */
    public final TableField<RuleTest2bRecord, Integer> PARENT_RULE_ID = createField("parent_rule_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.rule_test2b.type</code>.
     */
    public final TableField<RuleTest2bRecord, String> TYPE = createField("type", org.jooq.impl.SQLDataType.VARCHAR(32), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.rule_test2b.rule_values</code>.
     */
    public final TableField<RuleTest2bRecord, String> RULE_VALUES = createField("rule_values", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.rule_test2b.rule_charge_id</code>.
     */
    public final TableField<RuleTest2bRecord, Integer> RULE_CHARGE_ID = createField("rule_charge_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.rule_test2b.rule_message_id</code>.
     */
    public final TableField<RuleTest2bRecord, Integer> RULE_MESSAGE_ID = createField("rule_message_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.rule_test2b.user_id</code>.
     */
    public final TableField<RuleTest2bRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.rule_test2b.amenddate</code>.
     */
    public final TableField<RuleTest2bRecord, Timestamp> AMENDDATE = createField("amenddate", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.rule_test2b</code> table reference
     */
    public RuleTest2b() {
        this(DSL.name("rule_test2b"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.rule_test2b</code> table reference
     */
    public RuleTest2b(String alias) {
        this(DSL.name(alias), RULE_TEST2B);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.rule_test2b</code> table reference
     */
    public RuleTest2b(Name alias) {
        this(alias, RULE_TEST2B);
    }

    private RuleTest2b(Name alias, Table<RuleTest2bRecord> aliased) {
        this(alias, aliased, null);
    }

    private RuleTest2b(Name alias, Table<RuleTest2bRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> RuleTest2b(Table<O> child, ForeignKey<O, RuleTest2bRecord> key) {
        super(child, key, RULE_TEST2B);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RuleTest2b as(String alias) {
        return new RuleTest2b(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RuleTest2b as(Name alias) {
        return new RuleTest2b(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RuleTest2b rename(String name) {
        return new RuleTest2b(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public RuleTest2b rename(Name name) {
        return new RuleTest2b(name, null);
    }
}
