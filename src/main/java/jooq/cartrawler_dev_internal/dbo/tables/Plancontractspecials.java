/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.PlancontractspecialsRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Plancontractspecials extends TableImpl<PlancontractspecialsRecord> {

    private static final long serialVersionUID = 728465497;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.PlanContractSpecials</code>
     */
    public static final Plancontractspecials PLANCONTRACTSPECIALS = new Plancontractspecials();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PlancontractspecialsRecord> getRecordType() {
        return PlancontractspecialsRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.PlanContractSpecials.guid</code>.
     */
    public final TableField<PlancontractspecialsRecord, UUID> GUID = createField("guid", org.jooq.impl.SQLDataType.UUID.nullable(false).defaultValue(org.jooq.impl.DSL.field("(newid())", org.jooq.impl.SQLDataType.UUID)), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.PlanContractSpecials.id</code>.
     */
    public final TableField<PlancontractspecialsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.PlanContractSpecials.fk_contract</code>.
     */
    public final TableField<PlancontractspecialsRecord, Integer> FK_CONTRACT = createField("fk_contract", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.PlanContractSpecials.fk_offer</code>.
     */
    public final TableField<PlancontractspecialsRecord, Integer> FK_OFFER = createField("fk_offer", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.PlanContractSpecials.fk_client</code>.
     */
    public final TableField<PlancontractspecialsRecord, Integer> FK_CLIENT = createField("fk_client", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.PlanContractSpecials.fk_promodetail</code>.
     */
    public final TableField<PlancontractspecialsRecord, Integer> FK_PROMODETAIL = createField("fk_promodetail", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.PlanContractSpecials.fk_parent</code>.
     */
    public final TableField<PlancontractspecialsRecord, Integer> FK_PARENT = createField("fk_parent", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.PlanContractSpecials.fk_plan</code>.
     */
    public final TableField<PlancontractspecialsRecord, Integer> FK_PLAN = createField("fk_plan", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.PlanContractSpecials.fk_channel</code>.
     */
    public final TableField<PlancontractspecialsRecord, Integer> FK_CHANNEL = createField("fk_channel", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.PlanContractSpecials</code> table reference
     */
    public Plancontractspecials() {
        this(DSL.name("PlanContractSpecials"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.PlanContractSpecials</code> table reference
     */
    public Plancontractspecials(String alias) {
        this(DSL.name(alias), PLANCONTRACTSPECIALS);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.PlanContractSpecials</code> table reference
     */
    public Plancontractspecials(Name alias) {
        this(alias, PLANCONTRACTSPECIALS);
    }

    private Plancontractspecials(Name alias, Table<PlancontractspecialsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Plancontractspecials(Name alias, Table<PlancontractspecialsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Plancontractspecials(Table<O> child, ForeignKey<O, PlancontractspecialsRecord> key) {
        super(child, key, PLANCONTRACTSPECIALS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PLANCONTRACTSPECIALS_PK_PLANCONTRACTSPECIALS, Indexes.PLANCONTRACTSPECIALS_PK_PLANCONTRACTSPECIALS_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<PlancontractspecialsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_PLANCONTRACTSPECIALS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PlancontractspecialsRecord> getPrimaryKey() {
        return Keys.PK_PLANCONTRACTSPECIALS_1;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PlancontractspecialsRecord>> getKeys() {
        return Arrays.<UniqueKey<PlancontractspecialsRecord>>asList(Keys.PK_PLANCONTRACTSPECIALS_1, Keys.PK_PLANCONTRACTSPECIALS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Plancontractspecials as(String alias) {
        return new Plancontractspecials(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Plancontractspecials as(Name alias) {
        return new Plancontractspecials(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Plancontractspecials rename(String name) {
        return new Plancontractspecials(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Plancontractspecials rename(Name name) {
        return new Plancontractspecials(name, null);
    }
}
