/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.ResidenceRegionRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UByte;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ResidenceRegion extends TableImpl<ResidenceRegionRecord> {

    private static final long serialVersionUID = -432808496;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.residence_region</code>
     */
    public static final ResidenceRegion RESIDENCE_REGION = new ResidenceRegion();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ResidenceRegionRecord> getRecordType() {
        return ResidenceRegionRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.residence_region.guid</code>.
     */
    public final TableField<ResidenceRegionRecord, UUID> GUID = createField("guid", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.residence_region.residence_region_id</code>.
     */
    public final TableField<ResidenceRegionRecord, UByte> RESIDENCE_REGION_ID = createField("residence_region_id", org.jooq.impl.SQLDataType.TINYINTUNSIGNED, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.residence_region.residence_region_name</code>.
     */
    public final TableField<ResidenceRegionRecord, String> RESIDENCE_REGION_NAME = createField("residence_region_name", org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.residence_region</code> table reference
     */
    public ResidenceRegion() {
        this(DSL.name("residence_region"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.residence_region</code> table reference
     */
    public ResidenceRegion(String alias) {
        this(DSL.name(alias), RESIDENCE_REGION);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.residence_region</code> table reference
     */
    public ResidenceRegion(Name alias) {
        this(alias, RESIDENCE_REGION);
    }

    private ResidenceRegion(Name alias, Table<ResidenceRegionRecord> aliased) {
        this(alias, aliased, null);
    }

    private ResidenceRegion(Name alias, Table<ResidenceRegionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> ResidenceRegion(Table<O> child, ForeignKey<O, ResidenceRegionRecord> key) {
        super(child, key, RESIDENCE_REGION);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.RESIDENCE_REGION_PK_RESIDENCE_REGION);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ResidenceRegionRecord> getPrimaryKey() {
        return Keys.PK_RESIDENCE_REGION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ResidenceRegionRecord>> getKeys() {
        return Arrays.<UniqueKey<ResidenceRegionRecord>>asList(Keys.PK_RESIDENCE_REGION);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResidenceRegion as(String alias) {
        return new ResidenceRegion(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResidenceRegion as(Name alias) {
        return new ResidenceRegion(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ResidenceRegion rename(String name) {
        return new ResidenceRegion(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ResidenceRegion rename(Name name) {
        return new ResidenceRegion(name, null);
    }
}
