/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.BinTableRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BinTable extends TableImpl<BinTableRecord> {

    private static final long serialVersionUID = -579928838;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.bin_table</code>
     */
    public static final BinTable BIN_TABLE = new BinTable();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BinTableRecord> getRecordType() {
        return BinTableRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.bin_table.id</code>.
     */
    public final TableField<BinTableRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.bin_table.first_six</code>.
     */
    public final TableField<BinTableRecord, Integer> FIRST_SIX = createField("first_six", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.bin_table.issue_country</code>.
     */
    public final TableField<BinTableRecord, String> ISSUE_COUNTRY = createField("issue_country", org.jooq.impl.SQLDataType.VARCHAR(3).nullable(false), this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.bin_table</code> table reference
     */
    public BinTable() {
        this(DSL.name("bin_table"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.bin_table</code> table reference
     */
    public BinTable(String alias) {
        this(DSL.name(alias), BIN_TABLE);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.bin_table</code> table reference
     */
    public BinTable(Name alias) {
        this(alias, BIN_TABLE);
    }

    private BinTable(Name alias, Table<BinTableRecord> aliased) {
        this(alias, aliased, null);
    }

    private BinTable(Name alias, Table<BinTableRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> BinTable(Table<O> child, ForeignKey<O, BinTableRecord> key) {
        super(child, key, BIN_TABLE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.BIN_TABLE_PK__BIN_TABL__3213E83F2185BF3D);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<BinTableRecord, Integer> getIdentity() {
        return Keys.IDENTITY_BIN_TABLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<BinTableRecord> getPrimaryKey() {
        return Keys.PK__BIN_TABL__3213E83F2185BF3D;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<BinTableRecord>> getKeys() {
        return Arrays.<UniqueKey<BinTableRecord>>asList(Keys.PK__BIN_TABL__3213E83F2185BF3D);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BinTable as(String alias) {
        return new BinTable(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BinTable as(Name alias) {
        return new BinTable(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public BinTable rename(String name) {
        return new BinTable(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public BinTable rename(Name name) {
        return new BinTable(name, null);
    }
}
