/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.ArticlesRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Articles extends TableImpl<ArticlesRecord> {

    private static final long serialVersionUID = -483325071;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.Articles</code>
     */
    public static final Articles ARTICLES = new Articles();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ArticlesRecord> getRecordType() {
        return ArticlesRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Articles.ArticleID</code>.
     */
    public final TableField<ArticlesRecord, Integer> ARTICLEID = createField("ArticleID", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Articles.Country_ID</code>.
     */
    public final TableField<ArticlesRecord, String> COUNTRY_ID = createField("Country_ID", org.jooq.impl.SQLDataType.VARCHAR(2).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Articles.Location_ID</code>.
     */
    public final TableField<ArticlesRecord, Integer> LOCATION_ID = createField("Location_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Articles.ArticleTitle</code>.
     */
    public final TableField<ArticlesRecord, String> ARTICLETITLE = createField("ArticleTitle", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Articles.ArticleSubTitle</code>.
     */
    public final TableField<ArticlesRecord, String> ARTICLESUBTITLE = createField("ArticleSubTitle", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Articles.ArticleImage</code>.
     */
    public final TableField<ArticlesRecord, String> ARTICLEIMAGE = createField("ArticleImage", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Articles.ArticleText</code>.
     */
    public final TableField<ArticlesRecord, String> ARTICLETEXT = createField("ArticleText", org.jooq.impl.SQLDataType.VARCHAR(8000), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Articles.ArticleActive</code>.
     */
    public final TableField<ArticlesRecord, Boolean> ARTICLEACTIVE = createField("ArticleActive", org.jooq.impl.SQLDataType.BIT.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Articles.ArticleStartDate</code>.
     */
    public final TableField<ArticlesRecord, Timestamp> ARTICLESTARTDATE = createField("ArticleStartDate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Articles.ArticleStopDate</code>.
     */
    public final TableField<ArticlesRecord, Timestamp> ARTICLESTOPDATE = createField("ArticleStopDate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Articles.ArticleRating</code>.
     */
    public final TableField<ArticlesRecord, Short> ARTICLERATING = createField("ArticleRating", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Articles.ArticleShowOnAllCountryLocations</code>.
     */
    public final TableField<ArticlesRecord, Boolean> ARTICLESHOWONALLCOUNTRYLOCATIONS = createField("ArticleShowOnAllCountryLocations", org.jooq.impl.SQLDataType.BIT.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Articles.ArticleSitewideOverride</code>.
     */
    public final TableField<ArticlesRecord, Boolean> ARTICLESITEWIDEOVERRIDE = createField("ArticleSitewideOverride", org.jooq.impl.SQLDataType.BIT.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Articles.ArticleDeleteAfterStopDate</code>.
     */
    public final TableField<ArticlesRecord, Boolean> ARTICLEDELETEAFTERSTOPDATE = createField("ArticleDeleteAfterStopDate", org.jooq.impl.SQLDataType.BIT.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Articles.ArticleIsFestival</code>.
     */
    public final TableField<ArticlesRecord, Boolean> ARTICLEISFESTIVAL = createField("ArticleIsFestival", org.jooq.impl.SQLDataType.BIT.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Articles.ArticlePrintCounter</code>.
     */
    public final TableField<ArticlesRecord, Integer> ARTICLEPRINTCOUNTER = createField("ArticlePrintCounter", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.Articles</code> table reference
     */
    public Articles() {
        this(DSL.name("Articles"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.Articles</code> table reference
     */
    public Articles(String alias) {
        this(DSL.name(alias), ARTICLES);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.Articles</code> table reference
     */
    public Articles(Name alias) {
        this(alias, ARTICLES);
    }

    private Articles(Name alias, Table<ArticlesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Articles(Name alias, Table<ArticlesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Articles(Table<O> child, ForeignKey<O, ArticlesRecord> key) {
        super(child, key, ARTICLES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ARTICLES_PK_ARTICLES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ArticlesRecord, Integer> getIdentity() {
        return Keys.IDENTITY_ARTICLES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ArticlesRecord> getPrimaryKey() {
        return Keys.PK_ARTICLES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ArticlesRecord>> getKeys() {
        return Arrays.<UniqueKey<ArticlesRecord>>asList(Keys.PK_ARTICLES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Articles as(String alias) {
        return new Articles(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Articles as(Name alias) {
        return new Articles(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Articles rename(String name) {
        return new Articles(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Articles rename(Name name) {
        return new Articles(name, null);
    }
}
