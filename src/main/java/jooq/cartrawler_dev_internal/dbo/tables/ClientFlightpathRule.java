/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.ClientFlightpathRuleRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ClientFlightpathRule extends TableImpl<ClientFlightpathRuleRecord> {

    private static final long serialVersionUID = -72685512;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.client_flightpath_rule</code>
     */
    public static final ClientFlightpathRule CLIENT_FLIGHTPATH_RULE = new ClientFlightpathRule();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ClientFlightpathRuleRecord> getRecordType() {
        return ClientFlightpathRuleRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.client_flightpath_rule.id</code>.
     */
    public final TableField<ClientFlightpathRuleRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.client_flightpath_rule.fK_client</code>.
     */
    public final TableField<ClientFlightpathRuleRecord, Integer> FK_CLIENT = createField("fK_client", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.client_flightpath_rule.fk_rule</code>.
     */
    public final TableField<ClientFlightpathRuleRecord, Integer> FK_RULE = createField("fk_rule", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.client_flightpath_rule.fk_virtual_location</code>.
     */
    public final TableField<ClientFlightpathRuleRecord, String> FK_VIRTUAL_LOCATION = createField("fk_virtual_location", org.jooq.impl.SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.client_flightpath_rule.country_code</code>.
     */
    public final TableField<ClientFlightpathRuleRecord, String> COUNTRY_CODE = createField("country_code", org.jooq.impl.SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.client_flightpath_rule.residency_code</code>.
     */
    public final TableField<ClientFlightpathRuleRecord, String> RESIDENCY_CODE = createField("residency_code", org.jooq.impl.SQLDataType.VARCHAR(10), this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.client_flightpath_rule</code> table reference
     */
    public ClientFlightpathRule() {
        this(DSL.name("client_flightpath_rule"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.client_flightpath_rule</code> table reference
     */
    public ClientFlightpathRule(String alias) {
        this(DSL.name(alias), CLIENT_FLIGHTPATH_RULE);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.client_flightpath_rule</code> table reference
     */
    public ClientFlightpathRule(Name alias) {
        this(alias, CLIENT_FLIGHTPATH_RULE);
    }

    private ClientFlightpathRule(Name alias, Table<ClientFlightpathRuleRecord> aliased) {
        this(alias, aliased, null);
    }

    private ClientFlightpathRule(Name alias, Table<ClientFlightpathRuleRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> ClientFlightpathRule(Table<O> child, ForeignKey<O, ClientFlightpathRuleRecord> key) {
        super(child, key, CLIENT_FLIGHTPATH_RULE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CLIENT_FLIGHTPATH_RULE_CLIENT_FLIGHTPATH_RULE_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ClientFlightpathRuleRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CLIENT_FLIGHTPATH_RULE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ClientFlightpathRuleRecord> getPrimaryKey() {
        return Keys.CLIENT_FLIGHTPATH_RULE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ClientFlightpathRuleRecord>> getKeys() {
        return Arrays.<UniqueKey<ClientFlightpathRuleRecord>>asList(Keys.CLIENT_FLIGHTPATH_RULE_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClientFlightpathRule as(String alias) {
        return new ClientFlightpathRule(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClientFlightpathRule as(Name alias) {
        return new ClientFlightpathRule(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ClientFlightpathRule rename(String name) {
        return new ClientFlightpathRule(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ClientFlightpathRule rename(Name name) {
        return new ClientFlightpathRule(name, null);
    }
}
