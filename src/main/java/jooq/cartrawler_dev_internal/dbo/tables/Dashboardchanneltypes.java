/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.DashboardchanneltypesRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UByte;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Dashboardchanneltypes extends TableImpl<DashboardchanneltypesRecord> {

    private static final long serialVersionUID = -101426307;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.dashboardChannelTypes</code>
     */
    public static final Dashboardchanneltypes DASHBOARDCHANNELTYPES = new Dashboardchanneltypes();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DashboardchanneltypesRecord> getRecordType() {
        return DashboardchanneltypesRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.dashboardChannelTypes.id</code>.
     */
    public final TableField<DashboardchanneltypesRecord, UByte> ID = createField("id", org.jooq.impl.SQLDataType.TINYINTUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.dashboardChannelTypes.name</code>.
     */
    public final TableField<DashboardchanneltypesRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.dashboardChannelTypes.fk_org</code>.
     */
    public final TableField<DashboardchanneltypesRecord, Integer> FK_ORG = createField("fk_org", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.dashboardChannelTypes.index</code>.
     */
    public final TableField<DashboardchanneltypesRecord, UByte> INDEX = createField("index", org.jooq.impl.SQLDataType.TINYINTUNSIGNED.defaultValue(org.jooq.impl.DSL.field("((0))", org.jooq.impl.SQLDataType.TINYINTUNSIGNED)), this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.dashboardChannelTypes</code> table reference
     */
    public Dashboardchanneltypes() {
        this(DSL.name("dashboardChannelTypes"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.dashboardChannelTypes</code> table reference
     */
    public Dashboardchanneltypes(String alias) {
        this(DSL.name(alias), DASHBOARDCHANNELTYPES);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.dashboardChannelTypes</code> table reference
     */
    public Dashboardchanneltypes(Name alias) {
        this(alias, DASHBOARDCHANNELTYPES);
    }

    private Dashboardchanneltypes(Name alias, Table<DashboardchanneltypesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Dashboardchanneltypes(Name alias, Table<DashboardchanneltypesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Dashboardchanneltypes(Table<O> child, ForeignKey<O, DashboardchanneltypesRecord> key) {
        super(child, key, DASHBOARDCHANNELTYPES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.DASHBOARDCHANNELTYPES_PK_DASHBOARDCHANNELTYPES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<DashboardchanneltypesRecord, UByte> getIdentity() {
        return Keys.IDENTITY_DASHBOARDCHANNELTYPES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DashboardchanneltypesRecord> getPrimaryKey() {
        return Keys.PK_DASHBOARDCHANNELTYPES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DashboardchanneltypesRecord>> getKeys() {
        return Arrays.<UniqueKey<DashboardchanneltypesRecord>>asList(Keys.PK_DASHBOARDCHANNELTYPES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Dashboardchanneltypes as(String alias) {
        return new Dashboardchanneltypes(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Dashboardchanneltypes as(Name alias) {
        return new Dashboardchanneltypes(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Dashboardchanneltypes rename(String name) {
        return new Dashboardchanneltypes(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Dashboardchanneltypes rename(Name name) {
        return new Dashboardchanneltypes(name, null);
    }
}
