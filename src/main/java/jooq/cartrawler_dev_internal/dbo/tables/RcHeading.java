/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.RcHeadingRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RcHeading extends TableImpl<RcHeadingRecord> {

    private static final long serialVersionUID = -2075716387;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.RC_Heading</code>
     */
    public static final RcHeading RC_HEADING = new RcHeading();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RcHeadingRecord> getRecordType() {
        return RcHeadingRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.RC_Heading.H_ID</code>.
     */
    public final TableField<RcHeadingRecord, Integer> H_ID = createField("H_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.RC_Heading.Title</code>.
     */
    public final TableField<RcHeadingRecord, String> TITLE = createField("Title", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.RC_Heading.Detail_Text</code>.
     */
    public final TableField<RcHeadingRecord, String> DETAIL_TEXT = createField("Detail_Text", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.RC_Heading.sortorder</code>.
     */
    public final TableField<RcHeadingRecord, String> SORTORDER = createField("sortorder", org.jooq.impl.SQLDataType.VARCHAR(2), this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.RC_Heading</code> table reference
     */
    public RcHeading() {
        this(DSL.name("RC_Heading"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.RC_Heading</code> table reference
     */
    public RcHeading(String alias) {
        this(DSL.name(alias), RC_HEADING);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.RC_Heading</code> table reference
     */
    public RcHeading(Name alias) {
        this(alias, RC_HEADING);
    }

    private RcHeading(Name alias, Table<RcHeadingRecord> aliased) {
        this(alias, aliased, null);
    }

    private RcHeading(Name alias, Table<RcHeadingRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> RcHeading(Table<O> child, ForeignKey<O, RcHeadingRecord> key) {
        super(child, key, RC_HEADING);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.RC_HEADING_PK_RC_HEADING);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RcHeadingRecord> getPrimaryKey() {
        return Keys.PK_RC_HEADING;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RcHeadingRecord>> getKeys() {
        return Arrays.<UniqueKey<RcHeadingRecord>>asList(Keys.PK_RC_HEADING);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RcHeading as(String alias) {
        return new RcHeading(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RcHeading as(Name alias) {
        return new RcHeading(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RcHeading rename(String name) {
        return new RcHeading(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public RcHeading rename(Name name) {
        return new RcHeading(name, null);
    }
}
