/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.ClientbookenginelayoutRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Clientbookenginelayout extends TableImpl<ClientbookenginelayoutRecord> {

    private static final long serialVersionUID = 499064166;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.ClientBookEngineLayout</code>
     */
    public static final Clientbookenginelayout CLIENTBOOKENGINELAYOUT = new Clientbookenginelayout();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ClientbookenginelayoutRecord> getRecordType() {
        return ClientbookenginelayoutRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.ClientBookEngineLayout.guid</code>.
     */
    public final TableField<ClientbookenginelayoutRecord, UUID> GUID = createField("guid", org.jooq.impl.SQLDataType.UUID.nullable(false).defaultValue(org.jooq.impl.DSL.field("(newid())", org.jooq.impl.SQLDataType.UUID)), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.ClientBookEngineLayout.id</code>.
     */
    public final TableField<ClientbookenginelayoutRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.ClientBookEngineLayout.fk_client</code>.
     */
    public final TableField<ClientbookenginelayoutRecord, Integer> FK_CLIENT = createField("fk_client", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.ClientBookEngineLayout.residency</code>.
     */
    public final TableField<ClientbookenginelayoutRecord, String> RESIDENCY = createField("residency", org.jooq.impl.SQLDataType.CHAR(2), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.ClientBookEngineLayout.pickupCountry</code>.
     */
    public final TableField<ClientbookenginelayoutRecord, String> PICKUPCOUNTRY = createField("pickupCountry", org.jooq.impl.SQLDataType.CHAR(2), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.ClientBookEngineLayout.layout</code>.
     */
    public final TableField<ClientbookenginelayoutRecord, String> LAYOUT = createField("layout", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.ClientBookEngineLayout</code> table reference
     */
    public Clientbookenginelayout() {
        this(DSL.name("ClientBookEngineLayout"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.ClientBookEngineLayout</code> table reference
     */
    public Clientbookenginelayout(String alias) {
        this(DSL.name(alias), CLIENTBOOKENGINELAYOUT);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.ClientBookEngineLayout</code> table reference
     */
    public Clientbookenginelayout(Name alias) {
        this(alias, CLIENTBOOKENGINELAYOUT);
    }

    private Clientbookenginelayout(Name alias, Table<ClientbookenginelayoutRecord> aliased) {
        this(alias, aliased, null);
    }

    private Clientbookenginelayout(Name alias, Table<ClientbookenginelayoutRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Clientbookenginelayout(Table<O> child, ForeignKey<O, ClientbookenginelayoutRecord> key) {
        super(child, key, CLIENTBOOKENGINELAYOUT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CLIENTBOOKENGINELAYOUT_CLSTCLIENT, Indexes.CLIENTBOOKENGINELAYOUT_PK_CLIENTBOOKENGINELAYOUT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ClientbookenginelayoutRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CLIENTBOOKENGINELAYOUT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ClientbookenginelayoutRecord> getPrimaryKey() {
        return Keys.PK_CLIENTBOOKENGINELAYOUT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ClientbookenginelayoutRecord>> getKeys() {
        return Arrays.<UniqueKey<ClientbookenginelayoutRecord>>asList(Keys.PK_CLIENTBOOKENGINELAYOUT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Clientbookenginelayout as(String alias) {
        return new Clientbookenginelayout(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Clientbookenginelayout as(Name alias) {
        return new Clientbookenginelayout(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Clientbookenginelayout rename(String name) {
        return new Clientbookenginelayout(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Clientbookenginelayout rename(Name name) {
        return new Clientbookenginelayout(name, null);
    }
}
