/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.CompetitionRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Competition extends TableImpl<CompetitionRecord> {

    private static final long serialVersionUID = 991451743;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.Competition</code>
     */
    public static final Competition COMPETITION = new Competition();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CompetitionRecord> getRecordType() {
        return CompetitionRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Competition.id</code>.
     */
    public final TableField<CompetitionRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Competition.email</code>.
     */
    public final TableField<CompetitionRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Competition.country</code>.
     */
    public final TableField<CompetitionRecord, String> COUNTRY = createField("country", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Competition.city</code>.
     */
    public final TableField<CompetitionRecord, String> CITY = createField("city", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Competition.timedate</code>.
     */
    public final TableField<CompetitionRecord, String> TIMEDATE = createField("timedate", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Competition.correct</code>.
     */
    public final TableField<CompetitionRecord, Boolean> CORRECT = createField("correct", org.jooq.impl.SQLDataType.BIT.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Competition.forwarded</code>.
     */
    public final TableField<CompetitionRecord, Boolean> FORWARDED = createField("forwarded", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.Competition</code> table reference
     */
    public Competition() {
        this(DSL.name("Competition"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.Competition</code> table reference
     */
    public Competition(String alias) {
        this(DSL.name(alias), COMPETITION);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.Competition</code> table reference
     */
    public Competition(Name alias) {
        this(alias, COMPETITION);
    }

    private Competition(Name alias, Table<CompetitionRecord> aliased) {
        this(alias, aliased, null);
    }

    private Competition(Name alias, Table<CompetitionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Competition(Table<O> child, ForeignKey<O, CompetitionRecord> key) {
        super(child, key, COMPETITION);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.COMPETITION_PK_COMPETITION);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CompetitionRecord, Integer> getIdentity() {
        return Keys.IDENTITY_COMPETITION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CompetitionRecord> getPrimaryKey() {
        return Keys.PK_COMPETITION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CompetitionRecord>> getKeys() {
        return Arrays.<UniqueKey<CompetitionRecord>>asList(Keys.PK_COMPETITION);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Competition as(String alias) {
        return new Competition(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Competition as(Name alias) {
        return new Competition(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Competition rename(String name) {
        return new Competition(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Competition rename(Name name) {
        return new Competition(name, null);
    }
}
