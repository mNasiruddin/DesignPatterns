/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.CommissionreportsRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Commissionreports extends TableImpl<CommissionreportsRecord> {

    private static final long serialVersionUID = 402887250;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.CommissionReports</code>
     */
    public static final Commissionreports COMMISSIONREPORTS = new Commissionreports();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CommissionreportsRecord> getRecordType() {
        return CommissionreportsRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.CommissionReports.guid</code>.
     */
    public final TableField<CommissionreportsRecord, UUID> GUID = createField("guid", org.jooq.impl.SQLDataType.UUID.nullable(false).defaultValue(org.jooq.impl.DSL.field("(newid())", org.jooq.impl.SQLDataType.UUID)), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.CommissionReports.id</code>.
     */
    public final TableField<CommissionreportsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.CommissionReports.company_name</code>.
     */
    public final TableField<CommissionreportsRecord, String> COMPANY_NAME = createField("company_name", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.CommissionReports.customer_name</code>.
     */
    public final TableField<CommissionreportsRecord, String> CUSTOMER_NAME = createField("customer_name", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.CommissionReports.confirmation_number</code>.
     */
    public final TableField<CommissionreportsRecord, String> CONFIRMATION_NUMBER = createField("confirmation_number", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.CommissionReports.resid</code>.
     */
    public final TableField<CommissionreportsRecord, String> RESID = createField("resid", org.jooq.impl.SQLDataType.VARCHAR(20), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.CommissionReports.reference</code>.
     */
    public final TableField<CommissionreportsRecord, String> REFERENCE = createField("reference", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.CommissionReports.time_mile_charge</code>.
     */
    public final TableField<CommissionreportsRecord, BigDecimal> TIME_MILE_CHARGE = createField("time_mile_charge", org.jooq.impl.SQLDataType.NUMERIC(10, 2), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.CommissionReports.commission_amount</code>.
     */
    public final TableField<CommissionreportsRecord, BigDecimal> COMMISSION_AMOUNT = createField("commission_amount", org.jooq.impl.SQLDataType.NUMERIC(10, 2).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.CommissionReports.currency_type</code>.
     */
    public final TableField<CommissionreportsRecord, String> CURRENCY_TYPE = createField("currency_type", org.jooq.impl.SQLDataType.VARCHAR(3).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.CommissionReports.report_date</code>.
     */
    public final TableField<CommissionreportsRecord, Timestamp> REPORT_DATE = createField("report_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.CommissionReports.user_id</code>.
     */
    public final TableField<CommissionreportsRecord, String> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.CommissionReports.pickup_location</code>.
     */
    public final TableField<CommissionreportsRecord, Integer> PICKUP_LOCATION = createField("pickup_location", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.CommissionReports.dropoff_location</code>.
     */
    public final TableField<CommissionreportsRecord, Integer> DROPOFF_LOCATION = createField("dropoff_location", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.CommissionReports.pickup_date</code>.
     */
    public final TableField<CommissionreportsRecord, Timestamp> PICKUP_DATE = createField("pickup_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.CommissionReports.dropoff_date</code>.
     */
    public final TableField<CommissionreportsRecord, Timestamp> DROPOFF_DATE = createField("dropoff_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.CommissionReports.fk_summary</code>.
     */
    public final TableField<CommissionreportsRecord, Integer> FK_SUMMARY = createField("fk_summary", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.CommissionReports</code> table reference
     */
    public Commissionreports() {
        this(DSL.name("CommissionReports"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.CommissionReports</code> table reference
     */
    public Commissionreports(String alias) {
        this(DSL.name(alias), COMMISSIONREPORTS);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.CommissionReports</code> table reference
     */
    public Commissionreports(Name alias) {
        this(alias, COMMISSIONREPORTS);
    }

    private Commissionreports(Name alias, Table<CommissionreportsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Commissionreports(Name alias, Table<CommissionreportsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Commissionreports(Table<O> child, ForeignKey<O, CommissionreportsRecord> key) {
        super(child, key, COMMISSIONREPORTS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.COMMISSIONREPORTS_PK_COMMISSIONREPORTS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CommissionreportsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_COMMISSIONREPORTS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CommissionreportsRecord> getPrimaryKey() {
        return Keys.PK_COMMISSIONREPORTS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CommissionreportsRecord>> getKeys() {
        return Arrays.<UniqueKey<CommissionreportsRecord>>asList(Keys.PK_COMMISSIONREPORTS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Commissionreports as(String alias) {
        return new Commissionreports(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Commissionreports as(Name alias) {
        return new Commissionreports(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Commissionreports rename(String name) {
        return new Commissionreports(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Commissionreports rename(Name name) {
        return new Commissionreports(name, null);
    }
}
