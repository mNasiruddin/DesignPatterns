/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.ContinentsRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Continents extends TableImpl<ContinentsRecord> {

    private static final long serialVersionUID = -1168724767;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.Continents</code>
     */
    public static final Continents CONTINENTS = new Continents();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ContinentsRecord> getRecordType() {
        return ContinentsRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Continents.Continent_Id</code>.
     */
    public final TableField<ContinentsRecord, Integer> CONTINENT_ID = createField("Continent_Id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Continents.Continent_Name</code>.
     */
    public final TableField<ContinentsRecord, String> CONTINENT_NAME = createField("Continent_Name", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Continents.Continent_Text</code>.
     */
    public final TableField<ContinentsRecord, String> CONTINENT_TEXT = createField("Continent_Text", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Continents.Page_Title</code>.
     */
    public final TableField<ContinentsRecord, String> PAGE_TITLE = createField("Page_Title", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Continents.Meta_Description</code>.
     */
    public final TableField<ContinentsRecord, String> META_DESCRIPTION = createField("Meta_Description", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Continents.Meta_Keywords</code>.
     */
    public final TableField<ContinentsRecord, String> META_KEYWORDS = createField("Meta_Keywords", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Continents.Continent_Image</code>.
     */
    public final TableField<ContinentsRecord, byte[]> CONTINENT_IMAGE = createField("Continent_Image", org.jooq.impl.SQLDataType.BINARY(2147483647), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Continents.Image_Width</code>.
     */
    public final TableField<ContinentsRecord, String> IMAGE_WIDTH = createField("Image_Width", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Continents.Image_Height</code>.
     */
    public final TableField<ContinentsRecord, String> IMAGE_HEIGHT = createField("Image_Height", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Continents.Updated</code>.
     */
    public final TableField<ContinentsRecord, Boolean> UPDATED = createField("Updated", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Continents.Continent_Map</code>.
     */
    public final TableField<ContinentsRecord, String> CONTINENT_MAP = createField("Continent_Map", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.Continents</code> table reference
     */
    public Continents() {
        this(DSL.name("Continents"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.Continents</code> table reference
     */
    public Continents(String alias) {
        this(DSL.name(alias), CONTINENTS);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.Continents</code> table reference
     */
    public Continents(Name alias) {
        this(alias, CONTINENTS);
    }

    private Continents(Name alias, Table<ContinentsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Continents(Name alias, Table<ContinentsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Continents(Table<O> child, ForeignKey<O, ContinentsRecord> key) {
        super(child, key, CONTINENTS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CONTINENTS_PK_CONTINENTS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ContinentsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CONTINENTS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ContinentsRecord> getPrimaryKey() {
        return Keys.PK_CONTINENTS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ContinentsRecord>> getKeys() {
        return Arrays.<UniqueKey<ContinentsRecord>>asList(Keys.PK_CONTINENTS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Continents as(String alias) {
        return new Continents(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Continents as(Name alias) {
        return new Continents(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Continents rename(String name) {
        return new Continents(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Continents rename(Name name) {
        return new Continents(name, null);
    }
}
