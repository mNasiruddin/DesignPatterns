/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.ClientStoredcardsRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ClientStoredcards extends TableImpl<ClientStoredcardsRecord> {

    private static final long serialVersionUID = -1218590033;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.client_storedcards</code>
     */
    public static final ClientStoredcards CLIENT_STOREDCARDS = new ClientStoredcards();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ClientStoredcardsRecord> getRecordType() {
        return ClientStoredcardsRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.client_storedcards.id</code>.
     */
    public final TableField<ClientStoredcardsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.client_storedcards.parent_id</code>.
     */
    public final TableField<ClientStoredcardsRecord, Integer> PARENT_ID = createField("parent_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.client_storedcards.realex_pass_ref</code>.
     */
    public final TableField<ClientStoredcardsRecord, String> REALEX_PASS_REF = createField("realex_pass_ref", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.client_storedcards.realex_card_ref</code>.
     */
    public final TableField<ClientStoredcardsRecord, String> REALEX_CARD_REF = createField("realex_card_ref", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.client_storedcards.narrative</code>.
     */
    public final TableField<ClientStoredcardsRecord, String> NARRATIVE = createField("narrative", org.jooq.impl.SQLDataType.VARCHAR(14).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.client_storedcards.card_id</code>.
     */
    public final TableField<ClientStoredcardsRecord, Integer> CARD_ID = createField("card_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.client_storedcards</code> table reference
     */
    public ClientStoredcards() {
        this(DSL.name("client_storedcards"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.client_storedcards</code> table reference
     */
    public ClientStoredcards(String alias) {
        this(DSL.name(alias), CLIENT_STOREDCARDS);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.client_storedcards</code> table reference
     */
    public ClientStoredcards(Name alias) {
        this(alias, CLIENT_STOREDCARDS);
    }

    private ClientStoredcards(Name alias, Table<ClientStoredcardsRecord> aliased) {
        this(alias, aliased, null);
    }

    private ClientStoredcards(Name alias, Table<ClientStoredcardsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> ClientStoredcards(Table<O> child, ForeignKey<O, ClientStoredcardsRecord> key) {
        super(child, key, CLIENT_STOREDCARDS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CLIENT_STOREDCARDS_PK_CLIENT_STOREDCARDS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ClientStoredcardsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CLIENT_STOREDCARDS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ClientStoredcardsRecord> getPrimaryKey() {
        return Keys.PK_CLIENT_STOREDCARDS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ClientStoredcardsRecord>> getKeys() {
        return Arrays.<UniqueKey<ClientStoredcardsRecord>>asList(Keys.PK_CLIENT_STOREDCARDS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClientStoredcards as(String alias) {
        return new ClientStoredcards(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClientStoredcards as(Name alias) {
        return new ClientStoredcards(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ClientStoredcards rename(String name) {
        return new ClientStoredcards(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ClientStoredcards rename(Name name) {
        return new ClientStoredcards(name, null);
    }
}
