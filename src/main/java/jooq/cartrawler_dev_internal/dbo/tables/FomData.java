/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.FomDataRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FomData extends TableImpl<FomDataRecord> {

    private static final long serialVersionUID = 1677302988;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.fom_data</code>
     */
    public static final FomData FOM_DATA = new FomData();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FomDataRecord> getRecordType() {
        return FomDataRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.fom_data.id</code>.
     */
    public final TableField<FomDataRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.fom_data.fk_reservation</code>.
     */
    public final TableField<FomDataRecord, Integer> FK_RESERVATION = createField("fk_reservation", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.fom_data.fk_label</code>.
     */
    public final TableField<FomDataRecord, Integer> FK_LABEL = createField("fk_label", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.fom_data.trans_date</code>.
     */
    public final TableField<FomDataRecord, Timestamp> TRANS_DATE = createField("trans_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.fom_data.currency</code>.
     */
    public final TableField<FomDataRecord, String> CURRENCY = createField("currency", org.jooq.impl.SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.fom_data.cash_settled</code>.
     */
    public final TableField<FomDataRecord, BigDecimal> CASH_SETTLED = createField("cash_settled", org.jooq.impl.SQLDataType.NUMERIC(19, 4), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.fom_data.cash_receivable</code>.
     */
    public final TableField<FomDataRecord, BigDecimal> CASH_RECEIVABLE = createField("cash_receivable", org.jooq.impl.SQLDataType.NUMERIC(19, 4), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.fom_data.revenue</code>.
     */
    public final TableField<FomDataRecord, BigDecimal> REVENUE = createField("revenue", org.jooq.impl.SQLDataType.NUMERIC(19, 4), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.fom_data.liability</code>.
     */
    public final TableField<FomDataRecord, BigDecimal> LIABILITY = createField("liability", org.jooq.impl.SQLDataType.NUMERIC(19, 4), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.fom_data.cash_out</code>.
     */
    public final TableField<FomDataRecord, BigDecimal> CASH_OUT = createField("cash_out", org.jooq.impl.SQLDataType.NUMERIC(19, 4), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.fom_data.order_id</code>.
     */
    public final TableField<FomDataRecord, String> ORDER_ID = createField("order_id", org.jooq.impl.SQLDataType.VARCHAR(32), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.fom_data.fk_key</code>.
     */
    public final TableField<FomDataRecord, Integer> FK_KEY = createField("fk_key", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.fom_data.res_status</code>.
     */
    public final TableField<FomDataRecord, Integer> RES_STATUS = createField("res_status", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.fom_data</code> table reference
     */
    public FomData() {
        this(DSL.name("fom_data"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.fom_data</code> table reference
     */
    public FomData(String alias) {
        this(DSL.name(alias), FOM_DATA);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.fom_data</code> table reference
     */
    public FomData(Name alias) {
        this(alias, FOM_DATA);
    }

    private FomData(Name alias, Table<FomDataRecord> aliased) {
        this(alias, aliased, null);
    }

    private FomData(Name alias, Table<FomDataRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> FomData(Table<O> child, ForeignKey<O, FomDataRecord> key) {
        super(child, key, FOM_DATA);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.FOM_DATA_PK_FOM_DATA);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<FomDataRecord, Integer> getIdentity() {
        return Keys.IDENTITY_FOM_DATA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<FomDataRecord> getPrimaryKey() {
        return Keys.PK_FOM_DATA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<FomDataRecord>> getKeys() {
        return Arrays.<UniqueKey<FomDataRecord>>asList(Keys.PK_FOM_DATA);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FomData as(String alias) {
        return new FomData(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FomData as(Name alias) {
        return new FomData(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public FomData rename(String name) {
        return new FomData(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public FomData rename(Name name) {
        return new FomData(name, null);
    }
}
