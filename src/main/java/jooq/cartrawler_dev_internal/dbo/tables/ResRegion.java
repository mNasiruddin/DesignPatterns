/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.ResRegionRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UByte;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ResRegion extends TableImpl<ResRegionRecord> {

    private static final long serialVersionUID = -1810965251;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.res_region</code>
     */
    public static final ResRegion RES_REGION = new ResRegion();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ResRegionRecord> getRecordType() {
        return ResRegionRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.res_region.guid</code>.
     */
    public final TableField<ResRegionRecord, UUID> GUID = createField("guid", org.jooq.impl.SQLDataType.UUID.nullable(false).defaultValue(org.jooq.impl.DSL.field("(newid())", org.jooq.impl.SQLDataType.UUID)), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.res_region.region_id</code>.
     */
    public final TableField<ResRegionRecord, UByte> REGION_ID = createField("region_id", org.jooq.impl.SQLDataType.TINYINTUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.res_region.region_name</code>.
     */
    public final TableField<ResRegionRecord, String> REGION_NAME = createField("region_name", org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.res_region.identifier</code>.
     */
    public final TableField<ResRegionRecord, String> IDENTIFIER = createField("identifier", org.jooq.impl.SQLDataType.CHAR(5), this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.res_region</code> table reference
     */
    public ResRegion() {
        this(DSL.name("res_region"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.res_region</code> table reference
     */
    public ResRegion(String alias) {
        this(DSL.name(alias), RES_REGION);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.res_region</code> table reference
     */
    public ResRegion(Name alias) {
        this(alias, RES_REGION);
    }

    private ResRegion(Name alias, Table<ResRegionRecord> aliased) {
        this(alias, aliased, null);
    }

    private ResRegion(Name alias, Table<ResRegionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> ResRegion(Table<O> child, ForeignKey<O, ResRegionRecord> key) {
        super(child, key, RES_REGION);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.RES_REGION_PK_RES_REGION, Indexes.RES_REGION_PK_RES_REGION_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ResRegionRecord, UByte> getIdentity() {
        return Keys.IDENTITY_RES_REGION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ResRegionRecord> getPrimaryKey() {
        return Keys.PK_RES_REGION_1;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ResRegionRecord>> getKeys() {
        return Arrays.<UniqueKey<ResRegionRecord>>asList(Keys.PK_RES_REGION_1, Keys.PK_RES_REGION);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResRegion as(String alias) {
        return new ResRegion(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResRegion as(Name alias) {
        return new ResRegion(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ResRegion rename(String name) {
        return new ResRegion(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ResRegion rename(Name name) {
        return new ResRegion(name, null);
    }
}
