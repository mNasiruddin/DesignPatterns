/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.QuotesRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Quotes extends TableImpl<QuotesRecord> {

    private static final long serialVersionUID = -841930557;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.Quotes</code>
     */
    public static final Quotes QUOTES = new Quotes();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<QuotesRecord> getRecordType() {
        return QuotesRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Quotes.Ix</code>.
     */
    public final TableField<QuotesRecord, Integer> IX = createField("Ix", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Quotes.ReferenceDateTime</code>.
     */
    public final TableField<QuotesRecord, String> REFERENCEDATETIME = createField("ReferenceDateTime", org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Quotes.ReferenceId</code>.
     */
    public final TableField<QuotesRecord, String> REFERENCEID = createField("ReferenceId", org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Quotes.OtaSummary</code>.
     */
    public final TableField<QuotesRecord, String> OTASUMMARY = createField("OtaSummary", org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Quotes.Currency</code>.
     */
    public final TableField<QuotesRecord, String> CURRENCY = createField("Currency", org.jooq.impl.SQLDataType.VARCHAR(3).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Quotes.Amount</code>.
     */
    public final TableField<QuotesRecord, BigDecimal> AMOUNT = createField("Amount", org.jooq.impl.SQLDataType.NUMERIC(10, 2).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Quotes.XmlType</code>.
     */
    public final TableField<QuotesRecord, String> XMLTYPE = createField("XmlType", org.jooq.impl.SQLDataType.VARCHAR(2).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Quotes.CarAgentId</code>.
     */
    public final TableField<QuotesRecord, Integer> CARAGENTID = createField("CarAgentId", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Quotes.OurReferenceId</code>.
     */
    public final TableField<QuotesRecord, String> OURREFERENCEID = createField("OurReferenceId", org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.Quotes.ReservationRef</code>.
     */
    public final TableField<QuotesRecord, Integer> RESERVATIONREF = createField("ReservationRef", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.Quotes</code> table reference
     */
    public Quotes() {
        this(DSL.name("Quotes"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.Quotes</code> table reference
     */
    public Quotes(String alias) {
        this(DSL.name(alias), QUOTES);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.Quotes</code> table reference
     */
    public Quotes(Name alias) {
        this(alias, QUOTES);
    }

    private Quotes(Name alias, Table<QuotesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Quotes(Name alias, Table<QuotesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Quotes(Table<O> child, ForeignKey<O, QuotesRecord> key) {
        super(child, key, QUOTES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.QUOTES_PK_QUOTES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<QuotesRecord, Integer> getIdentity() {
        return Keys.IDENTITY_QUOTES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<QuotesRecord> getPrimaryKey() {
        return Keys.PK_QUOTES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<QuotesRecord>> getKeys() {
        return Arrays.<UniqueKey<QuotesRecord>>asList(Keys.PK_QUOTES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Quotes as(String alias) {
        return new Quotes(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Quotes as(Name alias) {
        return new Quotes(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Quotes rename(String name) {
        return new Quotes(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Quotes rename(Name name) {
        return new Quotes(name, null);
    }
}
