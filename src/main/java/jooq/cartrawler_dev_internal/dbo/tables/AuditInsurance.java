/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.sql.Timestamp;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.AuditInsuranceRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AuditInsurance extends TableImpl<AuditInsuranceRecord> {

    private static final long serialVersionUID = 240424396;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.audit_insurance</code>
     */
    public static final AuditInsurance AUDIT_INSURANCE = new AuditInsurance();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AuditInsuranceRecord> getRecordType() {
        return AuditInsuranceRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.audit_insurance.id</code>.
     */
    public final TableField<AuditInsuranceRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.audit_insurance.fk_reservation</code>.
     */
    public final TableField<AuditInsuranceRecord, Integer> FK_RESERVATION = createField("fk_reservation", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.audit_insurance.file_type</code>.
     */
    public final TableField<AuditInsuranceRecord, String> FILE_TYPE = createField("file_type", org.jooq.impl.SQLDataType.NVARCHAR(50), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.audit_insurance.file_name</code>.
     */
    public final TableField<AuditInsuranceRecord, String> FILE_NAME = createField("file_name", org.jooq.impl.SQLDataType.NVARCHAR(50), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.audit_insurance.transmit_date</code>.
     */
    public final TableField<AuditInsuranceRecord, Timestamp> TRANSMIT_DATE = createField("transmit_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.audit_insurance</code> table reference
     */
    public AuditInsurance() {
        this(DSL.name("audit_insurance"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.audit_insurance</code> table reference
     */
    public AuditInsurance(String alias) {
        this(DSL.name(alias), AUDIT_INSURANCE);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.audit_insurance</code> table reference
     */
    public AuditInsurance(Name alias) {
        this(alias, AUDIT_INSURANCE);
    }

    private AuditInsurance(Name alias, Table<AuditInsuranceRecord> aliased) {
        this(alias, aliased, null);
    }

    private AuditInsurance(Name alias, Table<AuditInsuranceRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> AuditInsurance(Table<O> child, ForeignKey<O, AuditInsuranceRecord> key) {
        super(child, key, AUDIT_INSURANCE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<AuditInsuranceRecord, Integer> getIdentity() {
        return Keys.IDENTITY_AUDIT_INSURANCE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AuditInsurance as(String alias) {
        return new AuditInsurance(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AuditInsurance as(Name alias) {
        return new AuditInsurance(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AuditInsurance rename(String name) {
        return new AuditInsurance(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AuditInsurance rename(Name name) {
        return new AuditInsurance(name, null);
    }
}
