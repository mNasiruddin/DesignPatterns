/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.FomlabelsRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Fomlabels extends TableImpl<FomlabelsRecord> {

    private static final long serialVersionUID = 1628429550;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.FOMLabels</code>
     */
    public static final Fomlabels FOMLABELS = new Fomlabels();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FomlabelsRecord> getRecordType() {
        return FomlabelsRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.FOMLabels.pr_key</code>.
     */
    public final TableField<FomlabelsRecord, Integer> PR_KEY = createField("pr_key", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.FOMLabels.id</code>.
     */
    public final TableField<FomlabelsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.FOMLabels.label_name</code>.
     */
    public final TableField<FomlabelsRecord, String> LABEL_NAME = createField("label_name", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.FOMLabels.fk_type</code>.
     */
    public final TableField<FomlabelsRecord, Integer> FK_TYPE = createField("fk_type", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.FOMLabels.fk_party</code>.
     */
    public final TableField<FomlabelsRecord, Integer> FK_PARTY = createField("fk_party", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.FOMLabels.fk_currencytype</code>.
     */
    public final TableField<FomlabelsRecord, Integer> FK_CURRENCYTYPE = createField("fk_currencytype", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.FOMLabels.fk_column</code>.
     */
    public final TableField<FomlabelsRecord, Integer> FK_COLUMN = createField("fk_column", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.FOMLabels</code> table reference
     */
    public Fomlabels() {
        this(DSL.name("FOMLabels"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.FOMLabels</code> table reference
     */
    public Fomlabels(String alias) {
        this(DSL.name(alias), FOMLABELS);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.FOMLabels</code> table reference
     */
    public Fomlabels(Name alias) {
        this(alias, FOMLABELS);
    }

    private Fomlabels(Name alias, Table<FomlabelsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Fomlabels(Name alias, Table<FomlabelsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Fomlabels(Table<O> child, ForeignKey<O, FomlabelsRecord> key) {
        super(child, key, FOMLABELS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.FOMLABELS_PK_FOMLABELS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<FomlabelsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_FOMLABELS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<FomlabelsRecord> getPrimaryKey() {
        return Keys.PK_FOMLABELS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<FomlabelsRecord>> getKeys() {
        return Arrays.<UniqueKey<FomlabelsRecord>>asList(Keys.PK_FOMLABELS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Fomlabels as(String alias) {
        return new Fomlabels(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Fomlabels as(Name alias) {
        return new Fomlabels(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Fomlabels rename(String name) {
        return new Fomlabels(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Fomlabels rename(Name name) {
        return new Fomlabels(name, null);
    }
}
