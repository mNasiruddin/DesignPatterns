/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.sql.Timestamp;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.tables.records.BookingLanguageAuditRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BookingLanguageAudit extends TableImpl<BookingLanguageAuditRecord> {

    private static final long serialVersionUID = -405981899;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.booking_language_audit</code>
     */
    public static final BookingLanguageAudit BOOKING_LANGUAGE_AUDIT = new BookingLanguageAudit();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BookingLanguageAuditRecord> getRecordType() {
        return BookingLanguageAuditRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.booking_language_audit.fk_reservation</code>.
     */
    public final TableField<BookingLanguageAuditRecord, Integer> FK_RESERVATION = createField("fk_reservation", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.booking_language_audit.booking_language_del</code>.
     */
    public final TableField<BookingLanguageAuditRecord, String> BOOKING_LANGUAGE_DEL = createField("booking_language_del", org.jooq.impl.SQLDataType.CHAR(5), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.booking_language_audit.booking_language_ins</code>.
     */
    public final TableField<BookingLanguageAuditRecord, String> BOOKING_LANGUAGE_INS = createField("booking_language_ins", org.jooq.impl.SQLDataType.CHAR(5), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.booking_language_audit.update_date</code>.
     */
    public final TableField<BookingLanguageAuditRecord, Timestamp> UPDATE_DATE = createField("update_date", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("(getdate())", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.booking_language_audit</code> table reference
     */
    public BookingLanguageAudit() {
        this(DSL.name("booking_language_audit"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.booking_language_audit</code> table reference
     */
    public BookingLanguageAudit(String alias) {
        this(DSL.name(alias), BOOKING_LANGUAGE_AUDIT);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.booking_language_audit</code> table reference
     */
    public BookingLanguageAudit(Name alias) {
        this(alias, BOOKING_LANGUAGE_AUDIT);
    }

    private BookingLanguageAudit(Name alias, Table<BookingLanguageAuditRecord> aliased) {
        this(alias, aliased, null);
    }

    private BookingLanguageAudit(Name alias, Table<BookingLanguageAuditRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> BookingLanguageAudit(Table<O> child, ForeignKey<O, BookingLanguageAuditRecord> key) {
        super(child, key, BOOKING_LANGUAGE_AUDIT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BookingLanguageAudit as(String alias) {
        return new BookingLanguageAudit(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BookingLanguageAudit as(Name alias) {
        return new BookingLanguageAudit(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public BookingLanguageAudit rename(String name) {
        return new BookingLanguageAudit(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public BookingLanguageAudit rename(Name name) {
        return new BookingLanguageAudit(name, null);
    }
}
