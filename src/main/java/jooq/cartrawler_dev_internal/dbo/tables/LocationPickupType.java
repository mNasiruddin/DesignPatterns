/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.LocationPickupTypeRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LocationPickupType extends TableImpl<LocationPickupTypeRecord> {

    private static final long serialVersionUID = -1635875606;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.location_pickup_type</code>
     */
    public static final LocationPickupType LOCATION_PICKUP_TYPE = new LocationPickupType();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<LocationPickupTypeRecord> getRecordType() {
        return LocationPickupTypeRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.location_pickup_type.guid</code>.
     */
    public final TableField<LocationPickupTypeRecord, UUID> GUID = createField("guid", org.jooq.impl.SQLDataType.UUID.nullable(false).defaultValue(org.jooq.impl.DSL.field("(newid())", org.jooq.impl.SQLDataType.UUID)), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.location_pickup_type.loc_pickup_type_id</code>.
     */
    public final TableField<LocationPickupTypeRecord, Integer> LOC_PICKUP_TYPE_ID = createField("loc_pickup_type_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.location_pickup_type.name</code>.
     */
    public final TableField<LocationPickupTypeRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.location_pickup_type.ota_code</code>.
     */
    public final TableField<LocationPickupTypeRecord, String> OTA_CODE = createField("ota_code", org.jooq.impl.SQLDataType.VARCHAR(15), this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.location_pickup_type</code> table reference
     */
    public LocationPickupType() {
        this(DSL.name("location_pickup_type"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.location_pickup_type</code> table reference
     */
    public LocationPickupType(String alias) {
        this(DSL.name(alias), LOCATION_PICKUP_TYPE);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.location_pickup_type</code> table reference
     */
    public LocationPickupType(Name alias) {
        this(alias, LOCATION_PICKUP_TYPE);
    }

    private LocationPickupType(Name alias, Table<LocationPickupTypeRecord> aliased) {
        this(alias, aliased, null);
    }

    private LocationPickupType(Name alias, Table<LocationPickupTypeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> LocationPickupType(Table<O> child, ForeignKey<O, LocationPickupTypeRecord> key) {
        super(child, key, LOCATION_PICKUP_TYPE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.LOCATION_PICKUP_TYPE_PK_LOCATION_PICKUP_TYPE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<LocationPickupTypeRecord> getPrimaryKey() {
        return Keys.PK_LOCATION_PICKUP_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<LocationPickupTypeRecord>> getKeys() {
        return Arrays.<UniqueKey<LocationPickupTypeRecord>>asList(Keys.PK_LOCATION_PICKUP_TYPE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocationPickupType as(String alias) {
        return new LocationPickupType(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocationPickupType as(Name alias) {
        return new LocationPickupType(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public LocationPickupType rename(String name) {
        return new LocationPickupType(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public LocationPickupType rename(Name name) {
        return new LocationPickupType(name, null);
    }
}
