/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.DemoChannelsRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DemoChannels extends TableImpl<DemoChannelsRecord> {

    private static final long serialVersionUID = 1206464911;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.demo_Channels</code>
     */
    public static final DemoChannels DEMO_CHANNELS = new DemoChannels();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DemoChannelsRecord> getRecordType() {
        return DemoChannelsRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.demo_Channels.id</code>.
     */
    public final TableField<DemoChannelsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.demo_Channels.name</code>.
     */
    public final TableField<DemoChannelsRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.demo_Channels.amendedBy</code>.
     */
    public final TableField<DemoChannelsRecord, Integer> AMENDEDBY = createField("amendedBy", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.demo_Channels.amendDate</code>.
     */
    public final TableField<DemoChannelsRecord, Timestamp> AMENDDATE = createField("amendDate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.demo_Channels.consumerLocation</code>.
     */
    public final TableField<DemoChannelsRecord, String> CONSUMERLOCATION = createField("consumerLocation", org.jooq.impl.SQLDataType.VARCHAR(2), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.demo_Channels.fromDate</code>.
     */
    public final TableField<DemoChannelsRecord, Timestamp> FROMDATE = createField("fromDate", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.demo_Channels.toDate</code>.
     */
    public final TableField<DemoChannelsRecord, Timestamp> TODATE = createField("toDate", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.demo_Channels.onDashboard</code>.
     */
    public final TableField<DemoChannelsRecord, Boolean> ONDASHBOARD = createField("onDashboard", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.demo_Channels.hoursBeforePickupTime</code>.
     */
    public final TableField<DemoChannelsRecord, Integer> HOURSBEFOREPICKUPTIME = createField("hoursBeforePickupTime", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.demo_Channels.stopSale</code>.
     */
    public final TableField<DemoChannelsRecord, Integer> STOPSALE = createField("stopSale", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.demo_Channels.fk_clientPlan</code>.
     */
    public final TableField<DemoChannelsRecord, Integer> FK_CLIENTPLAN = createField("fk_clientPlan", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.demo_Channels.type</code>.
     */
    public final TableField<DemoChannelsRecord, String> TYPE = createField("type", org.jooq.impl.SQLDataType.VARCHAR(32), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.demo_Channels.blend</code>.
     */
    public final TableField<DemoChannelsRecord, Integer> BLEND = createField("blend", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.demo_Channels.fk_user</code>.
     */
    public final TableField<DemoChannelsRecord, Integer> FK_USER = createField("fk_user", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.demo_Channels.fk_org</code>.
     */
    public final TableField<DemoChannelsRecord, Integer> FK_ORG = createField("fk_org", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.demo_Channels.exclusion</code>.
     */
    public final TableField<DemoChannelsRecord, Boolean> EXCLUSION = createField("exclusion", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.demo_Channels.fk_plan</code>.
     */
    public final TableField<DemoChannelsRecord, Integer> FK_PLAN = createField("fk_plan", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.demo_Channels</code> table reference
     */
    public DemoChannels() {
        this(DSL.name("demo_Channels"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.demo_Channels</code> table reference
     */
    public DemoChannels(String alias) {
        this(DSL.name(alias), DEMO_CHANNELS);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.demo_Channels</code> table reference
     */
    public DemoChannels(Name alias) {
        this(alias, DEMO_CHANNELS);
    }

    private DemoChannels(Name alias, Table<DemoChannelsRecord> aliased) {
        this(alias, aliased, null);
    }

    private DemoChannels(Name alias, Table<DemoChannelsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> DemoChannels(Table<O> child, ForeignKey<O, DemoChannelsRecord> key) {
        super(child, key, DEMO_CHANNELS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.DEMO_CHANNELS_PK_DEMO_CHANNELS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DemoChannelsRecord> getPrimaryKey() {
        return Keys.PK_DEMO_CHANNELS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DemoChannelsRecord>> getKeys() {
        return Arrays.<UniqueKey<DemoChannelsRecord>>asList(Keys.PK_DEMO_CHANNELS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DemoChannels as(String alias) {
        return new DemoChannels(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DemoChannels as(Name alias) {
        return new DemoChannels(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DemoChannels rename(String name) {
        return new DemoChannels(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DemoChannels rename(Name name) {
        return new DemoChannels(name, null);
    }
}
