/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.RemoteQueriesVehicleclickRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UByte;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RemoteQueriesVehicleclick extends TableImpl<RemoteQueriesVehicleclickRecord> {

    private static final long serialVersionUID = -1853595156;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.remote_queries_vehicleclick</code>
     */
    public static final RemoteQueriesVehicleclick REMOTE_QUERIES_VEHICLECLICK = new RemoteQueriesVehicleclick();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RemoteQueriesVehicleclickRecord> getRecordType() {
        return RemoteQueriesVehicleclickRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.remote_queries_vehicleclick.ref</code>.
     */
    public final TableField<RemoteQueriesVehicleclickRecord, Long> REF = createField("ref", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.remote_queries_vehicleclick.queryId</code>.
     */
    public final TableField<RemoteQueriesVehicleclickRecord, Long> QUERYID = createField("queryId", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.remote_queries_vehicleclick.cartype</code>.
     */
    public final TableField<RemoteQueriesVehicleclickRecord, String> CARTYPE = createField("cartype", org.jooq.impl.SQLDataType.CHAR(4), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.remote_queries_vehicleclick.fk_caragent</code>.
     */
    public final TableField<RemoteQueriesVehicleclickRecord, Integer> FK_CARAGENT = createField("fk_caragent", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.remote_queries_vehicleclick.ota_veh_class</code>.
     */
    public final TableField<RemoteQueriesVehicleclickRecord, UByte> OTA_VEH_CLASS = createField("ota_veh_class", org.jooq.impl.SQLDataType.TINYINTUNSIGNED, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.remote_queries_vehicleclick.querydate</code>.
     */
    public final TableField<RemoteQueriesVehicleclickRecord, Timestamp> QUERYDATE = createField("querydate", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("(getdate())", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.remote_queries_vehicleclick</code> table reference
     */
    public RemoteQueriesVehicleclick() {
        this(DSL.name("remote_queries_vehicleclick"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.remote_queries_vehicleclick</code> table reference
     */
    public RemoteQueriesVehicleclick(String alias) {
        this(DSL.name(alias), REMOTE_QUERIES_VEHICLECLICK);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.remote_queries_vehicleclick</code> table reference
     */
    public RemoteQueriesVehicleclick(Name alias) {
        this(alias, REMOTE_QUERIES_VEHICLECLICK);
    }

    private RemoteQueriesVehicleclick(Name alias, Table<RemoteQueriesVehicleclickRecord> aliased) {
        this(alias, aliased, null);
    }

    private RemoteQueriesVehicleclick(Name alias, Table<RemoteQueriesVehicleclickRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> RemoteQueriesVehicleclick(Table<O> child, ForeignKey<O, RemoteQueriesVehicleclickRecord> key) {
        super(child, key, REMOTE_QUERIES_VEHICLECLICK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.REMOTE_QUERIES_VEHICLECLICK_PK_REMOTE_QUERIES_VEHICLECLICK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<RemoteQueriesVehicleclickRecord, Long> getIdentity() {
        return Keys.IDENTITY_REMOTE_QUERIES_VEHICLECLICK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RemoteQueriesVehicleclickRecord> getPrimaryKey() {
        return Keys.PK_REMOTE_QUERIES_VEHICLECLICK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RemoteQueriesVehicleclickRecord>> getKeys() {
        return Arrays.<UniqueKey<RemoteQueriesVehicleclickRecord>>asList(Keys.PK_REMOTE_QUERIES_VEHICLECLICK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RemoteQueriesVehicleclick as(String alias) {
        return new RemoteQueriesVehicleclick(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RemoteQueriesVehicleclick as(Name alias) {
        return new RemoteQueriesVehicleclick(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RemoteQueriesVehicleclick rename(String name) {
        return new RemoteQueriesVehicleclick(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public RemoteQueriesVehicleclick rename(Name name) {
        return new RemoteQueriesVehicleclick(name, null);
    }
}
