/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.ReservationamendattemptsRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Reservationamendattempts extends TableImpl<ReservationamendattemptsRecord> {

    private static final long serialVersionUID = -172219406;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.reservationAmendAttempts</code>
     */
    public static final Reservationamendattempts RESERVATIONAMENDATTEMPTS = new Reservationamendattempts();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ReservationamendattemptsRecord> getRecordType() {
        return ReservationamendattemptsRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.reservationAmendAttempts.guid</code>.
     */
    public final TableField<ReservationamendattemptsRecord, UUID> GUID = createField("guid", org.jooq.impl.SQLDataType.UUID.nullable(false).defaultValue(org.jooq.impl.DSL.field("(newid())", org.jooq.impl.SQLDataType.UUID)), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.reservationAmendAttempts.fk_reservation</code>.
     */
    public final TableField<ReservationamendattemptsRecord, Integer> FK_RESERVATION = createField("fk_reservation", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.reservationAmendAttempts.attemptDate</code>.
     */
    public final TableField<ReservationamendattemptsRecord, Timestamp> ATTEMPTDATE = createField("attemptDate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("(getdate())", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.reservationAmendAttempts.cars</code>.
     */
    public final TableField<ReservationamendattemptsRecord, Integer> CARS = createField("cars", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.reservationAmendAttempts.matchingCar</code>.
     */
    public final TableField<ReservationamendattemptsRecord, Boolean> MATCHINGCAR = createField("matchingCar", org.jooq.impl.SQLDataType.BIT.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.reservationAmendAttempts.fk_user</code>.
     */
    public final TableField<ReservationamendattemptsRecord, Integer> FK_USER = createField("fk_user", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.reservationAmendAttempts</code> table reference
     */
    public Reservationamendattempts() {
        this(DSL.name("reservationAmendAttempts"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.reservationAmendAttempts</code> table reference
     */
    public Reservationamendattempts(String alias) {
        this(DSL.name(alias), RESERVATIONAMENDATTEMPTS);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.reservationAmendAttempts</code> table reference
     */
    public Reservationamendattempts(Name alias) {
        this(alias, RESERVATIONAMENDATTEMPTS);
    }

    private Reservationamendattempts(Name alias, Table<ReservationamendattemptsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Reservationamendattempts(Name alias, Table<ReservationamendattemptsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Reservationamendattempts(Table<O> child, ForeignKey<O, ReservationamendattemptsRecord> key) {
        super(child, key, RESERVATIONAMENDATTEMPTS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.RESERVATIONAMENDATTEMPTS_PK_RESERVATIONAMENDATTEMPTS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ReservationamendattemptsRecord> getPrimaryKey() {
        return Keys.PK_RESERVATIONAMENDATTEMPTS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ReservationamendattemptsRecord>> getKeys() {
        return Arrays.<UniqueKey<ReservationamendattemptsRecord>>asList(Keys.PK_RESERVATIONAMENDATTEMPTS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Reservationamendattempts as(String alias) {
        return new Reservationamendattempts(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Reservationamendattempts as(Name alias) {
        return new Reservationamendattempts(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Reservationamendattempts rename(String name) {
        return new Reservationamendattempts(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Reservationamendattempts rename(Name name) {
        return new Reservationamendattempts(name, null);
    }
}
