/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.CustomersRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UByte;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Customers extends TableImpl<CustomersRecord> {

    private static final long serialVersionUID = 1246738684;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.customers</code>
     */
    public static final Customers CUSTOMERS = new Customers();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CustomersRecord> getRecordType() {
        return CustomersRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.customers.customer_id</code>.
     */
    public final TableField<CustomersRecord, Integer> CUSTOMER_ID = createField("customer_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.customers.last_name</code>.
     */
    public final TableField<CustomersRecord, String> LAST_NAME = createField("last_name", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.customers.first_name</code>.
     */
    public final TableField<CustomersRecord, String> FIRST_NAME = createField("first_name", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.customers.address</code>.
     */
    public final TableField<CustomersRecord, String> ADDRESS = createField("address", org.jooq.impl.SQLDataType.VARCHAR(250), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.customers.residency</code>.
     */
    public final TableField<CustomersRecord, String> RESIDENCY = createField("residency", org.jooq.impl.SQLDataType.CHAR(2), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.customers.email</code>.
     */
    public final TableField<CustomersRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.customers.phone</code>.
     */
    public final TableField<CustomersRecord, String> PHONE = createField("phone", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.customers.fk_customer_parent</code>.
     */
    public final TableField<CustomersRecord, Integer> FK_CUSTOMER_PARENT = createField("fk_customer_parent", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.customers.updated_date</code>.
     */
    public final TableField<CustomersRecord, Timestamp> UPDATED_DATE = createField("updated_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.customers.street</code>.
     */
    public final TableField<CustomersRecord, String> STREET = createField("street", org.jooq.impl.SQLDataType.VARCHAR(200), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.customers.city</code>.
     */
    public final TableField<CustomersRecord, String> CITY = createField("city", org.jooq.impl.SQLDataType.VARCHAR(200), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.customers.country</code>.
     */
    public final TableField<CustomersRecord, String> COUNTRY = createField("country", org.jooq.impl.SQLDataType.VARCHAR(150), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.customers.postalcode</code>.
     */
    public final TableField<CustomersRecord, String> POSTALCODE = createField("postalcode", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.customers.deleted</code>.
     */
    public final TableField<CustomersRecord, Boolean> DELETED = createField("deleted", org.jooq.impl.SQLDataType.BIT.defaultValue(org.jooq.impl.DSL.field("('false')", org.jooq.impl.SQLDataType.BIT)), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.customers.booking_language</code>.
     */
    public final TableField<CustomersRecord, String> BOOKING_LANGUAGE = createField("booking_language", org.jooq.impl.SQLDataType.VARCHAR(5), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.customers.phone_2</code>.
     */
    public final TableField<CustomersRecord, String> PHONE_2 = createField("phone_2", org.jooq.impl.SQLDataType.VARCHAR(30), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.customers.phone_3</code>.
     */
    public final TableField<CustomersRecord, String> PHONE_3 = createField("phone_3", org.jooq.impl.SQLDataType.VARCHAR(30), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.customers.bookings_ids</code>.
     */
    public final TableField<CustomersRecord, String> BOOKINGS_IDS = createField("bookings_ids", org.jooq.impl.SQLDataType.VARCHAR(2000), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.customers.update_status</code>.
     */
    public final TableField<CustomersRecord, UByte> UPDATE_STATUS = createField("update_status", org.jooq.impl.SQLDataType.TINYINTUNSIGNED, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.customers.fk_real_parent</code>.
     */
    public final TableField<CustomersRecord, Integer> FK_REAL_PARENT = createField("fk_real_parent", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.customers.fk_super_parent</code>.
     */
    public final TableField<CustomersRecord, Integer> FK_SUPER_PARENT = createField("fk_super_parent", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.customers</code> table reference
     */
    public Customers() {
        this(DSL.name("customers"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.customers</code> table reference
     */
    public Customers(String alias) {
        this(DSL.name(alias), CUSTOMERS);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.customers</code> table reference
     */
    public Customers(Name alias) {
        this(alias, CUSTOMERS);
    }

    private Customers(Name alias, Table<CustomersRecord> aliased) {
        this(alias, aliased, null);
    }

    private Customers(Name alias, Table<CustomersRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Customers(Table<O> child, ForeignKey<O, CustomersRecord> key) {
        super(child, key, CUSTOMERS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CUSTOMERS_PK_CUSTOMERS2);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CustomersRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CUSTOMERS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CustomersRecord> getPrimaryKey() {
        return Keys.PK_CUSTOMERS2;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CustomersRecord>> getKeys() {
        return Arrays.<UniqueKey<CustomersRecord>>asList(Keys.PK_CUSTOMERS2);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Customers as(String alias) {
        return new Customers(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Customers as(Name alias) {
        return new Customers(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Customers rename(String name) {
        return new Customers(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Customers rename(Name name) {
        return new Customers(name, null);
    }
}
