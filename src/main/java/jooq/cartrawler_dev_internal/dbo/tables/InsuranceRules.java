/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.InsuranceRulesRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InsuranceRules extends TableImpl<InsuranceRulesRecord> {

    private static final long serialVersionUID = -1729814207;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.insurance_rules</code>
     */
    public static final InsuranceRules INSURANCE_RULES = new InsuranceRules();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<InsuranceRulesRecord> getRecordType() {
        return InsuranceRulesRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.insurance_rules.id</code>.
     */
    public final TableField<InsuranceRulesRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.insurance_rules.country_id</code>.
     */
    public final TableField<InsuranceRulesRecord, String> COUNTRY_ID = createField("country_id", org.jooq.impl.SQLDataType.VARCHAR(2).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.insurance_rules.insurer</code>.
     */
    public final TableField<InsuranceRulesRecord, String> INSURER = createField("insurer", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.insurance_rules.quote_currency</code>.
     */
    public final TableField<InsuranceRulesRecord, String> QUOTE_CURRENCY = createField("quote_currency", org.jooq.impl.SQLDataType.VARCHAR(3), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.insurance_rules.quote_language</code>.
     */
    public final TableField<InsuranceRulesRecord, String> QUOTE_LANGUAGE = createField("quote_language", org.jooq.impl.SQLDataType.VARCHAR(3), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.insurance_rules.ct_mor</code>.
     */
    public final TableField<InsuranceRulesRecord, Integer> CT_MOR = createField("ct_mor", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.insurance_rules.min_age</code>.
     */
    public final TableField<InsuranceRulesRecord, Integer> MIN_AGE = createField("min_age", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.insurance_rules.max_age</code>.
     */
    public final TableField<InsuranceRulesRecord, Integer> MAX_AGE = createField("max_age", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.insurance_rules.max_days</code>.
     */
    public final TableField<InsuranceRulesRecord, Integer> MAX_DAYS = createField("max_days", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.insurance_rules.koios</code>.
     */
    public final TableField<InsuranceRulesRecord, Boolean> KOIOS = createField("koios", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.insurance_rules.excess</code>.
     */
    public final TableField<InsuranceRulesRecord, BigDecimal> EXCESS = createField("excess", org.jooq.impl.SQLDataType.NUMERIC(19, 4), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.insurance_rules.api_version</code>.
     */
    public final TableField<InsuranceRulesRecord, String> API_VERSION = createField("api_version", org.jooq.impl.SQLDataType.VARCHAR(20), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.insurance_rules.bundle_enabled</code>.
     */
    public final TableField<InsuranceRulesRecord, Boolean> BUNDLE_ENABLED = createField("bundle_enabled", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.insurance_rules.excess_currency</code>.
     */
    public final TableField<InsuranceRulesRecord, String> EXCESS_CURRENCY = createField("excess_currency", org.jooq.impl.SQLDataType.VARCHAR(3), this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.insurance_rules</code> table reference
     */
    public InsuranceRules() {
        this(DSL.name("insurance_rules"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.insurance_rules</code> table reference
     */
    public InsuranceRules(String alias) {
        this(DSL.name(alias), INSURANCE_RULES);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.insurance_rules</code> table reference
     */
    public InsuranceRules(Name alias) {
        this(alias, INSURANCE_RULES);
    }

    private InsuranceRules(Name alias, Table<InsuranceRulesRecord> aliased) {
        this(alias, aliased, null);
    }

    private InsuranceRules(Name alias, Table<InsuranceRulesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> InsuranceRules(Table<O> child, ForeignKey<O, InsuranceRulesRecord> key) {
        super(child, key, INSURANCE_RULES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.INSURANCE_RULES_PK__INSURANC__3213E83F3EF62693);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<InsuranceRulesRecord, Integer> getIdentity() {
        return Keys.IDENTITY_INSURANCE_RULES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<InsuranceRulesRecord> getPrimaryKey() {
        return Keys.PK__INSURANC__3213E83F3EF62693;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<InsuranceRulesRecord>> getKeys() {
        return Arrays.<UniqueKey<InsuranceRulesRecord>>asList(Keys.PK__INSURANC__3213E83F3EF62693);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InsuranceRules as(String alias) {
        return new InsuranceRules(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InsuranceRules as(Name alias) {
        return new InsuranceRules(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public InsuranceRules rename(String name) {
        return new InsuranceRules(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public InsuranceRules rename(Name name) {
        return new InsuranceRules(name, null);
    }
}
