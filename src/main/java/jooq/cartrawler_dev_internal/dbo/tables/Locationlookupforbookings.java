/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.tables.records.LocationlookupforbookingsRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Locationlookupforbookings extends TableImpl<LocationlookupforbookingsRecord> {

    private static final long serialVersionUID = -1523968972;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.locationLookupForBookings</code>
     */
    public static final Locationlookupforbookings LOCATIONLOOKUPFORBOOKINGS = new Locationlookupforbookings();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<LocationlookupforbookingsRecord> getRecordType() {
        return LocationlookupforbookingsRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.locationLookupForBookings.car_agent_location_id</code>.
     */
    public final TableField<LocationlookupforbookingsRecord, Integer> CAR_AGENT_LOCATION_ID = createField("car_agent_location_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.locationLookupForBookings.pickup</code>.
     */
    public final TableField<LocationlookupforbookingsRecord, String> PICKUP = createField("pickup", org.jooq.impl.SQLDataType.VARCHAR(400), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.locationLookupForBookings.country_id</code>.
     */
    public final TableField<LocationlookupforbookingsRecord, String> COUNTRY_ID = createField("country_id", org.jooq.impl.SQLDataType.VARCHAR(2), this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.locationLookupForBookings</code> table reference
     */
    public Locationlookupforbookings() {
        this(DSL.name("locationLookupForBookings"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.locationLookupForBookings</code> table reference
     */
    public Locationlookupforbookings(String alias) {
        this(DSL.name(alias), LOCATIONLOOKUPFORBOOKINGS);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.locationLookupForBookings</code> table reference
     */
    public Locationlookupforbookings(Name alias) {
        this(alias, LOCATIONLOOKUPFORBOOKINGS);
    }

    private Locationlookupforbookings(Name alias, Table<LocationlookupforbookingsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Locationlookupforbookings(Name alias, Table<LocationlookupforbookingsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Locationlookupforbookings(Table<O> child, ForeignKey<O, LocationlookupforbookingsRecord> key) {
        super(child, key, LOCATIONLOOKUPFORBOOKINGS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Locationlookupforbookings as(String alias) {
        return new Locationlookupforbookings(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Locationlookupforbookings as(Name alias) {
        return new Locationlookupforbookings(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Locationlookupforbookings rename(String name) {
        return new Locationlookupforbookings(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Locationlookupforbookings rename(Name name) {
        return new Locationlookupforbookings(name, null);
    }
}
