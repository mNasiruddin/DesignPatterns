/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.VirtuallocationsRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Virtuallocations extends TableImpl<VirtuallocationsRecord> {

    private static final long serialVersionUID = 1822739718;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.VirtualLocations</code>
     */
    public static final Virtuallocations VIRTUALLOCATIONS = new Virtuallocations();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VirtuallocationsRecord> getRecordType() {
        return VirtuallocationsRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.VirtualLocations.ID</code>.
     */
    public final TableField<VirtuallocationsRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.VirtualLocations.name</code>.
     */
    public final TableField<VirtuallocationsRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.VirtualLocations.displayOnEngine</code>.
     */
    public final TableField<VirtuallocationsRecord, Boolean> DISPLAYONENGINE = createField("displayOnEngine", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.VirtualLocations.countryCodeForEngine</code>.
     */
    public final TableField<VirtuallocationsRecord, String> COUNTRYCODEFORENGINE = createField("countryCodeForEngine", org.jooq.impl.SQLDataType.CHAR(2), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.VirtualLocations.relatedCountry</code>.
     */
    public final TableField<VirtuallocationsRecord, String> RELATEDCOUNTRY = createField("relatedCountry", org.jooq.impl.SQLDataType.CHAR(2), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.VirtualLocations.fk_user</code>.
     */
    public final TableField<VirtuallocationsRecord, Integer> FK_USER = createField("fk_user", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.VirtualLocations.fk_org</code>.
     */
    public final TableField<VirtuallocationsRecord, Integer> FK_ORG = createField("fk_org", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.VirtualLocations.amendedBy</code>.
     */
    public final TableField<VirtuallocationsRecord, Integer> AMENDEDBY = createField("amendedBy", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.VirtualLocations.negativeList</code>.
     */
    public final TableField<VirtuallocationsRecord, Boolean> NEGATIVELIST = createField("negativeList", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.VirtualLocations.writeProtectedByUser</code>.
     */
    public final TableField<VirtuallocationsRecord, Integer> WRITEPROTECTEDBYUSER = createField("writeProtectedByUser", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.VirtualLocations</code> table reference
     */
    public Virtuallocations() {
        this(DSL.name("VirtualLocations"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.VirtualLocations</code> table reference
     */
    public Virtuallocations(String alias) {
        this(DSL.name(alias), VIRTUALLOCATIONS);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.VirtualLocations</code> table reference
     */
    public Virtuallocations(Name alias) {
        this(alias, VIRTUALLOCATIONS);
    }

    private Virtuallocations(Name alias, Table<VirtuallocationsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Virtuallocations(Name alias, Table<VirtuallocationsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Virtuallocations(Table<O> child, ForeignKey<O, VirtuallocationsRecord> key) {
        super(child, key, VIRTUALLOCATIONS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.VIRTUALLOCATIONS_PK_VIRTUALLOCATIONS_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<VirtuallocationsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_VIRTUALLOCATIONS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<VirtuallocationsRecord> getPrimaryKey() {
        return Keys.PK_VIRTUALLOCATIONS_1;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<VirtuallocationsRecord>> getKeys() {
        return Arrays.<UniqueKey<VirtuallocationsRecord>>asList(Keys.PK_VIRTUALLOCATIONS_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Virtuallocations as(String alias) {
        return new Virtuallocations(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Virtuallocations as(Name alias) {
        return new Virtuallocations(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Virtuallocations rename(String name) {
        return new Virtuallocations(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Virtuallocations rename(Name name) {
        return new Virtuallocations(name, null);
    }
}
