/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.DevicetokenRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Devicetoken extends TableImpl<DevicetokenRecord> {

    private static final long serialVersionUID = 480950871;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.DeviceToken</code>
     */
    public static final Devicetoken DEVICETOKEN = new Devicetoken();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DevicetokenRecord> getRecordType() {
        return DevicetokenRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.DeviceToken.guid</code>.
     */
    public final TableField<DevicetokenRecord, UUID> GUID = createField("guid", org.jooq.impl.SQLDataType.UUID.nullable(false).defaultValue(org.jooq.impl.DSL.field("(newid())", org.jooq.impl.SQLDataType.UUID)), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.DeviceToken.ref_device</code>.
     */
    public final TableField<DevicetokenRecord, Integer> REF_DEVICE = createField("ref_device", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.DeviceToken.token</code>.
     */
    public final TableField<DevicetokenRecord, String> TOKEN = createField("token", org.jooq.impl.SQLDataType.VARCHAR(120).nullable(false), this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.DeviceToken</code> table reference
     */
    public Devicetoken() {
        this(DSL.name("DeviceToken"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.DeviceToken</code> table reference
     */
    public Devicetoken(String alias) {
        this(DSL.name(alias), DEVICETOKEN);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.DeviceToken</code> table reference
     */
    public Devicetoken(Name alias) {
        this(alias, DEVICETOKEN);
    }

    private Devicetoken(Name alias, Table<DevicetokenRecord> aliased) {
        this(alias, aliased, null);
    }

    private Devicetoken(Name alias, Table<DevicetokenRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Devicetoken(Table<O> child, ForeignKey<O, DevicetokenRecord> key) {
        super(child, key, DEVICETOKEN);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.DEVICETOKEN_PK_DEVICETOKEN_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DevicetokenRecord> getPrimaryKey() {
        return Keys.PK_DEVICETOKEN_1;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DevicetokenRecord>> getKeys() {
        return Arrays.<UniqueKey<DevicetokenRecord>>asList(Keys.PK_DEVICETOKEN_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Devicetoken as(String alias) {
        return new Devicetoken(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Devicetoken as(Name alias) {
        return new Devicetoken(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Devicetoken rename(String name) {
        return new Devicetoken(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Devicetoken rename(Name name) {
        return new Devicetoken(name, null);
    }
}
