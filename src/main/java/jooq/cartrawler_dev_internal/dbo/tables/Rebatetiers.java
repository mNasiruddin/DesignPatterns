/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.RebatetiersRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Rebatetiers extends TableImpl<RebatetiersRecord> {

    private static final long serialVersionUID = -2019214540;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.rebateTiers</code>
     */
    public static final Rebatetiers REBATETIERS = new Rebatetiers();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RebatetiersRecord> getRecordType() {
        return RebatetiersRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.rebateTiers.guid</code>.
     */
    public final TableField<RebatetiersRecord, UUID> GUID = createField("guid", org.jooq.impl.SQLDataType.UUID.nullable(false).defaultValue(org.jooq.impl.DSL.field("(newid())", org.jooq.impl.SQLDataType.UUID)), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.rebateTiers.id</code>.
     */
    public final TableField<RebatetiersRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.rebateTiers.fk_rebate</code>.
     */
    public final TableField<RebatetiersRecord, Integer> FK_REBATE = createField("fk_rebate", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.rebateTiers.daysFrom</code>.
     */
    public final TableField<RebatetiersRecord, Integer> DAYSFROM = createField("daysFrom", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.rebateTiers.daysTo</code>.
     */
    public final TableField<RebatetiersRecord, Integer> DAYSTO = createField("daysTo", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.rebateTiers.bookingsFrom</code>.
     */
    public final TableField<RebatetiersRecord, Integer> BOOKINGSFROM = createField("bookingsFrom", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.rebateTiers.bookingsTo</code>.
     */
    public final TableField<RebatetiersRecord, Integer> BOOKINGSTO = createField("bookingsTo", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.rebateTiers.revenueTargetFrom</code>.
     */
    public final TableField<RebatetiersRecord, BigDecimal> REVENUETARGETFROM = createField("revenueTargetFrom", org.jooq.impl.SQLDataType.NUMERIC(19, 4), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.rebateTiers.revenueTargetTo</code>.
     */
    public final TableField<RebatetiersRecord, BigDecimal> REVENUETARGETTO = createField("revenueTargetTo", org.jooq.impl.SQLDataType.NUMERIC(19, 4), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.rebateTiers.revenueTargetCurrency</code>.
     */
    public final TableField<RebatetiersRecord, String> REVENUETARGETCURRENCY = createField("revenueTargetCurrency", org.jooq.impl.SQLDataType.CHAR(3), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.rebateTiers.rebateAmount</code>.
     */
    public final TableField<RebatetiersRecord, BigDecimal> REBATEAMOUNT = createField("rebateAmount", org.jooq.impl.SQLDataType.NUMERIC(19, 4), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.rebateTiers.rebateCurrency</code>.
     */
    public final TableField<RebatetiersRecord, String> REBATECURRENCY = createField("rebateCurrency", org.jooq.impl.SQLDataType.CHAR(3), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.rebateTiers.override</code>.
     */
    public final TableField<RebatetiersRecord, Boolean> OVERRIDE = createField("override", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.rebateTiers.rebatetype</code>.
     */
    public final TableField<RebatetiersRecord, String> REBATETYPE = createField("rebatetype", org.jooq.impl.SQLDataType.VARCHAR(32), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.rebateTiers.live</code>.
     */
    public final TableField<RebatetiersRecord, Boolean> LIVE = createField("live", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.rebateTiers</code> table reference
     */
    public Rebatetiers() {
        this(DSL.name("rebateTiers"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.rebateTiers</code> table reference
     */
    public Rebatetiers(String alias) {
        this(DSL.name(alias), REBATETIERS);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.rebateTiers</code> table reference
     */
    public Rebatetiers(Name alias) {
        this(alias, REBATETIERS);
    }

    private Rebatetiers(Name alias, Table<RebatetiersRecord> aliased) {
        this(alias, aliased, null);
    }

    private Rebatetiers(Name alias, Table<RebatetiersRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Rebatetiers(Table<O> child, ForeignKey<O, RebatetiersRecord> key) {
        super(child, key, REBATETIERS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.REBATETIERS_PK_REBATETIERS, Indexes.REBATETIERS_PK_REBATETIERS_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<RebatetiersRecord, Integer> getIdentity() {
        return Keys.IDENTITY_REBATETIERS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RebatetiersRecord> getPrimaryKey() {
        return Keys.PK_REBATETIERS_1;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RebatetiersRecord>> getKeys() {
        return Arrays.<UniqueKey<RebatetiersRecord>>asList(Keys.PK_REBATETIERS_1, Keys.PK_REBATETIERS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Rebatetiers as(String alias) {
        return new Rebatetiers(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Rebatetiers as(Name alias) {
        return new Rebatetiers(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Rebatetiers rename(String name) {
        return new Rebatetiers(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Rebatetiers rename(Name name) {
        return new Rebatetiers(name, null);
    }
}
