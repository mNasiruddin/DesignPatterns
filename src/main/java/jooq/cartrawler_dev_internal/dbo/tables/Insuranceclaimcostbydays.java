/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.InsuranceclaimcostbydaysRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Insuranceclaimcostbydays extends TableImpl<InsuranceclaimcostbydaysRecord> {

    private static final long serialVersionUID = -2087585169;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.insuranceClaimCostByDays</code>
     */
    public static final Insuranceclaimcostbydays INSURANCECLAIMCOSTBYDAYS = new Insuranceclaimcostbydays();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<InsuranceclaimcostbydaysRecord> getRecordType() {
        return InsuranceclaimcostbydaysRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.insuranceClaimCostByDays.id</code>.
     */
    public final TableField<InsuranceclaimcostbydaysRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.insuranceClaimCostByDays.carAgentId</code>.
     */
    public final TableField<InsuranceclaimcostbydaysRecord, Integer> CARAGENTID = createField("carAgentId", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.insuranceClaimCostByDays.countryId</code>.
     */
    public final TableField<InsuranceclaimcostbydaysRecord, String> COUNTRYID = createField("countryId", org.jooq.impl.SQLDataType.VARCHAR(2), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.insuranceClaimCostByDays.isPeak</code>.
     */
    public final TableField<InsuranceclaimcostbydaysRecord, Integer> ISPEAK = createField("isPeak", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.insuranceClaimCostByDays.avgRentalDays</code>.
     */
    public final TableField<InsuranceclaimcostbydaysRecord, BigDecimal> AVGRENTALDAYS = createField("avgRentalDays", org.jooq.impl.SQLDataType.NUMERIC(19, 8).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.insuranceClaimCostByDays.cost</code>.
     */
    public final TableField<InsuranceclaimcostbydaysRecord, BigDecimal> COST = createField("cost", org.jooq.impl.SQLDataType.NUMERIC(19, 8).nullable(false), this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.insuranceClaimCostByDays</code> table reference
     */
    public Insuranceclaimcostbydays() {
        this(DSL.name("insuranceClaimCostByDays"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.insuranceClaimCostByDays</code> table reference
     */
    public Insuranceclaimcostbydays(String alias) {
        this(DSL.name(alias), INSURANCECLAIMCOSTBYDAYS);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.insuranceClaimCostByDays</code> table reference
     */
    public Insuranceclaimcostbydays(Name alias) {
        this(alias, INSURANCECLAIMCOSTBYDAYS);
    }

    private Insuranceclaimcostbydays(Name alias, Table<InsuranceclaimcostbydaysRecord> aliased) {
        this(alias, aliased, null);
    }

    private Insuranceclaimcostbydays(Name alias, Table<InsuranceclaimcostbydaysRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Insuranceclaimcostbydays(Table<O> child, ForeignKey<O, InsuranceclaimcostbydaysRecord> key) {
        super(child, key, INSURANCECLAIMCOSTBYDAYS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.INSURANCECLAIMCOSTBYDAYS_PK__INSURANC__3213E83F1B42D602);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<InsuranceclaimcostbydaysRecord, Integer> getIdentity() {
        return Keys.IDENTITY_INSURANCECLAIMCOSTBYDAYS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<InsuranceclaimcostbydaysRecord> getPrimaryKey() {
        return Keys.PK__INSURANC__3213E83F1B42D602;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<InsuranceclaimcostbydaysRecord>> getKeys() {
        return Arrays.<UniqueKey<InsuranceclaimcostbydaysRecord>>asList(Keys.PK__INSURANC__3213E83F1B42D602);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Insuranceclaimcostbydays as(String alias) {
        return new Insuranceclaimcostbydays(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Insuranceclaimcostbydays as(Name alias) {
        return new Insuranceclaimcostbydays(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Insuranceclaimcostbydays rename(String name) {
        return new Insuranceclaimcostbydays(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Insuranceclaimcostbydays rename(Name name) {
        return new Insuranceclaimcostbydays(name, null);
    }
}
