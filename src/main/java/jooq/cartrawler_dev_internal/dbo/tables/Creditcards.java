/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.CreditcardsRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Creditcards extends TableImpl<CreditcardsRecord> {

    private static final long serialVersionUID = -323484464;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.CreditCards</code>
     */
    public static final Creditcards CREDITCARDS = new Creditcards();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CreditcardsRecord> getRecordType() {
        return CreditcardsRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.CreditCards.Card_ID</code>.
     */
    public final TableField<CreditcardsRecord, Integer> CARD_ID = createField("Card_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.CreditCards.Card_Type</code>.
     */
    public final TableField<CreditcardsRecord, String> CARD_TYPE = createField("Card_Type", org.jooq.impl.SQLDataType.VARCHAR(20), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.CreditCards.Payandshop_Type</code>.
     */
    public final TableField<CreditcardsRecord, String> PAYANDSHOP_TYPE = createField("Payandshop_Type", org.jooq.impl.SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.CreditCards.currency_id</code>.
     */
    public final TableField<CreditcardsRecord, String> CURRENCY_ID = createField("currency_id", org.jooq.impl.SQLDataType.VARCHAR(3), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.CreditCards.ota_cardcode</code>.
     */
    public final TableField<CreditcardsRecord, String> OTA_CARDCODE = createField("ota_cardcode", org.jooq.impl.SQLDataType.VARCHAR(3), this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.CreditCards</code> table reference
     */
    public Creditcards() {
        this(DSL.name("CreditCards"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.CreditCards</code> table reference
     */
    public Creditcards(String alias) {
        this(DSL.name(alias), CREDITCARDS);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.CreditCards</code> table reference
     */
    public Creditcards(Name alias) {
        this(alias, CREDITCARDS);
    }

    private Creditcards(Name alias, Table<CreditcardsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Creditcards(Name alias, Table<CreditcardsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Creditcards(Table<O> child, ForeignKey<O, CreditcardsRecord> key) {
        super(child, key, CREDITCARDS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CREDITCARDS_CREDITCARDS_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CreditcardsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CREDITCARDS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CreditcardsRecord> getPrimaryKey() {
        return Keys.CREDITCARDS_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CreditcardsRecord>> getKeys() {
        return Arrays.<UniqueKey<CreditcardsRecord>>asList(Keys.CREDITCARDS_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Creditcards as(String alias) {
        return new Creditcards(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Creditcards as(Name alias) {
        return new Creditcards(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Creditcards rename(String name) {
        return new Creditcards(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Creditcards rename(Name name) {
        return new Creditcards(name, null);
    }
}
