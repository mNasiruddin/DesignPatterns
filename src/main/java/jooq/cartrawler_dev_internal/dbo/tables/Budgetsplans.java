/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.BudgetsplansRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Budgetsplans extends TableImpl<BudgetsplansRecord> {

    private static final long serialVersionUID = 1125803612;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.BudgetsPlans</code>
     */
    public static final Budgetsplans BUDGETSPLANS = new Budgetsplans();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BudgetsplansRecord> getRecordType() {
        return BudgetsplansRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.BudgetsPlans.guid</code>.
     */
    public final TableField<BudgetsplansRecord, UUID> GUID = createField("guid", org.jooq.impl.SQLDataType.UUID.nullable(false).defaultValue(org.jooq.impl.DSL.field("(newid())", org.jooq.impl.SQLDataType.UUID)), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.BudgetsPlans.id</code>.
     */
    public final TableField<BudgetsplansRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.BudgetsPlans.fk_Budgets</code>.
     */
    public final TableField<BudgetsplansRecord, Integer> FK_BUDGETS = createField("fk_Budgets", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.BudgetsPlans.fk_Plans</code>.
     */
    public final TableField<BudgetsplansRecord, Integer> FK_PLANS = createField("fk_Plans", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.BudgetsPlans.negativeFilter</code>.
     */
    public final TableField<BudgetsplansRecord, Boolean> NEGATIVEFILTER = createField("negativeFilter", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.BudgetsPlans</code> table reference
     */
    public Budgetsplans() {
        this(DSL.name("BudgetsPlans"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.BudgetsPlans</code> table reference
     */
    public Budgetsplans(String alias) {
        this(DSL.name(alias), BUDGETSPLANS);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.BudgetsPlans</code> table reference
     */
    public Budgetsplans(Name alias) {
        this(alias, BUDGETSPLANS);
    }

    private Budgetsplans(Name alias, Table<BudgetsplansRecord> aliased) {
        this(alias, aliased, null);
    }

    private Budgetsplans(Name alias, Table<BudgetsplansRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Budgetsplans(Table<O> child, ForeignKey<O, BudgetsplansRecord> key) {
        super(child, key, BUDGETSPLANS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.BUDGETSPLANS_PK_BUDGETSPLANS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<BudgetsplansRecord, Integer> getIdentity() {
        return Keys.IDENTITY_BUDGETSPLANS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<BudgetsplansRecord> getPrimaryKey() {
        return Keys.PK_BUDGETSPLANS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<BudgetsplansRecord>> getKeys() {
        return Arrays.<UniqueKey<BudgetsplansRecord>>asList(Keys.PK_BUDGETSPLANS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Budgetsplans as(String alias) {
        return new Budgetsplans(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Budgetsplans as(Name alias) {
        return new Budgetsplans(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Budgetsplans rename(String name) {
        return new Budgetsplans(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Budgetsplans rename(Name name) {
        return new Budgetsplans(name, null);
    }
}
