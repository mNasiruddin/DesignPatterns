/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.EmailrulelanguagesRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Emailrulelanguages extends TableImpl<EmailrulelanguagesRecord> {

    private static final long serialVersionUID = -1833594365;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.EmailRuleLanguages</code>
     */
    public static final Emailrulelanguages EMAILRULELANGUAGES = new Emailrulelanguages();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EmailrulelanguagesRecord> getRecordType() {
        return EmailrulelanguagesRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.EmailRuleLanguages.id</code>.
     */
    public final TableField<EmailrulelanguagesRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.EmailRuleLanguages.fk_emailrule</code>.
     */
    public final TableField<EmailrulelanguagesRecord, Integer> FK_EMAILRULE = createField("fk_emailrule", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.EmailRuleLanguages.language_code</code>.
     */
    public final TableField<EmailrulelanguagesRecord, String> LANGUAGE_CODE = createField("language_code", org.jooq.impl.SQLDataType.CHAR(5).nullable(false), this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.EmailRuleLanguages</code> table reference
     */
    public Emailrulelanguages() {
        this(DSL.name("EmailRuleLanguages"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.EmailRuleLanguages</code> table reference
     */
    public Emailrulelanguages(String alias) {
        this(DSL.name(alias), EMAILRULELANGUAGES);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.EmailRuleLanguages</code> table reference
     */
    public Emailrulelanguages(Name alias) {
        this(alias, EMAILRULELANGUAGES);
    }

    private Emailrulelanguages(Name alias, Table<EmailrulelanguagesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Emailrulelanguages(Name alias, Table<EmailrulelanguagesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Emailrulelanguages(Table<O> child, ForeignKey<O, EmailrulelanguagesRecord> key) {
        super(child, key, EMAILRULELANGUAGES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.EMAILRULELANGUAGES_PK_EMAILRULELANGUAGES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<EmailrulelanguagesRecord, Integer> getIdentity() {
        return Keys.IDENTITY_EMAILRULELANGUAGES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<EmailrulelanguagesRecord> getPrimaryKey() {
        return Keys.PK_EMAILRULELANGUAGES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<EmailrulelanguagesRecord>> getKeys() {
        return Arrays.<UniqueKey<EmailrulelanguagesRecord>>asList(Keys.PK_EMAILRULELANGUAGES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Emailrulelanguages as(String alias) {
        return new Emailrulelanguages(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Emailrulelanguages as(Name alias) {
        return new Emailrulelanguages(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Emailrulelanguages rename(String name) {
        return new Emailrulelanguages(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Emailrulelanguages rename(Name name) {
        return new Emailrulelanguages(name, null);
    }
}
