/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.BankholidaysRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Bankholidays extends TableImpl<BankholidaysRecord> {

    private static final long serialVersionUID = -1670445599;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.BankHolidays</code>
     */
    public static final Bankholidays BANKHOLIDAYS = new Bankholidays();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BankholidaysRecord> getRecordType() {
        return BankholidaysRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.BankHolidays.BankHolidayID</code>.
     */
    public final TableField<BankholidaysRecord, Integer> BANKHOLIDAYID = createField("BankHolidayID", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.BankHolidays.Country_ID</code>.
     */
    public final TableField<BankholidaysRecord, String> COUNTRY_ID = createField("Country_ID", org.jooq.impl.SQLDataType.VARCHAR(2), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.BankHolidays.BankHolidayName</code>.
     */
    public final TableField<BankholidaysRecord, String> BANKHOLIDAYNAME = createField("BankHolidayName", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.BankHolidays.BankHolidayDisplayStartDate</code>.
     */
    public final TableField<BankholidaysRecord, Timestamp> BANKHOLIDAYDISPLAYSTARTDATE = createField("BankHolidayDisplayStartDate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.BankHolidays.BankHolidayDisplayStopDate</code>.
     */
    public final TableField<BankholidaysRecord, Timestamp> BANKHOLIDAYDISPLAYSTOPDATE = createField("BankHolidayDisplayStopDate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.BankHolidays.BankHolidayDesc</code>.
     */
    public final TableField<BankholidaysRecord, String> BANKHOLIDAYDESC = createField("BankHolidayDesc", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.BankHolidays</code> table reference
     */
    public Bankholidays() {
        this(DSL.name("BankHolidays"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.BankHolidays</code> table reference
     */
    public Bankholidays(String alias) {
        this(DSL.name(alias), BANKHOLIDAYS);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.BankHolidays</code> table reference
     */
    public Bankholidays(Name alias) {
        this(alias, BANKHOLIDAYS);
    }

    private Bankholidays(Name alias, Table<BankholidaysRecord> aliased) {
        this(alias, aliased, null);
    }

    private Bankholidays(Name alias, Table<BankholidaysRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Bankholidays(Table<O> child, ForeignKey<O, BankholidaysRecord> key) {
        super(child, key, BANKHOLIDAYS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.BANKHOLIDAYS_PK_BANKHOLIDAYS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<BankholidaysRecord, Integer> getIdentity() {
        return Keys.IDENTITY_BANKHOLIDAYS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<BankholidaysRecord> getPrimaryKey() {
        return Keys.PK_BANKHOLIDAYS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<BankholidaysRecord>> getKeys() {
        return Arrays.<UniqueKey<BankholidaysRecord>>asList(Keys.PK_BANKHOLIDAYS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Bankholidays as(String alias) {
        return new Bankholidays(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Bankholidays as(Name alias) {
        return new Bankholidays(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Bankholidays rename(String name) {
        return new Bankholidays(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Bankholidays rename(Name name) {
        return new Bankholidays(name, null);
    }
}
