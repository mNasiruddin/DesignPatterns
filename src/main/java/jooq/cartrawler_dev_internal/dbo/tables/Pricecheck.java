/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.math.BigDecimal;
import java.sql.Timestamp;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.PricecheckRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Pricecheck extends TableImpl<PricecheckRecord> {

    private static final long serialVersionUID = -1296032241;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.PriceCheck</code>
     */
    public static final Pricecheck PRICECHECK = new Pricecheck();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PricecheckRecord> getRecordType() {
        return PricecheckRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.PriceCheck.id</code>.
     */
    public final TableField<PricecheckRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.PriceCheck.fk_reservation</code>.
     */
    public final TableField<PricecheckRecord, Integer> FK_RESERVATION = createField("fk_reservation", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.PriceCheck.Reservation_ID</code>.
     */
    public final TableField<PricecheckRecord, String> RESERVATION_ID = createField("Reservation_ID", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.PriceCheck.ref_id</code>.
     */
    public final TableField<PricecheckRecord, String> REF_ID = createField("ref_id", org.jooq.impl.SQLDataType.VARCHAR(10).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.PriceCheck.check_date</code>.
     */
    public final TableField<PricecheckRecord, Timestamp> CHECK_DATE = createField("check_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.PriceCheck.rebooked_date</code>.
     */
    public final TableField<PricecheckRecord, Timestamp> REBOOKED_DATE = createField("rebooked_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.PriceCheck.rental_agent_id</code>.
     */
    public final TableField<PricecheckRecord, Integer> RENTAL_AGENT_ID = createField("rental_agent_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.PriceCheck.resGroupCode</code>.
     */
    public final TableField<PricecheckRecord, String> RESGROUPCODE = createField("resGroupCode", org.jooq.impl.SQLDataType.CHAR(4).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.PriceCheck.sampleCarId</code>.
     */
    public final TableField<PricecheckRecord, Integer> SAMPLECARID = createField("sampleCarId", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.PriceCheck.currency</code>.
     */
    public final TableField<PricecheckRecord, String> CURRENCY = createField("currency", org.jooq.impl.SQLDataType.VARCHAR(3).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.PriceCheck.reservation_cost</code>.
     */
    public final TableField<PricecheckRecord, BigDecimal> RESERVATION_COST = createField("reservation_cost", org.jooq.impl.SQLDataType.NUMERIC(12, 4).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.PriceCheck.avail_cost</code>.
     */
    public final TableField<PricecheckRecord, BigDecimal> AVAIL_COST = createField("avail_cost", org.jooq.impl.SQLDataType.NUMERIC(12, 4).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.PriceCheck.total_diff</code>.
     */
    public final TableField<PricecheckRecord, BigDecimal> TOTAL_DIFF = createField("total_diff", org.jooq.impl.SQLDataType.NUMERIC(12, 4).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.PriceCheck.rate_currency</code>.
     */
    public final TableField<PricecheckRecord, String> RATE_CURRENCY = createField("rate_currency", org.jooq.impl.SQLDataType.VARCHAR(3).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.PriceCheck.reservation_base_cost</code>.
     */
    public final TableField<PricecheckRecord, BigDecimal> RESERVATION_BASE_COST = createField("reservation_base_cost", org.jooq.impl.SQLDataType.NUMERIC(12, 4).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.PriceCheck.avail_base_cost</code>.
     */
    public final TableField<PricecheckRecord, BigDecimal> AVAIL_BASE_COST = createField("avail_base_cost", org.jooq.impl.SQLDataType.NUMERIC(12, 4), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.PriceCheck.baserate_diff</code>.
     */
    public final TableField<PricecheckRecord, BigDecimal> BASERATE_DIFF = createField("baserate_diff", org.jooq.impl.SQLDataType.NUMERIC(12, 4).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.PriceCheck.reason</code>.
     */
    public final TableField<PricecheckRecord, String> REASON = createField("reason", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.PriceCheck.charge_currency</code>.
     */
    public final TableField<PricecheckRecord, String> CHARGE_CURRENCY = createField("charge_currency", org.jooq.impl.SQLDataType.VARCHAR(3), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.PriceCheck.charge_difference</code>.
     */
    public final TableField<PricecheckRecord, BigDecimal> CHARGE_DIFFERENCE = createField("charge_difference", org.jooq.impl.SQLDataType.NUMERIC(12, 4), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.PriceCheck.eur_cost_difference</code>.
     */
    public final TableField<PricecheckRecord, BigDecimal> EUR_COST_DIFFERENCE = createField("eur_cost_difference", org.jooq.impl.SQLDataType.NUMERIC(12, 4), this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.PriceCheck</code> table reference
     */
    public Pricecheck() {
        this(DSL.name("PriceCheck"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.PriceCheck</code> table reference
     */
    public Pricecheck(String alias) {
        this(DSL.name(alias), PRICECHECK);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.PriceCheck</code> table reference
     */
    public Pricecheck(Name alias) {
        this(alias, PRICECHECK);
    }

    private Pricecheck(Name alias, Table<PricecheckRecord> aliased) {
        this(alias, aliased, null);
    }

    private Pricecheck(Name alias, Table<PricecheckRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Pricecheck(Table<O> child, ForeignKey<O, PricecheckRecord> key) {
        super(child, key, PRICECHECK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<PricecheckRecord, Integer> getIdentity() {
        return Keys.IDENTITY_PRICECHECK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Pricecheck as(String alias) {
        return new Pricecheck(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Pricecheck as(Name alias) {
        return new Pricecheck(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Pricecheck rename(String name) {
        return new Pricecheck(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Pricecheck rename(Name name) {
        return new Pricecheck(name, null);
    }
}
