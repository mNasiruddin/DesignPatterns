/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.ReshistoryRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Reshistory extends TableImpl<ReshistoryRecord> {

    private static final long serialVersionUID = -549434465;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.resHistory</code>
     */
    public static final Reshistory RESHISTORY = new Reshistory();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ReshistoryRecord> getRecordType() {
        return ReshistoryRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.resHistory.id</code>.
     */
    public final TableField<ReshistoryRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.resHistory.fk_reservation</code>.
     */
    public final TableField<ReshistoryRecord, Integer> FK_RESERVATION = createField("fk_reservation", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.resHistory.updateDate</code>.
     */
    public final TableField<ReshistoryRecord, Timestamp> UPDATEDATE = createField("updateDate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("(getdate())", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.resHistory.complete</code>.
     */
    public final TableField<ReshistoryRecord, Boolean> COMPLETE = createField("complete", org.jooq.impl.SQLDataType.BIT.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.resHistory.reservation_status</code>.
     */
    public final TableField<ReshistoryRecord, String> RESERVATION_STATUS = createField("reservation_status", org.jooq.impl.SQLDataType.CHAR(1).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.resHistory.eventType</code>.
     */
    public final TableField<ReshistoryRecord, Short> EVENTTYPE = createField("eventType", org.jooq.impl.SQLDataType.SMALLINT.defaultValue(org.jooq.impl.DSL.field("((0))", org.jooq.impl.SQLDataType.SMALLINT)), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.resHistory.ins_cancelled</code>.
     */
    public final TableField<ReshistoryRecord, Short> INS_CANCELLED = createField("ins_cancelled", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.resHistory</code> table reference
     */
    public Reshistory() {
        this(DSL.name("resHistory"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.resHistory</code> table reference
     */
    public Reshistory(String alias) {
        this(DSL.name(alias), RESHISTORY);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.resHistory</code> table reference
     */
    public Reshistory(Name alias) {
        this(alias, RESHISTORY);
    }

    private Reshistory(Name alias, Table<ReshistoryRecord> aliased) {
        this(alias, aliased, null);
    }

    private Reshistory(Name alias, Table<ReshistoryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Reshistory(Table<O> child, ForeignKey<O, ReshistoryRecord> key) {
        super(child, key, RESHISTORY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.RESHISTORY_PK__RESHISTO__3213E83F0F670F02);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ReshistoryRecord, Integer> getIdentity() {
        return Keys.IDENTITY_RESHISTORY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ReshistoryRecord> getPrimaryKey() {
        return Keys.PK__RESHISTO__3213E83F0F670F02;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ReshistoryRecord>> getKeys() {
        return Arrays.<UniqueKey<ReshistoryRecord>>asList(Keys.PK__RESHISTO__3213E83F0F670F02);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Reshistory as(String alias) {
        return new Reshistory(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Reshistory as(Name alias) {
        return new Reshistory(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Reshistory rename(String name) {
        return new Reshistory(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Reshistory rename(Name name) {
        return new Reshistory(name, null);
    }
}
