/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.IpvxtocountryRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Ipvxtocountry extends TableImpl<IpvxtocountryRecord> {

    private static final long serialVersionUID = 1937285117;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.ipvxtocountry</code>
     */
    public static final Ipvxtocountry IPVXTOCOUNTRY = new Ipvxtocountry();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<IpvxtocountryRecord> getRecordType() {
        return IpvxtocountryRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.ipvxtocountry.guid</code>.
     */
    public final TableField<IpvxtocountryRecord, UUID> GUID = createField("guid", org.jooq.impl.SQLDataType.UUID.nullable(false).defaultValue(org.jooq.impl.DSL.field("(newid())", org.jooq.impl.SQLDataType.UUID)), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.ipvxtocountry.ipfrom</code>.
     */
    public final TableField<IpvxtocountryRecord, byte[]> IPFROM = createField("ipfrom", org.jooq.impl.SQLDataType.BINARY(16).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.ipvxtocountry.ipto</code>.
     */
    public final TableField<IpvxtocountryRecord, byte[]> IPTO = createField("ipto", org.jooq.impl.SQLDataType.BINARY(16).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.ipvxtocountry.country_id</code>.
     */
    public final TableField<IpvxtocountryRecord, String> COUNTRY_ID = createField("country_id", org.jooq.impl.SQLDataType.VARCHAR(2), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.ipvxtocountry.ipv4from</code>.
     */
    public final TableField<IpvxtocountryRecord, Integer> IPV4FROM = createField("ipv4from", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.ipvxtocountry.ipv4to</code>.
     */
    public final TableField<IpvxtocountryRecord, Integer> IPV4TO = createField("ipv4to", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.ipvxtocountry.asn</code>.
     */
    public final TableField<IpvxtocountryRecord, String> ASN = createField("asn", org.jooq.impl.SQLDataType.VARCHAR(20), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.ipvxtocountry.asn_owner</code>.
     */
    public final TableField<IpvxtocountryRecord, String> ASN_OWNER = createField("asn_owner", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.ipvxtocountry</code> table reference
     */
    public Ipvxtocountry() {
        this(DSL.name("ipvxtocountry"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.ipvxtocountry</code> table reference
     */
    public Ipvxtocountry(String alias) {
        this(DSL.name(alias), IPVXTOCOUNTRY);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.ipvxtocountry</code> table reference
     */
    public Ipvxtocountry(Name alias) {
        this(alias, IPVXTOCOUNTRY);
    }

    private Ipvxtocountry(Name alias, Table<IpvxtocountryRecord> aliased) {
        this(alias, aliased, null);
    }

    private Ipvxtocountry(Name alias, Table<IpvxtocountryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Ipvxtocountry(Table<O> child, ForeignKey<O, IpvxtocountryRecord> key) {
        super(child, key, IPVXTOCOUNTRY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.IPVXTOCOUNTRY_PK_IPVXTOCOUNTRY, Indexes.IPVXTOCOUNTRY_PK_IPVXTOCOUNTRY_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<IpvxtocountryRecord> getPrimaryKey() {
        return Keys.PK_IPVXTOCOUNTRY_1;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<IpvxtocountryRecord>> getKeys() {
        return Arrays.<UniqueKey<IpvxtocountryRecord>>asList(Keys.PK_IPVXTOCOUNTRY_1, Keys.PK_IPVXTOCOUNTRY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Ipvxtocountry as(String alias) {
        return new Ipvxtocountry(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Ipvxtocountry as(Name alias) {
        return new Ipvxtocountry(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Ipvxtocountry rename(String name) {
        return new Ipvxtocountry(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Ipvxtocountry rename(Name name) {
        return new Ipvxtocountry(name, null);
    }
}
