/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.AbeVersionRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AbeVersion extends TableImpl<AbeVersionRecord> {

    private static final long serialVersionUID = -821445051;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.abe_version</code>
     */
    public static final AbeVersion ABE_VERSION = new AbeVersion();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AbeVersionRecord> getRecordType() {
        return AbeVersionRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.abe_version.id</code>.
     */
    public final TableField<AbeVersionRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.abe_version.version</code>.
     */
    public final TableField<AbeVersionRecord, String> VERSION = createField("version", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.abe_version.publish_date</code>.
     */
    public final TableField<AbeVersionRecord, Date> PUBLISH_DATE = createField("publish_date", org.jooq.impl.SQLDataType.DATE.defaultValue(org.jooq.impl.DSL.field("(getdate())", org.jooq.impl.SQLDataType.DATE)), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.abe_version.live</code>.
     */
    public final TableField<AbeVersionRecord, Boolean> LIVE = createField("live", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.abe_version.engine_release</code>.
     */
    public final TableField<AbeVersionRecord, String> ENGINE_RELEASE = createField("engine_release", org.jooq.impl.SQLDataType.VARCHAR(32), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.abe_version.default</code>.
     */
    public final TableField<AbeVersionRecord, Boolean> DEFAULT = createField("default", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.abe_version.supplement</code>.
     */
    public final TableField<AbeVersionRecord, String> SUPPLEMENT = createField("supplement", org.jooq.impl.SQLDataType.VARCHAR(500), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.abe_version.loaded</code>.
     */
    public final TableField<AbeVersionRecord, Long> LOADED = createField("loaded", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.abe_version.fk_stream_id</code>.
     */
    public final TableField<AbeVersionRecord, Integer> FK_STREAM_ID = createField("fk_stream_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.abe_version.minor_version</code>.
     */
    public final TableField<AbeVersionRecord, String> MINOR_VERSION = createField("minor_version", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.abe_version</code> table reference
     */
    public AbeVersion() {
        this(DSL.name("abe_version"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.abe_version</code> table reference
     */
    public AbeVersion(String alias) {
        this(DSL.name(alias), ABE_VERSION);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.abe_version</code> table reference
     */
    public AbeVersion(Name alias) {
        this(alias, ABE_VERSION);
    }

    private AbeVersion(Name alias, Table<AbeVersionRecord> aliased) {
        this(alias, aliased, null);
    }

    private AbeVersion(Name alias, Table<AbeVersionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> AbeVersion(Table<O> child, ForeignKey<O, AbeVersionRecord> key) {
        super(child, key, ABE_VERSION);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ABE_VERSION_IDX_VERSION, Indexes.ABE_VERSION_PK_ABE_VERSION);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<AbeVersionRecord, Integer> getIdentity() {
        return Keys.IDENTITY_ABE_VERSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AbeVersionRecord> getPrimaryKey() {
        return Keys.PK_ABE_VERSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AbeVersionRecord>> getKeys() {
        return Arrays.<UniqueKey<AbeVersionRecord>>asList(Keys.PK_ABE_VERSION, Keys.IDX_VERSION);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AbeVersion as(String alias) {
        return new AbeVersion(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AbeVersion as(Name alias) {
        return new AbeVersion(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AbeVersion rename(String name) {
        return new AbeVersion(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AbeVersion rename(Name name) {
        return new AbeVersion(name, null);
    }
}
