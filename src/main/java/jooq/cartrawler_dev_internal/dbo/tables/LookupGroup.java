/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.LookupGroupRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LookupGroup extends TableImpl<LookupGroupRecord> {

    private static final long serialVersionUID = 2121175748;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.lookup_group</code>
     */
    public static final LookupGroup LOOKUP_GROUP = new LookupGroup();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<LookupGroupRecord> getRecordType() {
        return LookupGroupRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.lookup_group.source</code>.
     */
    public final TableField<LookupGroupRecord, String> SOURCE = createField("source", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.lookup_group.source_val</code>.
     */
    public final TableField<LookupGroupRecord, String> SOURCE_VAL = createField("source_val", org.jooq.impl.SQLDataType.VARCHAR(5).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.lookup_group.common_val</code>.
     */
    public final TableField<LookupGroupRecord, String> COMMON_VAL = createField("common_val", org.jooq.impl.SQLDataType.VARCHAR(5).nullable(false), this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.lookup_group</code> table reference
     */
    public LookupGroup() {
        this(DSL.name("lookup_group"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.lookup_group</code> table reference
     */
    public LookupGroup(String alias) {
        this(DSL.name(alias), LOOKUP_GROUP);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.lookup_group</code> table reference
     */
    public LookupGroup(Name alias) {
        this(alias, LOOKUP_GROUP);
    }

    private LookupGroup(Name alias, Table<LookupGroupRecord> aliased) {
        this(alias, aliased, null);
    }

    private LookupGroup(Name alias, Table<LookupGroupRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> LookupGroup(Table<O> child, ForeignKey<O, LookupGroupRecord> key) {
        super(child, key, LOOKUP_GROUP);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.LOOKUP_GROUP_PK_LOOKUP_GROUP);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<LookupGroupRecord> getPrimaryKey() {
        return Keys.PK_LOOKUP_GROUP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<LookupGroupRecord>> getKeys() {
        return Arrays.<UniqueKey<LookupGroupRecord>>asList(Keys.PK_LOOKUP_GROUP);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LookupGroup as(String alias) {
        return new LookupGroup(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LookupGroup as(Name alias) {
        return new LookupGroup(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public LookupGroup rename(String name) {
        return new LookupGroup(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public LookupGroup rename(Name name) {
        return new LookupGroup(name, null);
    }
}
