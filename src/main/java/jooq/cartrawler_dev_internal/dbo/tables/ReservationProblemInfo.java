/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.ReservationProblemInfoRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ReservationProblemInfo extends TableImpl<ReservationProblemInfoRecord> {

    private static final long serialVersionUID = -353110522;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.reservation_problem_info</code>
     */
    public static final ReservationProblemInfo RESERVATION_PROBLEM_INFO = new ReservationProblemInfo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ReservationProblemInfoRecord> getRecordType() {
        return ReservationProblemInfoRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.reservation_problem_info.id</code>.
     */
    public final TableField<ReservationProblemInfoRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.reservation_problem_info.fk_reservation</code>.
     */
    public final TableField<ReservationProblemInfoRecord, Integer> FK_RESERVATION = createField("fk_reservation", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.reservation_problem_info.fk_error</code>.
     */
    public final TableField<ReservationProblemInfoRecord, Integer> FK_ERROR = createField("fk_error", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.reservation_problem_info.timestamp</code>.
     */
    public final TableField<ReservationProblemInfoRecord, Timestamp> TIMESTAMP = createField("timestamp", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("(getdate())", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.reservation_problem_info.status</code>.
     */
    public final TableField<ReservationProblemInfoRecord, Integer> STATUS = createField("status", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.reservation_problem_info.resolved_date</code>.
     */
    public final TableField<ReservationProblemInfoRecord, Timestamp> RESOLVED_DATE = createField("resolved_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.reservation_problem_info.resolved_by</code>.
     */
    public final TableField<ReservationProblemInfoRecord, Integer> RESOLVED_BY = createField("resolved_by", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.reservation_problem_info</code> table reference
     */
    public ReservationProblemInfo() {
        this(DSL.name("reservation_problem_info"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.reservation_problem_info</code> table reference
     */
    public ReservationProblemInfo(String alias) {
        this(DSL.name(alias), RESERVATION_PROBLEM_INFO);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.reservation_problem_info</code> table reference
     */
    public ReservationProblemInfo(Name alias) {
        this(alias, RESERVATION_PROBLEM_INFO);
    }

    private ReservationProblemInfo(Name alias, Table<ReservationProblemInfoRecord> aliased) {
        this(alias, aliased, null);
    }

    private ReservationProblemInfo(Name alias, Table<ReservationProblemInfoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> ReservationProblemInfo(Table<O> child, ForeignKey<O, ReservationProblemInfoRecord> key) {
        super(child, key, RESERVATION_PROBLEM_INFO);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.RESERVATION_PROBLEM_INFO_PK_RESERVATION_PROBLEM_INFO);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ReservationProblemInfoRecord, Integer> getIdentity() {
        return Keys.IDENTITY_RESERVATION_PROBLEM_INFO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ReservationProblemInfoRecord> getPrimaryKey() {
        return Keys.PK_RESERVATION_PROBLEM_INFO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ReservationProblemInfoRecord>> getKeys() {
        return Arrays.<UniqueKey<ReservationProblemInfoRecord>>asList(Keys.PK_RESERVATION_PROBLEM_INFO);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReservationProblemInfo as(String alias) {
        return new ReservationProblemInfo(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReservationProblemInfo as(Name alias) {
        return new ReservationProblemInfo(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ReservationProblemInfo rename(String name) {
        return new ReservationProblemInfo(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ReservationProblemInfo rename(Name name) {
        return new ReservationProblemInfo(name, null);
    }
}
