/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.ErrorsTestRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ErrorsTest extends TableImpl<ErrorsTestRecord> {

    private static final long serialVersionUID = -343257700;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.errors_test</code>
     */
    public static final ErrorsTest ERRORS_TEST = new ErrorsTest();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ErrorsTestRecord> getRecordType() {
        return ErrorsTestRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.errors_test.id</code>.
     */
    public final TableField<ErrorsTestRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.errors_test.fk_reservation</code>.
     */
    public final TableField<ErrorsTestRecord, Integer> FK_RESERVATION = createField("fk_reservation", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.errors_test.type</code>.
     */
    public final TableField<ErrorsTestRecord, String> TYPE = createField("type", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.errors_test.code</code>.
     */
    public final TableField<ErrorsTestRecord, String> CODE = createField("code", org.jooq.impl.SQLDataType.VARCHAR(20), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.errors_test.message</code>.
     */
    public final TableField<ErrorsTestRecord, String> MESSAGE = createField("message", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.errors_test.timestamp</code>.
     */
    public final TableField<ErrorsTestRecord, Timestamp> TIMESTAMP = createField("timestamp", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("(getdate())", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.errors_test.action</code>.
     */
    public final TableField<ErrorsTestRecord, String> ACTION = createField("action", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.errors_test.client_id</code>.
     */
    public final TableField<ErrorsTestRecord, Integer> CLIENT_ID = createField("client_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.errors_test.ipaddress</code>.
     */
    public final TableField<ErrorsTestRecord, Integer> IPADDRESS = createField("ipaddress", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.errors_test.fk_clientTouchpoint</code>.
     */
    public final TableField<ErrorsTestRecord, Short> FK_CLIENTTOUCHPOINT = createField("fk_clientTouchpoint", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.errors_test.system_id</code>.
     */
    public final TableField<ErrorsTestRecord, String> SYSTEM_ID = createField("system_id", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.errors_test</code> table reference
     */
    public ErrorsTest() {
        this(DSL.name("errors_test"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.errors_test</code> table reference
     */
    public ErrorsTest(String alias) {
        this(DSL.name(alias), ERRORS_TEST);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.errors_test</code> table reference
     */
    public ErrorsTest(Name alias) {
        this(alias, ERRORS_TEST);
    }

    private ErrorsTest(Name alias, Table<ErrorsTestRecord> aliased) {
        this(alias, aliased, null);
    }

    private ErrorsTest(Name alias, Table<ErrorsTestRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> ErrorsTest(Table<O> child, ForeignKey<O, ErrorsTestRecord> key) {
        super(child, key, ERRORS_TEST);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ERRORS_TEST_PK_ERRORS_TEST);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ErrorsTestRecord, Integer> getIdentity() {
        return Keys.IDENTITY_ERRORS_TEST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ErrorsTestRecord> getPrimaryKey() {
        return Keys.PK_ERRORS_TEST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ErrorsTestRecord>> getKeys() {
        return Arrays.<UniqueKey<ErrorsTestRecord>>asList(Keys.PK_ERRORS_TEST);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ErrorsTest as(String alias) {
        return new ErrorsTest(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ErrorsTest as(Name alias) {
        return new ErrorsTest(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ErrorsTest rename(String name) {
        return new ErrorsTest(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ErrorsTest rename(Name name) {
        return new ErrorsTest(name, null);
    }
}
