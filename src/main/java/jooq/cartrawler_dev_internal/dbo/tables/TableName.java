/*
 * This file is generated by jOOQ.
 */
package jooq.cartrawler_dev_internal.dbo.tables;


import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import jooq.cartrawler_dev_internal.dbo.Dbo;
import jooq.cartrawler_dev_internal.dbo.Indexes;
import jooq.cartrawler_dev_internal.dbo.Keys;
import jooq.cartrawler_dev_internal.dbo.tables.records.TableNameRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TableName extends TableImpl<TableNameRecord> {

    private static final long serialVersionUID = 1608139997;

    /**
     * The reference instance of <code>Cartrawler_dev_internal.dbo.table_name</code>
     */
    public static final TableName TABLE_NAME = new TableName();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TableNameRecord> getRecordType() {
        return TableNameRecord.class;
    }

    /**
     * The column <code>Cartrawler_dev_internal.dbo.table_name.id</code>.
     */
    public final TableField<TableNameRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.table_name.fk_guid</code>.
     */
    public final TableField<TableNameRecord, UUID> FK_GUID = createField("fk_guid", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.table_name.excludedContracts</code>.
     */
    public final TableField<TableNameRecord, String> EXCLUDEDCONTRACTS = createField("excludedContracts", org.jooq.impl.SQLDataType.VARCHAR(8000).nullable(false), this, "");

    /**
     * The column <code>Cartrawler_dev_internal.dbo.table_name.type</code>.
     */
    public final TableField<TableNameRecord, String> TYPE = createField("type", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * Create a <code>Cartrawler_dev_internal.dbo.table_name</code> table reference
     */
    public TableName() {
        this(DSL.name("table_name"), null);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.table_name</code> table reference
     */
    public TableName(String alias) {
        this(DSL.name(alias), TABLE_NAME);
    }

    /**
     * Create an aliased <code>Cartrawler_dev_internal.dbo.table_name</code> table reference
     */
    public TableName(Name alias) {
        this(alias, TABLE_NAME);
    }

    private TableName(Name alias, Table<TableNameRecord> aliased) {
        this(alias, aliased, null);
    }

    private TableName(Name alias, Table<TableNameRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TableName(Table<O> child, ForeignKey<O, TableNameRecord> key) {
        super(child, key, TABLE_NAME);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dbo.DBO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.TABLE_NAME_PK__TABLE_NA__3213E83F6427AB42);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TableNameRecord, Integer> getIdentity() {
        return Keys.IDENTITY_TABLE_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TableNameRecord> getPrimaryKey() {
        return Keys.PK__TABLE_NA__3213E83F6427AB42;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TableNameRecord>> getKeys() {
        return Arrays.<UniqueKey<TableNameRecord>>asList(Keys.PK__TABLE_NA__3213E83F6427AB42);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<TableNameRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<TableNameRecord, ?>>asList(Keys.GUID);
    }

    public Plancontract plancontract() {
        return new Plancontract(this, Keys.GUID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TableName as(String alias) {
        return new TableName(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TableName as(Name alias) {
        return new TableName(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TableName rename(String name) {
        return new TableName(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TableName rename(Name name) {
        return new TableName(name, null);
    }
}
